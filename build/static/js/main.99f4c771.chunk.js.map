{"version":3,"sources":["assets/img/geosmart_logo.jpg","assets/img/trofeo.jpg","assets/img/user.png","assets/img/homePage/Geosmartlogo.png","assets/img/homePage/BWLogo.png","assets/img/map.jpg","assets/img/flag.png","assets/img/place.jpg","assets/img/courses/learntic.png","components/Chat/Contact.js","redux/data/server.js","components/Chat/Sidepanel/Sidepanel.js","websocket.js","components/Chat/Chat.js","components/elfooter/Copyright.js","assets/JSS/userManagement/Styles.js","redux/actions/loginUser.js","redux/actions/logoutUser.js","redux/actions/updateUser.js","redux/reducers/user.js","redux/store.js","redux/common/checkToken.js","views/LoginPage.js","views/SignupPage.js","views/HomePage.js","components/gameSelection/GameCard.js","views/Games.js","components/Loader/Loader.js","views/Questions.js","views/Profile.js","views/UpdateUser.js","views/Mapgame.js","components/Navbar.js","views/BestScores.js","views/MyRecords.js","views/Courses.js","index.js"],"names":["module","exports","Contact","props","to","chatURL","style","color","className","status","src","picURL","alt","name","URL","Sidepanel","state","chats","getUserChats","a","console","log","user","username","axios","post","query","chats_object","setState","data","getChatsByUsername","this","activeChats","map","c","key","id","GeoLogo","profile_picture","aria-hidden","htmlFor","type","placeholder","React","Component","connect","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","JSON","stringify","command","onmessage","e","onerror","message","onclose","close","parsedData","parse","Object","keys","length","messages","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","Chat","sendMessageHandler","event","preventDefault","messageObject","match","params","chatID","newChatMessage","messageChangeHandler","target","value","renderMessages","currentUser","i","arr","marginBottom","author","UserImage","minutesAgo","Math","round","Date","getTime","timestamp","scrollToBottom","messagesEnd","scrollIntoView","behavior","initializeChat","addCallbacks","setMessages","bind","addMessage","fetchMessages","newProps","disconnect","component","reverse","roomname","float","clear","ref","el","onSubmit","onChange","required","Copyright","Typography","variant","align","Link","href","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","loginUser","user_object","payload","logoutUser","updateUser","defaultState","localStorage","getItem","reducer","action","loginUserType","setItem","token","removeItem","combineReducers","store","createStore","getState","dispatchLogout","dispatch","checkToken","trim","resp","validateToken","valid","useState","setUsername","password","setPassword","classes","Styles","history","useHistory","Grid","container","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","onClick","alert","then","response","push","pathname","catch","Box","mt","SignupPage","firstname","setFirstname","lastname","setLastname","cpassword","setCpassword","country","setCountry","get","flag","message_object","contact_object","createContact","participantes_object","parts","participantes","update_parts_object","updateChat","createUser","handleSubmit","justifyContent","border","background","center","cursor","table","top","position","HomePage","size","fontFamily","m","logo","logobw","face","GameCard","gameConfiguration","Card","borderRadius","boxShadow","CardActionArea","CardMedia","gameImage","title","CardContent","gutterBottom","gameName","gameDescription","mapGame","Tooltip","InputLabel","Select","labelId","gameValue","handleFunctionContinent","MenuItem","CardActions","onClickConfiguration","onClickLeaderboard","onClickMyRecords","Games","map_rounds","flag_continent","place_continent","minHeight","handle_flag_continent","FlagImage","gametype","filter","handle_map_rounds","MapImage","rounds","handle_place_continent","PlaceImage","Loader","textAlign","CircularProgress","thickness","Questions","mostrar_boton_next","correct_selected","score","current_question","questions","questionsx","_id","statement","optionA","optionB","optionC","optionD","ans","category","continent","created_at","Updated_at","id_user","date_played","id_game","error","scoreRequest","location","gameQuestions","preguntas","getQuestions","question","answer","points","acertado","total_score","toISOString","insertScore","opbtn","fontWeight","fontSize","minWidth","Trofeo","reiniciar","nextQuestion","chooseAnswer","overflow","profile_image","subtitle","direction","marginLeft","slice","indexOf","imem","newUser","npassword","setNpassword","setProfilePicture","uploadValue","setUploadValue","fileName","setFilename","isValid","Container","maxWidth","Input","file","files","task","firebase","storage","put","on","snapshot","percentage","bytesTransferred","totalBytes","getDownloadURL","handleUpload","marginRight","max","icons_urls","mapStylesFull","featureType","elementType","stylers","visibility","GoogleMapComp","withGoogleMap","items","options","random_icon_index","floor","random","icon","url","lat","latitude","lng","longitude","draggable","choose","defaultCenter","defaultZoom","defaultOptions","zoomControl","styles","Mapgame","gameLength","countriesByContinent","insertedScore","padding","containerElement","mapElement","option","outItemLeft","textDecoration","outItemRight","Navbar","replace","logOut","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","hover","TableRow","rows","setRows","score_object","bestScoreByGame","useEffect","getScores","TableContainer","Table","aria-label","TableHead","TableBody","element","ID","scope","ID_User","Score","DatePlayed","ID_Game","bestScoreByUserandGame","link","maxHeight","course_object","split","getCourses","LearnticLogo","aling","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthRoute","Root","Home","Signup","Login","BestScores","Profile","UpdateUser","MyRecords","Courses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.99f4c771.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/geosmart_logo.b584ec82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trofeo.6e8f5de9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user.2412c938.png\";","module.exports = __webpack_public_path__ + \"static/media/Geosmartlogo.a0465ace.png\";","module.exports = __webpack_public_path__ + \"static/media/BWLogo.fe21ac4b.png\";","module.exports = __webpack_public_path__ + \"static/media/map.4a0d0ee2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flag.7fbbfd24.png\";","module.exports = __webpack_public_path__ + \"static/media/place.3cbd4b3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/learntic.0ce8c98a.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Contact = (props) => (\n    <NavLink to={`${props.chatURL}`} style={{color: '#fff'}}>\n        <li className=\"contact\">\n            <div className=\"wrap\">\n                <span className={`contact-status ${props.status}`}></span>\n                <img src={props.picURL} alt=\"\" />\n                <div className=\"meta\">\n                    <p className=\"name\">{props.name}</p>\n                    {/* <p className=\"preview\">You just got LITT up, Mike.</p> */}\n                </div>\n            </div>\n        </li>\n    </NavLink>\n);\n\nexport default Contact;","//const host = '23.23.230.33';\n//const port = '5000';\n//const host = '3.92.249.155';\n//const port = '5230';\n//const host = '3.92.114.227';\nconst host = '34.206.124.229';\nconst port = '5230';\n//const port = '80';\n//const host = '35.174.123.91';\n//const port = '5000';\nconst entryPoint = 'graphql';\nexport const URL = `http://${host}:${port}/${entryPoint}`;\n","import React from 'react'\nimport axios from 'axios'\n//import Birb from '../../../assets/img/birb.jpg'\nimport GeoLogo from '../../../assets/img/geosmart_logo.jpg'\nimport UserImage from '../../../assets/img/user.png'\nimport Contact from '../Contact'\nimport { connect } from 'react-redux';\nimport { URL } from \"../../../redux/data/server\";\n\nclass Sidepanel extends React.Component {\n\n    state = { \n        chats: [],\n    }\n\n    componentDidMount() {\n        this.getUserChats()\n    }\n\n    getUserChats = async () => { \n        // axios.defaults.headers = {\n        //     \"Content-Type\": \"application/json\",\n        //    // \"Access-Control-Allow-Origin\": \"*\"\n        //     //Authorization: `Token ${token}`\n        // };\n        console.log(this.props.user.username)\n        //axios.get(`http://127.0.0.1:8000/api/chat?username=${this.props.user.username}`) //localhost\n        //axios.get(`http://18.210.193.21:8000/api/chat?username=${this.props.user.username}`) //remote node\n        try {\n        const chats_object = await axios.post(URL,{\n            query: `\n            query{\n                getChatsByUsername(\n                  username: \"${this.props.user.username}\"\n                ) {\n                  id\n                  participantes\n                  messages\n                }\n              }\n          `\n        })\n\n        this.setState({\n            chats: chats_object.data.data.getChatsByUsername\n        });\n        } catch(err) {\n            console.log(err);\n          }\n        // .then(res => {\n        //     this.setState({\n        //         chats: res.data.getChatsByUsername\n        //     });\n        // });\n\n    }\n    \n    render(){\n        const activeChats = this.state.chats.map(c => {\n            return (\n                <Contact \n                    key ={c.id}\n                    name ={c.id}\n                    picURL={GeoLogo}\n                    status=\"online\"\n                    chatURL={`/chat/${c.id}`}\n                    />\n            )\n        })\n\n        var user = this.props.user;\n\n        return(\n            <div id=\"sidepanel\">\n        <div id=\"profile\">\n            <div className=\"wrap\">\n                <img id=\"profile-img\" src={user.profile_picture} className=\"online\" alt=\"\" />\n        <p id=\"profile-name\">{user.username}</p>\n                <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\n                <div id=\"status-options\">\n                    <ul>\n                        <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span> <p>Online</p></li>\n                        <li id=\"status-away\"><span className=\"status-circle\"></span> <p>Away</p></li>\n                        <li id=\"status-busy\"><span className=\"status-circle\"></span> <p>Busy</p></li>\n                        <li id=\"status-offline\"><span className=\"status-circle\"></span> <p>Offline</p></li>\n                    </ul>\n                </div>\n                <div id=\"expanded\">\n                    {/* <label htmlFor=\"twitter\"><i className=\"fa fa-facebook fa-fw\" aria-hidden=\"true\"></i></label>\n                    <input name=\"twitter\" type=\"text\" value=\"mikeross\" />\n                    <label htmlFor=\"twitter\"><i className=\"fa fa-twitter fa-fw\" aria-hidden=\"true\"></i></label>\n                    <input name=\"twitter\" type=\"text\" value=\"ross81\" />\n                    <label htmlFor=\"twitter\"><i className=\"fa fa-instagram fa-fw\" aria-hidden=\"true\"></i></label>\n                    <input name=\"twitter\" type=\"text\" value=\"mike.ross\" /> */}\n                </div>\n            </div>\n        </div>\n        <div id=\"search\">\n            <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\n            <input type=\"text\" placeholder=\"Search contacts...\" />\n        </div>\n        <div id=\"contacts\">\n            <ul>\n                {activeChats}\n                {/* <li className=\"contact\">\n                    <div className=\"wrap\">\n                        <span className=\"contact-status busy\"></span>\n                        <img src={Birb} alt=\"\" />\n                        <div className=\"meta\">\n                            <p className=\"name\">Grupo2</p>\n                            <p className=\"preview\">Grupo de avistamiento de aves. Más infomación llamar al ....</p>\n                        </div>\n                    </div>\n                </li>\n                <li className=\"contact active\">\n                    <div className=\"wrap\">\n                        <span className=\"contact-status online\"></span>\n                        <img src={GeoLogo} alt=\"\" />\n                        <div className=\"meta\">\n                            <p className=\"name\" id=\"lateral-group-name\">groupname</p>\n                            <p className=\"preview\" id=\"group-lobby\">group description.</p>\n                        </div>\n                    </div>\n                </li> */}\n            </ul>\n        </div>\n        <div id=\"bottom-bar\">\n            <button id=\"addcontact\"><i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i> <span>Add chat</span></button>\n            <button id=\"settings\"><i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i> <span>Settings</span></button>\n        </div>\n    </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = (state) => { // get user in the redux store\n    return {\n      user: state.user,\n    };\n  };\n\n//export default Sidepanel;\nexport default connect(mapStateToProps, {})(Sidepanel)","class WebSocketService {\n    \n    static instance = null;\n    callbacks = {};\n    \n    static getInstance(){\n        if(!WebSocketService.instance){\n            WebSocketService.instance = new WebSocketService();\n        }\n        return WebSocketService.instance;\n    }\n\n    constructor(){\n        this.socketRef = null;\n    }\n\n    connect(chatUrl){\n        //const path = `ws://127.0.0.1:8000/ws/chat/${chatUrl}/`; //For Localhost\n        const path = `ws://18.210.193.21:8000/ws/chat/${chatUrl}/`; //For remote node's static IP\n        console.log(path);\n        this.socketRef = new WebSocket(path);\n        this.socketRef.onopen = () => {\n            console.log('websocket open');\n        };\n\n        this.socketNewMessage(JSON.stringify({\n            command: 'buscar_mensajes'\n        }))\n\n        this.socketRef.onmessage = e => {\n            // sending a message\n            this.socketNewMessage(e.data);\n        }\n        this.socketRef.onerror = e => {\n            console.log(e.message);\n        }\n        this.socketRef.onclose = () => {\n            console.log('websocket is closed');\n            this.connect();\n        }\n    }\n\n    disconnect(){\n        this.socketRef.close();\n    }\n\n    socketNewMessage(data){\n        const parsedData = JSON.parse(data);\n        const command = parsedData.command;\n        if(Object.keys(this.callbacks).length === 0){\n            return;\n        }\n        if (command === 'messages_dump'){\n            this.callbacks[command](parsedData.messages);\n        }\n        if(command === 'nuevo_mensaje'){\n            this.callbacks[command](parsedData.message);\n        }\n    }\n\n    fetchMessages(username, chatId){\n        this.sendMessage({\n            command: 'buscar_mensajes', \n            username: username,\n            chatId: chatId\n        });\n    }\n\n    newChatMessage(message){\n        this.sendMessage({\n            command: 'nuevo_mensaje', \n            from: message.from, \n            message: message.content,\n            chatId: message.chatId\n        });\n    }\n\n    addCallbacks(messagesCallback, newMessageCallback){\n        this.callbacks['messages_dump'] = messagesCallback;\n        this.callbacks['nuevo_mensaje'] =  newMessageCallback;  \n    }\n\n    sendMessage(data){\n        try{\n            this.socketRef.send(JSON.stringify({ ...data}))\n        } catch (err){\n            console.log(err.message);\n        }\n    }\n\n    state(){\n        return this.socketRef.readyState;\n    }\n\n    waitForSocketConnection(callback){\n        const socket = this.socketRef;\n        const recursion = this.waitForSocketConnection;\n        setTimeout(\n            function(){\n                if(socket.readyState === 1){\n                    console.log('connection is secure');\n                    if(callback != null){\n                        callback();\n                    }\n                    return;\n                } else {\n                    console.log('waiting for connection...');\n                    recursion(callback);\n                }\n            }, 1);\n\n    }\n\n}\n\nconst WebSocketInstance = WebSocketService.getInstance();\n\nexport default WebSocketInstance;","import React from 'react';\nimport chatStyle from '../../assets/css/chat.css'\nimport Sidepanel from './Sidepanel/Sidepanel'\nimport GeoLogo from '../../assets/img/geosmart_logo.jpg'\nimport UserImage from '../../assets/img/user.png'\nimport WebSocketInstance from '../../websocket';\nimport { connect } from 'react-redux';\n\n\nfunction TimeAgo(minutesAgo) {\n        \n    if(minutesAgo < 60){\n        return <small>\n            Hace {minutesAgo} minutos\n        </small> \n    }else if(minutesAgo >= 60 && minutesAgo < 60*24){\n        return <small>\n            Hace {Math.round(minutesAgo/60)} horas\n        </small> \n    } else if(minutesAgo >= 60*24){\n        return <small>\n            Hace {Math.round(minutesAgo/(60*24))} días\n            </small>\n    }\n}\n\nfunction roomnameText(roomname){\n    if(roomname === 'lobby'){\n        return \"Elija el grupo de chat en la parte izquierda...\";\n    } else {\n        return roomname;\n    }\n}\n\nclass Chat extends React.Component{\n\n    state = { message: '' }\n\n    initializeChat(){\n        this.waitForSocketConnection(() => {\n                WebSocketInstance.addCallbacks(\n                    this.setMessages.bind(this),\n                    this.addMessage.bind(this));\n            WebSocketInstance.fetchMessages(\n                this.props.currentUser,\n                this.props.match.params.chatID\n                );   \n            });\n            WebSocketInstance.connect(this.props.match.params.chatID);\n    }\n\n    constructor(props){\n        super(props)\n        this.initializeChat();\n    }\n\n    UNSAFE_componentWillReceiveProps(newProps){\n       //console.log(newProps);\n       //this.initializeChat();\n       if(this.props.match.params.chatID !== newProps.match.params.chatID){\n           WebSocketInstance.disconnect();\n           this.waitForSocketConnection(() => {\n            WebSocketInstance.fetchMessages(\n                this.props.currentUser,\n                this.props.match.params.chatID\n                );   \n            });\n            WebSocketInstance.connect(newProps.match.params.chatID);\n       }\n    }\n\n    waitForSocketConnection(callback){\n        const component = this;\n        setTimeout(\n            function(){\n                if(WebSocketInstance.state() === 1){\n                    console.log('connection is secure');\n                    callback();\n                    return;\n                } else {\n                    console.log('waiting for connection...');\n                    component.waitForSocketConnection(callback);\n                }\n            }, 1);\n\n    }\n\n    setMessages(messages){\n        this.setState({messages: messages.reverse()});\n    }\n\n    addMessage(message){\n        this.setState({\n            messages: [...this.state.messages, message]\n        });\n    }\n\n    sendMessageHandler = event =>{\n        event.preventDefault();\n        const messageObject = {\n            from: `${this.props.user.username}`,\n            content: this.state.message,\n            chatId: this.props.match.params.chatID\n        }\n        WebSocketInstance.newChatMessage(messageObject);\n        this.setState({\n            message: ''\n        })\n    }\n\n    messageChangeHandler = event =>{\n        this.setState({\n            message: event.target.value\n        });\n    }\n\n\n    renderMessages = (messages) => {\n        const currentUser = `${this.props.user.username}`;\n        return messages.map((message, i, arr) => (\n            <li \n                key={message.id}\n                style={{marginBottom: arr.length - 1 === i ? '300px' : '15px'}}\n                className ={message.author === currentUser ? 'sent' : 'replies'} >\n                <img src={UserImage} alt=\"\"/>\n                <p>\n                    <small>\n                    {message.author}\n                    </small>\n                    <br />\n                    {message.content}\n                    <br />\n                    <small>\n                    {TimeAgo(Math.round((new Date().getTime() - new Date(message.timestamp))/60000))}\n                    </small>\n                    {/* <small>\n                        \n                        {\n                        Math.round((new Date().getTime() - new Date(message.timestamp))/60000)\n                         } minutes ago\n                    </small> */}\n                </p>\n            </li>\n        ));\n    }\n\n    scrollToBottom = () => {\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\n    }\n\n    componentDidMount() {\n        this.scrollToBottom();\n    }\n\n    componentDidUpdate() {\n        this.scrollToBottom();\n    }\n\n    render(){\n        const messages = this.state.messages;\n\n        return(\n            <div id=\"frame\">\n            <Sidepanel />\n            <div className=\"content\">\n                <div className=\"contact-profile\">\n                    <img src={GeoLogo} alt=\"\" />\n                    <p id=\"upper-group-name\">{roomnameText(this.props.match.params.chatID)}</p>\n                    <div className=\"social-media\">\n                        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\n                        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\n                         <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\n                    </div>\n                </div>\n                <div className=\"messages\">\n                    <ul id=\"chat-log\">\n                        {\n                            messages &&\n                            this.renderMessages(messages)\n                        }\n                        <div style={{ float:\"left\", clear: \"both\" }}\n                        ref={(el) => { this.messagesEnd = el; }}>\n                    </div>\n                    </ul>\n                </div>\n                <div className=\"message-input\">\n                    <form onSubmit={this.sendMessageHandler}>\n                        <div className=\"wrap\">\n                        <input \n                            onChange={this.messageChangeHandler}\n                            value={this.state.message}\n                            required\n                            id =\"chat-message-input\" type=\"text\" placeholder=\"Write your message...\" />\n                        <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\n                        <button id=\"chat-message-submit\" className=\"submit\">\n                        <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\n                        </button>\n                        </div>\n                    </form>\n\n                </div>\n            </div>\n        </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => { // get user in the redux store\n    return {\n      user: state.user,\n    };\n  };\n\nexport default connect(mapStateToProps, {})(Chat);","import React from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\n\nexport default function Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"/\">\n        Geosmart\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n};\n\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/collection/15780809)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor:\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: '#7ab648',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    backgroundColor: '#3a7ca4',\n  },\n}));\n\nexport default useStyles;","export const type = 'loginUser';\n\nconst loginUser = (user_object) => {\n  return {\n    type,\n    payload: {\n      user_object\n    },\n  };\n};\n\nexport default loginUser;\n","export const type = 'logoutUser';\n\nconst logoutUser = () => {\n  return {\n    type,\n    payload: {\n      //user_object\n    },\n  };\n};\n\nexport default logoutUser;\n","export const type = 'updateUser';\n\nconst updateUser = (user_object) => {\n  return {\n    type,\n    payload: {\n      user_object\n    },\n  };\n};\n\nexport default updateUser;\n","import {type as loginUserType} from '../actions/loginUser';\nimport {type as updateUserType} from '../actions/updateUser';\nimport {type as logOutUserType} from '../actions/logoutUser';\n\nconst defaultState = JSON.parse(localStorage.getItem('user'));\n\nfunction reducer(state = defaultState, action) {\n  switch(action.type) {\n    case loginUserType: {\n      console.log(action.payload.user_object);\n      localStorage.setItem('user', JSON.stringify(action.payload.user_object));\n      localStorage.setItem('token', JSON.stringify(action.payload.user_object.token));\n      return state = action.payload.user_object; //se establece en el estado el objeto del user ya logeado\n    }\n    case updateUserType: {\n      console.log(action);\n      localStorage.setItem('user', JSON.stringify(action.payload.user_object));\n      return state = action.payload.user_object;\n    }\n    case logOutUserType:{\n      console.log(\"Log out user\");\n      localStorage.removeItem('user');\n      localStorage.removeItem('token');\n      return state = null;\n    }\n    default:\n      return state;\n  };\n};\n\nexport default reducer;\n","import { createStore,  combineReducers } from 'redux';\nimport user from './reducers/user';\n\nconst reducer =  combineReducers({\n  user,\n});\n\nconst store = createStore(reducer);\n\nconsole.log(store.getState())\n\nexport default store;","import { URL } from \"../data/server\";\nimport axios from 'axios';\nimport logoutUser from '../actions/logoutUser';\nimport store from '../store'\n\n\nfunction dispatchLogout(){\n  store.dispatch({type:\"logoutUser\"});\n}\n\nexport async function checkToken() {\n  const token = localStorage.getItem('token');\n  if(!token){\n     console.log('No token on storage')\n     return dispatchLogout();\n  }\n  console.log(\"cheking token \");\n  const resp = await axios.post(URL, {\n                query: `\n                query {\n                    validateToken(token: ${token.trim()}) {\n                      valid\n                    }\n                  }\n                `\n              })\n\n  console.log(resp)\n  const valid = resp.data.data.validateToken.valid;\n  if(valid == true){\n     return true;\n  }\n  return false;\n}\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\n\nimport React, { useState } from 'react';\nimport { connect } from \"react-redux\";\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useHistory } from \"react-router-dom\";\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\n\nimport Copyright from '../components/elfooter/Copyright';\nimport Styles from '../assets/JSS/userManagement/Styles';\nimport loginUser from '../redux/actions/loginUser';\nimport { URL } from \"../redux/data/server\";\n\nimport {checkToken} from \"../redux/common/checkToken\";\n\nconst LoginPage = ({ loginUser }) => {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const classes = Styles();\n  const history = useHistory();\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if(username.trim().length === 0 || password.trim().length === 0) {\n      alert(\"All fields must be filled\");\n    } else {\n      //logear al usuario\n      axios.post(URL, {\n        query: `\n          mutation {\n            loginUser(user: {\n              username: \"${username.trim()}\"\n              password: \"${password.trim()}\"\n            }) {\n              _id\n              firstname\n              lastname\n              username\n              country\n              profile_picture\n              created_at\n              flag\n              token\n            }\n          }\n        `\n      })\n      .then(response => {\n        if (response.status === 200) {\n          console.log(\"USUARIO: \"+response.data.data.loginUser)\n          loginUser(response.data.data.loginUser);\n\n          history.push({pathname:\"/games\"})\n        } else {\n          alert(\"Ups! Something went wrong\");\n        }\n      })\n      .catch(() => {\n        alert(\"Ups! Something went wrong\");\n      });\n    }\n\n    return;\n  }\n\n  return (\n    <div>\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Login\n            </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                onChange={(e) => setUsername(e.target.value)}\n                autoFocus\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <FormControlLabel\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\n                label=\"Remember me\"\n              />\n              <Button\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(e) => handleSubmit(e)}\n              >\n                Login\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    {\"Login as guest\"}\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link href=\"/signup\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  loginUser: (user) => dispatch(loginUser(user))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\n\nimport Copyright from '../components/elfooter/Copyright';\nimport Styles from '../assets/JSS/userManagement/Styles';\nimport { URL } from '../redux/data/server';\n\nconst SignupPage = () => {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [cpassword, setCpassword] = useState('');\n  const [country, setCountry] = useState('');\n\n  const classes = Styles();\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if(firstname.trim().length === 0 ||\n      lastname.trim().length === 0 ||\n      username.trim().length === 0 ||\n      password.trim().length === 0 ||\n      cpassword.trim().length === 0 ||\n      country.trim().length === 0\n      ) {\n        alert(\"All field must be filled\");\n    } else if(password.trim() !== cpassword.trim()) {\n      alert(\"The password and confirm password fields must be the same\");\n    } else {\n      // create new user\n      try {\n        const flag = await axios.get(\n          `https://restcountries.eu/rest/v2/name/${country}`\n        );\n\n        const message_object = await axios.post(URL, {\n          query: `\n            mutation {\n              createUser(user: {\n                firstname: \"${firstname.trim()}\"\n                lastname: \"${lastname.trim()}\"\n                username: \"${username.trim()}\"\n                password: \"${password.trim()}\"\n                country: \"${country.trim()}\"\n                flag: \"${flag.data[0].flag}\"\n                profile_picture: \"https://github.com/nicrodriguezval/images/blob/main/3382926.jpg?raw=true\"\n              }) {\n                message\n              }\n            }\n          `\n        });\n\n        //Creates contact for chat application\n        const contact_object = await axios.post(URL, {\n            query: `\n            mutation {\n              createContact(contact: {\n                username: \"${username.trim()}\",\n                firstname: \"${firstname.trim()}\",\n                lastname: \"${lastname.trim()}\",\n                friends: []}) {\n                username\n              }\n            }\n            `\n          });\n          console.log(\"Contact \" + contact_object.data.data.createContact.username + \" created \")\n        //Get all participants in the general chat (provisional query, must have getChatById query! )\n        const participantes_object = await axios.post(URL, {\n            query: `\n            query{\n              getChatsByUsername(\n                username: \"dummyuser\"\n              ) {\n                participantes\n              }\n            }\n            `\n          });\n        //Retrieves all participants from this chat\n        var parts = participantes_object.data.data.getChatsByUsername[0].participantes;\n        //Adds the current user to the participants list\n        parts.push(contact_object.data.data.createContact.username)\n        //Updates the chat general to have the recently created user\n        const update_parts_object = await axios.post(URL, {\n          query: `\n          mutation{\n            updateChat(\n              id: \"general\",\n              chat: {id: \"general\",\n              participantes: ${JSON.stringify(parts)},\n              }){\n              id\n            }\n          }\n          `\n        });\n        console.log(\"User joined chatroom \" + update_parts_object.data.data.updateChat.id + \" successfully \")\n\n        alert(message_object.data.data.createUser.message);\n      } catch(err) {\n        console.log(err);\n      }\n    }\n\n    return;\n  }\n\n  return (\n    <div>\n      <Grid container component=\"main\" className={classes.root}>\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  autoComplete=\"fname\"\n                  name=\"firstName\"\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  onChange={(e) => setFirstname(e.target.value)}\n                  fullWidth\n                  required\n                  autoFocus\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  autoComplete=\"lname\"\n                  onChange={(e) => setLastname(e.target.value)}\n                  required\n                />\n                <TextField\n                  variant=\"outlined\"\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"username\"\n                  label=\"Username\"\n                  name=\"username\"\n                  autoComplete=\"username\"\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    margin=\"normal\"\n                    autoComplete=\"password\"\n                    name=\"password\"\n                    variant=\"outlined\"\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    required\n                    fullWidth\n                    onChange={(e) => setPassword(e.target.value)}\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    id=\"cpassword\"\n                    label=\"Confirm Password\"\n                    type=\"password\"\n                    name=\"cpassword\"\n                    autoComplete=\"confirm-password\"\n                    required\n                    fullWidth\n                    onChange={(e) => setCpassword(e.target.value)}\n                  />\n                </Grid>\n                <TextField\n                  margin=\"normal\"\n                  variant=\"outlined\"\n                  required\n                  fullWidth\n                  id=\"country\"\n                  label=\"Country\"\n                  name=\"country\"\n                  autoComplete=\"country\"\n                  onChange={(e) => setCountry(e.target.value)}\n                />\n                <Button\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"primary\"\n                  className={classes.submit}\n                  onClick={(e) => handleSubmit(e)}\n                >\n                  Sign Up\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"/login\" variant=\"body2\">\n                      Already have an account? Login\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Box mt={5}>\n                <Copyright />\n              </Box>\n            </form>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default SignupPage;\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\n\nimport React from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\n\nimport logo from '../assets/img/homePage/Geosmartlogo.png';\nimport logobw from '../assets/img/homePage/BWLogo.png';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    border: 'black',\n    background: '#3497d4',\n  },\n  item: {\n    width: '100%',\n    background: '#3F51B5',\n    'textAlign': 'center',\n    'borderRadius': '5px',\n    'marginTop': '120px'\n  },\n  center: {\n    cursor: 'pointer',\n    display: 'center',\n    justifyContent: 'center',\n    'margin': 'auto',\n    width: '250px',\n    'float': 'left'\n  },\n  table:{\n    width:'100%',\n    display:'table'\n  },\n  top:{\n    display: 'table-cell',\n    position: 'relative',\n    width:'100%',\n    height: '100px',\n    'background-color': 'rgba(89,144,222,.6)',\n    'vertical-align':'middle'\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst HomePage = () => {\n  const history = useHistory();\n  const routeChange1 = () =>{\n    const path = '/login';\n    history.push(path);\n  };\n\n  const routeChange2 = () =>{\n    const path = '/signup';\n    history.push(path);\n  };\n\n  const routeChange3 = () =>{\n    const path = '/play/map';\n    history.push(path);\n  };\n\n  const classes = useStyles();\n  return (\n    <div style={{height: \"100vh\"}}>\n      <Grid container className={classes.container}>\n        <font color = \"white\" size = \"80\">\n          <h1 style={{fontFamily: 'system-ui'}}>\n            Welcome to Geosmart app.\n          </h1>\n        </font>\n        <Grid item m={12} className={classes.item} >\n          <div style={{display: 'flex', flexDirection: 'column'}}>\n            <div className ={classes.center}>\n              <img src={logo} alt=\"Logo\" width=\"308\" height=\"300\" onClick={routeChange1} />\n            </div>\n            <div className ={classes.center}>\n              <img src={logobw} alt=\"Logo2\" width=\"328\" height=\"320\" onClick={routeChange2} />\n            </div>\n            <a onClick={routeChange3}>Test map</a>\n          </div>\n        </Grid>\n        <Grid>\n          <font color = \"white\" face = \"Garamond\">\n            <h2 style={{fontFamily: 'system-ui'}}>\n              Learn Geography by Playing!\n            </h2>\n            <h2 style={{fontFamily: 'system-ui'}}>\n              Click the color logo to login, or the black and white logo to sign up.\n            </h2>\n          </font>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport Tooltip from '@material-ui/core/Tooltip';\n\nconst GameCard = (gameConfiguration) => {\n  return (\n    <Card style={{margin:'3em', height: '100%', width: '100%', borderRadius: '25px',\n                  boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'}}>\n      <CardActionArea style={{marginTop: '2em'}}>\n        <CardMedia\n          style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\n          image={gameConfiguration.gameImage}\n          title=\"Contemplative Reptile\" />\n        <CardContent>\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n            { gameConfiguration.gameName }\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n            { gameConfiguration.gameDescription }\n          </Typography>\n          {\n            gameConfiguration.mapGame ?\n              <>\n                <Tooltip title=\"Number of game rounds\">\n                  <InputLabel style={{marginTop: '2em'}}>Number of rounds: </InputLabel>\n                </Tooltip>\n                <Select\n                  style={{width: '100%'}}\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={gameConfiguration.gameValue}\n                  onChange={gameConfiguration.handleFunctionContinent}\n                >\n                  <MenuItem value={\"5\"}>5 rounds</MenuItem>\n                  <MenuItem value={\"6\"}>6 rounds</MenuItem>\n                  <MenuItem value={\"7\"}>7 rounds</MenuItem>\n                  <MenuItem value={\"8\"}>8 rounds</MenuItem>\n                  <MenuItem value={\"9\"}>9 rounds</MenuItem>\n                  <MenuItem value={\"10\"}>10 rounds</MenuItem>\n                </Select>\n              </>\n             :\n              <>\n                <Tooltip title=\"Restrict game questions to a given continent\">\n                  <InputLabel style={{marginTop: '2em'}}>Only questions from: </InputLabel>\n                </Tooltip>\n                <Select\n                  style={{width: '100%'}}\n                  labelId=\"demo-simple-select-label\"\n                  id=\"demo-simple-select\"\n                  value={gameConfiguration.gameValue}\n                  onChange={gameConfiguration.handleFunctionContinent}\n                >\n                  <MenuItem value={\"Global\"}>All the world</MenuItem>\n                  <MenuItem value={\"America\"}>America</MenuItem>\n                  <MenuItem value={\"Asia\"}>Asia</MenuItem>\n                  <MenuItem value={\"Africa\"}>África</MenuItem>\n                  <MenuItem value={\"Europe\"}>Europe</MenuItem>\n                  <MenuItem value={\"Oceania\"}>Oceania</MenuItem>\n                </Select>\n              </>\n            }\n        </CardContent>\n      </CardActionArea>\n\n      <CardActions>\n        <Button size=\"small\" color=\"primary\" style={{color: 'white', backgroundColor: '#00bcd4', margin: '0.5em', marginBottom: '1em'}}\n                onClick={gameConfiguration.onClickConfiguration}\n                >\n          Play now\n        </Button>\n\n        {/*\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#4CAF50', margin: '1em'}}>\n          Play multiplayer\n        </Button>\n        */}\n\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#9C27B0', margin: '0.5em', marginBottom: '1em'}}\n                  onClick={gameConfiguration.onClickLeaderboard}\n                >\n          Leaderboard\n        </Button>\n\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#FF5722', margin: '0.5em', marginBottom: '1em'}}\n                  onClick={gameConfiguration.onClickMyRecords}\n                >\n          My Records\n        </Button>\n\n      </CardActions>\n    </Card>\n  )\n}\n\nexport default GameCard;\n","import React from 'react';\nimport { connect } from \"react-redux\";\n\nimport GameCard from '../components/gameSelection/GameCard';\nimport MapImage from '../assets/img/map.jpg'\nimport FlagImage from '../assets/img/flag.png'\nimport PlaceImage from '../assets/img/place.jpg'\nimport {checkToken} from \"../redux/common/checkToken\";\n\n\nclass Games extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map_rounds: \"5\",\n      flag_continent: \"Global\",\n      place_continent: \"Global\"\n    };\n  }\n\n  componentDidMount() {\n    checkToken();\n    //console.log(\"Usuario \"+JSON.stringify(this.props.user))\n\n  }\n\n  componentWillReceiveProps(props) {}\n\n  componentWillUnmount() {}\n\n  handle_map_rounds(e){\n    const value = e.target.value;\n    this.setState({map_rounds: value})\n  }\n\n  handle_flag_continent(e){\n    const value = e.target.value;\n    this.setState({flag_continent: value})\n  }\n\n  handle_place_continent(e){\n    const value = e.target.value;\n    this.setState({place_continent: value})\n  }\n\n  render() {\n    /*\n    if(!this.props.user){\n      return(\n        <div style={{margin: \"10em\",fontSize: \"20px\", fontWeight: 600,textAlign: \"center\"}}>\n         La sesión ha expirado\n        </div>\n      )\n    }*/\n    return (\n      <div style={{width: '100%',backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)', minHeight: '100vh'}}>\n        <div style={{display: 'flex'}}>\n          <GameCard\n            gameName=\"Recognize the flag\"\n            gameDescription=\"Recognize to which country the indicated flag belongs\"\n            handleFunctionContinent={(e) => this.handle_flag_continent(e)}\n            gameImage={FlagImage}\n            gameValue={this.state.flag_continent}\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"2\"})}\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"2\"})}\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/flags\", filter: this.state.flag_continent, gametype: \"flags\"})}\n            />\n\n          <GameCard\n            mapGame={true}\n            gameName=\"Locate the country\"\n            gameDescription=\"Locate the indicated country on our interactive map on a given series of rounds\"\n            handleFunctionContinent={(e) => this.handle_map_rounds(e)}\n            gameImage={MapImage}\n            gameValue={this.state.map_rounds}\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"1\"})}\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"1\"})}\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/map\", rounds: this.state.map_rounds})}\n            />\n\n          <GameCard\n            gameName=\"Recognize the place\"\n            gameDescription=\"Recognize to which country the indicated representative place belongs\"\n            handleFunctionContinent={(e) => this.handle_place_continent(e)}\n            gameImage={PlaceImage}\n            gameValue={this.state.place_continent}\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"3\"})}\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"3\"})}\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/places\", filter: this.state.place_continent, gametype: \"places\"})}\n            />\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Games);\n","import React from 'react';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\nclass Loader extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    //console.log(\"Usuario \"+JSON.stringify(this.props.user))\n\n  }\n\n  componentWillReceiveProps(props) {}\n\n  componentWillUnmount() {}\n\n\n  render() {\n    return (\n      <div style={{width: '100%',backgroundImage: 'linear-gradient(315deg, #7f53ac 0%, #647dee 74%)', minHeight: '50em'}}>\n       <div style={{textAlign: 'center'}}>\n            <CircularProgress\n            variant=\"indeterminate\"\n            style={{marginTop: '15em', color: '#FFEB3B'}}\n            size={200}\n            thickness={10}\n            value={100}\n            />\n          <h2 style={{fontFamily: 'system-ui', color: 'white'}}>Loading game...</h2>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import React from 'react';\n// import { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { connect } from \"react-redux\";\nimport Trofeo from '../assets/img/trofeo.jpg';\nimport Loader from '../components/Loader/Loader.js';\n\nimport axios from 'axios';\nimport { URL } from \"../redux/data/server\";\n\n\nconst question_points = 100;\n\nclass Questions extends React.Component  {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mostrar_boton_next: false,\n      correct_selected: false,\n      score: 0,\n      current_question: 0,\n      questions: null,\n      questionsx: [\n        {\n          _id: \"someid\",\n          statement: \"¿A que lugar pertenece esta bandera?\",\n          image: \"https://upload.wikimedia.org/wikipedia/en/thumb/0/05/Flag_of_Brazil.svg/1200px-Flag_of_Brazil.svg.png\",\n          optionA: \"Colombia\",\n          optionB: \"Brasil\",\n          optionC: \"Ecuador\",\n          optionD: \"Perú\",\n          ans: \"Brasil\",\n          category: \"flags\",\n          continent: \"America\",\n          created_at: \"somedate\",\n          Updated_at: \"otherdate\"\n        },\n        {\n          _id: \"someid\",\n          statement: \"¿A que lugar pertenece esta bandera?\",\n          image: \"https://upload.wikimedia.org/wikipedia/commons/d/df/Flag_of_Peru_%28state%29.svg\",\n          optionA: \"Colombia\",\n          optionB: \"Brasil\",\n          optionC: \"Ecuador\",\n          optionD: \"Perú\",\n          ans: \"Perú\",\n          category: \"flags\",\n          continent: \"America\",\n          created_at: \"somedate\",\n          Updated_at: \"otherdate\"\n        },\n        {\n        _id: \"someid\",\n        statement: \"¿A que lugar pertenece esta bandera?\",\n        image: \"https://upload.wikimedia.org/wikipedia/commons/9/9e/Flag_of_Japan.svg\",\n        optionA: \"Colombia\",\n        optionB: \"Brasil\",\n        optionC: \"Japón\",\n        optionD: \"Perú\",\n        ans: \"Japón\",\n        category: \"flags\",\n        continent: \"America\",\n        created_at: \"somedate\",\n        Updated_at: \"otherdate\"\n        }\n      ]\n    };\n  }\n  async insertScore(id_user, score, date_played, id_game){\n  const scoreRequest = await axios.post(URL, {\n        query: `\n        mutation{\n            createScore(score:{\n                       ID_User: \"${id_user}\",\n                       Score: ${score},\n                       DatePlayed: \"${date_played}\",\n                       ID_Game: \"${id_game}\"\n            }){\n                 message\n            }\n          }\n\n          `\n        }\n      ).catch(err => {\n        console.error(err)\n      })\n    console.log(scoreRequest)\n\n   }\n\nasync getQuestions(){\n  console.log(this.props.location.gametype)\n  console.log(this.props.location.filter)\n  const category = this.props.location.gametype;\n  let continent = this.props.location.filter;\n  if(continent === \"Global\"){\n     continent = \"\"; //no continent in particular\n  }\n\n  const questions = await axios.post(URL, {\n  query: `\n    query {\n      gameQuestions(category: \"${category}\", continent: \"${continent}\") {\n        categoria\n        ERROR\n        preguntas{\n          _id\n          statement\n          optionA\n          optionB\n          optionC\n          optionD\n          continent\n          image\n          ans\n        }\n       }\n      }\n      `\n    })\n  console.log(questions)\n  if(questions &&  questions.data &&  questions.data.data){\n    return this.setState({questions: questions.data.data.gameQuestions.preguntas})\n  }\n\n }\n\n\n  componentDidMount() {\n      console.log(this.props.location)\n      if(!this.props.location.gametype){\n         return this.props.history.push('/games')\n      }\n      if(!this.props.user){\n         return this.props.history.push('/home')\n      }\n      this.getQuestions();\n\n    }\n\n  componentDidUpdate(props) {\n\n\n  }\n\n  componentWillUnmount() {}\n\n\n  chooseAnswer(question, answer) {\n    let points = 0;\n    let acertado = false;\n    if(question.ans === answer){\n       points = question_points;\n       acertado = true;\n    }\n\n    return this.setState({score: this.state.score + points, mostrar_boton_next: true, correct_selected: acertado});\n  }\n\n  reiniciar(){\n    return this.setState({score:0, current_question:0})\n  }\n\n  nextQuestion(){\n\n    if(this.state.current_question + 1 >= this.state.questions.length){\n       //save score\n       var username = this.props.user.username;\n       var total_score = this.state.score + 1;\n       var date_played = new Date();\n       date_played = date_played.toISOString()\n       var id_game = \"2\";\n       if(this.props.location.gametype === \"places\"){\n          id_game = \"3\";\n       }\n       console.log(date_played)\n       this.insertScore(username, total_score, date_played, id_game);\n\n       //...\n       //\n    }\n\n\n    return this.setState({current_question: this.state.current_question + 1, mostrar_boton_next: false, correct_selected: false})\n  }\n\n  render() {\n    if(this.state.questions == null || this.state.questions == null){\n      return(\n        <Loader/>\n      )\n    }\n    const question = this.state.questions[this.state.current_question];\n    const opbtn = {color: 'white', backgroundColor: '#00bcd4', margin: '1em'}\n    const comp_style_flags = { backgroundImage: 'linear-gradient(15deg, #13547a 0%, #80d0c7 100%)',\n                               width: '100%', minHeight: '50em', fontFamily: 'system-ui'}\n\n    const comp_style_places = { backgroundImage: 'linear-gradient(to top, #09203f 0%, #537895 100%)',\n                                width: '100%', minHeight: '50em', fontFamily: 'system-ui'}\n\n    return (\n      <div style={this.props.location.gametype && this.props.location.gametype === \"flags\" ? comp_style_flags : comp_style_places}>\n       <div style={{display: 'flex', textAlign: 'center', flexDirection: 'column'}}>\n\n          {\n            this.props.location.gametype === \"flags\" ?\n              <h2 style={{color: 'white', marginTop: '1.5em', fontWeight: 600, fontSize: '3em'}}>Identify which country the flag belongs to</h2>\n            :\n              <h2 style={{color: 'white', marginTop: '1.5em', fontWeight: 600, fontSize: '3em'}}>Identify which country the place belongs to</h2>\n          }\n\n          <h3 className=\"score\">\n              <span style={{color: 'white'}}>Current score: </span>\n              {this.state.score}\n          </h3>\n\n          {\n            this.state.current_question >= this.state.questions.length ?\n              <Card style={{margin:'0 auto'}} elevation={10}>\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\n                  <CardMedia\n                    style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\n                    image={Trofeo}\n                    />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      The game is over. your score is: {this.state.score}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n\n                <CardActions>\n                 <div  style={{textAlign: 'center', margin: '0 auto'}}>\n                  <Button size=\"small\" color=\"primary\"  onClick={()=>this.props.history.push(\"/games\")}>\n                    Back to main menu\n                  </Button>\n                  <Button size=\"small\" color=\"primary\"  onClick={()=> this.reiniciar()}>\n                    Play again\n                  </Button>\n                 </div>\n                </CardActions>\n            </Card>\n            : null\n          }\n\n          {\n           question ?\n              <Card style={{margin:'0 auto'}} elevation={10}>\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\n                  <CardMedia\n                    style={{height: 140, width: 200, margin: '0 auto'}}\n                    image={question.image}\n                    title=\"Contemplative Reptile\"/>\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      Question {this.state.current_question}\n                    </Typography>\n                    {\n                      this.state.mostrar_boton_next === true ?\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{fontSize: '18px'}}>\n                        {\n                          this.state.correct_selected === true ?\n                           <span style={{color: '#07d607', fontWeight: 600}}>Correct! + {question_points}</span>\n                          :\n                           <span style={{color: 'red', fontWeight: 600}}>Incorrect!</span>\n                        }\n                      </Typography>\n                      :\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {question.statement}\n                      </Typography>\n                    }\n\n                  </CardContent>\n                </CardActionArea>\n\n                <CardActions>\n                {\n                  this.state.mostrar_boton_next === true ?\n                  <div  style={{textAlign: 'center', margin: '0 auto'}}>\n                   <Button size=\"small\" color=\"primary\" style={opbtn} onClick={()=>this.nextQuestion()}>\n                     Next question\n                   </Button>\n                  </div>\n\n                  :\n                  <div  style={{textAlign: 'center', margin: '0 auto'}}>\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionA)}>\n                     {question.optionA}\n                   </Button>\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionB)}>\n                     {question.optionB}\n                   </Button>\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionC)}>\n                     {question.optionC}\n                   </Button>\n                   <Button size=\"small\" color=\"primary\"  style={opbtn}  onClick={()=>this.chooseAnswer(question, question.optionD)}>\n                     {question.optionD}\n                   </Button>\n                  </div>\n                }\n\n                </CardActions>\n            </Card>\n\n            : null\n          }\n\n          {\n            this.props.location.filter && this.props.location.filter !== 'global' ?\n            <h3 style={{color: 'white', fontWeight: 600, fontSize: '2em'}}>Only questions from: {this.props.location.filter}</h3>\n            : null\n          }\n\n      </div>\n    </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    width: '100%',\n    overflow: 'hidden',\n    backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\n  },\n  paper: {\n    display: 'flex',\n    margin: 100,\n    width: '100%',\n    height: 500\n  },\n  profile_image: {\n    width: '100%',\n    height: '100%',\n  },\n  subtitle: {\n    display: 'flex',\n    flexDirection: 'row',\n    marginTop: '2em',\n  },\n  content: {\n    display: 'flex',\n    flexDirection: 'row',\n  }\n}));\n\nconst Profile = ({ user }) => {\n  const classes = useStyles();\n  const history = useHistory();\n\n  return (\n    <div className={classes.root}>\n      <Grid container direction=\"row\" spacing={2}>\n        <Card className={classes.paper}>\n          <Grid item xs={3}>\n            <CardMedia\n              className={classes.profile_image}\n              image={user.profile_picture}\n              title=\"Profile picture\"\n            />\n          </Grid>\n          <Grid item xs={9}>\n            <Grid direction=\"row\" spacing={2}>\n              <CardContent style={{marginLeft: '3em'}}>\n                <div style={{display: 'flex', flexDirection: 'row', marginTop: '2em'}}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                      Username\n                    </Typography>\n                  </Grid>\n                </div>\n                <div className={classes.content}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\">\n                      { user.username }\n                    </Typography>\n                  </Grid>\n                </div>\n                <div className={classes.subtitle}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                      Full name\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                      Created at\n                    </Typography>\n                  </Grid>\n                </div>\n                <div className={classes.content}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\">\n                      { user.firstname + ' ' + user.lastname }\n                    </Typography>\n                  </Grid>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\">\n                      { user.created_at.slice(0, user.created_at.indexOf('T')) }\n                    </Typography>\n                  </Grid>\n                </div>\n                <div className={classes.subtitle}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\n                      Country\n                    </Typography>\n                  </Grid>\n                </div>\n                <div className={classes.content}>\n                  <Grid item xs={6}>\n                    <Typography variant=\"subtitle1\">\n                      { user.country }\n                    </Typography>\n                    <img src={user.flag} alt=\"Logo\" height=\"7%\" />\n                    <Grid imem xs={3} style={{marginTop: '5em'}}>\n                      <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push({pathname:\"/update-user\"})}\n                      >\n                        update\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </div>\n              </CardContent>\n            </Grid>\n          </Grid>\n        </Card>\n      </Grid>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => { // get user in the redux store\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, {})(Profile)\n","import React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport firebase from 'firebase';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Container from '@material-ui/core/Container';\nimport Input from '@material-ui/core/Input';\nimport AddIcon from \"@material-ui/icons/Publish\";\n\nimport updateUser from '../redux/actions/updateUser';\nimport Copyright from '../components/elfooter/Copyright';\nimport Styles from '../assets/JSS/userManagement/Styles';\nimport { URL } from \"../redux/data/server\";\nimport {checkToken} from \"../redux/common/checkToken\";\n\nconst UpdateUser = ({ user, updateUser }) => {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [npassword, setNpassword] = useState('');\n  const [country, setCountry] = useState('');\n  const [profile_picture, setProfilePicture] = useState('');\n  const [uploadValue, setUploadValue] = useState(0);\n  const [fileName, setFilename] = useState('');\n  const classes = Styles();\n\n  function handleUpload(event) {\n    const file = event.target.files[0];\n    setFilename(file.name);\n    const storageRef = firebase.storage().ref(`/profile_picture/${user.username}`);\n    const task = storageRef.put(file);\n\n    task.on('state_changed', snapshot => {\n      let percentage = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\n      setUploadValue(percentage);\n    }, error => {\n      console.log(error.message);\n    }, () => {\n      task.snapshot.ref.getDownloadURL().then((value) => {\n        console.log(value);\n        setProfilePicture(value);\n        setUploadValue(100);\n      });\n    });\n  };\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if(password.trim().length === 0) {\n      alert(\"You must fill the current password field\");\n    } else if(password.trim() === npassword.trim()) {\n      alert(\"New password and current password are the same\");\n    } else if(firstname.trim().length === 0 &&\n              lastname.trim().length === 0 &&\n              username.trim().length === 0 &&\n              npassword.trim().length === 0 &&\n              country.trim().length === 0 &&\n              profile_picture.length === 0\n            ) {\n      alert(\"you need to have at least one field filled in addition to the password\");\n    } else {\n      try {\n        var flag = '';\n        if(country.trim().length > 0) {\n          flag = await axios.get(\n            `https://restcountries.eu/rest/v2/name/${country}`\n          );\n\n          flag = flag.data[0].flag;\n        }\n\n        const isValid = await checkToken();\n        console.log(isValid)\n        if(isValid == false){\n           return;\n        }\n\n        const user_object = await axios.post(URL, {\n          query: `\n            mutation {\n              updateUser(id: \"${user._id}\", user: {\n                firstname: \"${firstname.trim()}\"\n                lastname: \"${lastname.trim()}\"\n                username: \"${username.trim()}\"\n                password: \"${password.trim()}\"\n                new_password: \"${npassword.trim()}\"\n                country: \"${country.trim()}\"\n                profile_picture: \"${profile_picture}\"\n                flag: \"${flag}\"\n              }) {\n                _id\n                firstname\n                lastname\n                username\n                country\n                profile_picture\n                created_at\n                flag\n              }\n            }\n          `\n        });\n\n        if(user_object.status === 200) {\n          console.log(user_object);\n          updateUser(user_object.data.data.updateUser);\n          alert(\"User updated\");\n        }\n      } catch(err) {\n        console.log(err);\n        alert(\"Ups! some went wrong\");\n      }\n    }\n\n    return;\n  };\n\n  return (\n    <div>\n      <Container component=\"main\" maxWidth=\"sm\">\n        <div className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <UpdateIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Update Profile\n          </Typography>\n          <form className={classes.form} noValidate>\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"text\"\n              name=\"firstname\"\n              label=\"New Firstname\"\n              id=\"email\"\n              autoComplete=\"firstname\"\n              onChange={(e) => setFirstname(e.target.value)}\n              fullWidth\n              autoFocus\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"text\"\n              name=\"lastname\"\n              label=\"New Lastname\"\n              id=\"lastname\"\n              autoComplete=\"lastname\"\n              onChange={(e) => setLastname(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"text\"\n              name=\"username\"\n              label=\"New Username\"\n              id=\"username\"\n              autoComplete=\"username\"\n              onChange={(e) => setUsername(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"text\"\n              name=\"country\"\n              label=\"New Country\"\n              id=\"country\"\n              autoComplete=\"country\"\n              onChange={(e) => setCountry(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"password\"\n              name=\"npassword\"\n              label=\"New Password\"\n              id=\"npassword\"\n              autoComplete=\"new-password\"\n              onChange={(e) => setNpassword(e.target.value)}\n              fullWidth\n            />\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              type=\"password\"\n              name=\"password\"\n              label=\"Current Password\"\n              id=\"password\"\n              autoComplete=\"new-password\"\n              onChange={(e) => setPassword(e.target.value)}\n              fullWidth\n              required\n            />\n            <div style={{marginTop:\"1em\", display: 'flex', flexDirection: 'row'}}>\n              <label htmlFor=\"upload-photo\">\n                <Input\n                  style={{ display: \"none\"}}\n                  id=\"upload-photo\"\n                  name=\"upload-photo\"\n                  type=\"file\"\n                  onChange={e => handleUpload(e)}\n                />\n                <Button\n                  color=\"primary\"\n                  variant=\"contained\"\n                  component=\"span\"\n                  style={{backgroundColor: '#3a7ca4', marginRight: \"1.5em\"}}\n                >\n                  <AddIcon style={{marginRight: \"2px\"}}/> Upload photo\n                </Button>\n              </label>\n              <progress value={uploadValue} max=\"100\" style={{width: \"60%\", marginTop:\".7em\"}}/>\n            </div>\n            <Typography color=\"textSecondary\" variant=\"subtitle1\" style={{marginTop:'0.5em'}}>{fileName}</Typography>\n\n            <Button\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(e) => handleSubmit(e)}\n            >\n              Update\n            </Button>\n          </form>\n        </div>\n        <Box mt={8} style={{marginBottom:\"2em\"}}>\n          <Copyright />\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => { // get user in the redux store\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({ // update user in the redux store\n  updateUser: (newUser) => dispatch(updateUser(newUser))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUser)\n","import React from 'react';\nimport { connect } from \"react-redux\";\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport CardActions from '@material-ui/core/CardActions';\nimport Button from '@material-ui/core/Button';\nimport {\n  withGoogleMap,\n  GoogleMap,\n  Marker\n} from \"react-google-maps\";\nimport Trofeo from '../assets/img/trofeo.jpg'\nimport axios from 'axios';\nimport { URL } from \"../redux/data/server\";\nimport {checkToken} from \"../redux/common/checkToken\";\n\nconst question_points = 100;\nconst icons_urls = [\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/purple-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/pink-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/orange-dot.png\",\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/yellow-dot.png\"\n]\n\nconst mapStyles = {\n    featureType: \"administrative.country\",\n    elementType: \"labels\",\n    stylers: [\n        { visibility: \"off\" }\n    ]\n}\n\nconst mapStylesFull = {\n    featureType: \"all\",\n    elementType: \"labels\",\n    stylers: [\n        { visibility: \"off\" }\n    ]\n}\n\nconst st = {\n    \"featureType\": \"all\",\n    \"stylers\": [\n      { \"color\": \"#aad80e\" }\n    ]\n  }\n\nconst GoogleMapComp = withGoogleMap(props => {\n  const items = props.options.map((question, i) => {\n    const random_icon_index = Math.floor(Math.random() * icons_urls.length);\n    return(\n      <Marker\n        key={\"opt\"+i}\n        icon= {{url: icons_urls[random_icon_index] }}\n        title={\"option \"+i}\n        name={\"option \"+i}\n        position={{lat: question.latitude, lng: question.longitude }}\n        draggable={false}\n        onClick={(e) => {\n               props.choose(question)\n               }}\n       />\n     )\n  })\n\n  return(\n     <GoogleMap\n       defaultCenter={props.center}\n       defaultZoom={2}\n       defaultOptions={{\n            zoomControl: false, styles: [mapStylesFull]\n        }}>\n      {items}\n     </GoogleMap>\n   )});\n\nclass Mapgame extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mostrar_boton_next: false,\n      correct_selected: false,\n      gameLength: 5,\n      score: 0,\n      current_question: 0,\n      questions: null,\n    }\n  }\n\n  async getQuestions(){\n    /*\n    const isValid = await checkToken();\n    console.log(isValid)\n    if(isValid == false){\n       return;\n    }*/\n    const continent = 1 + Math.floor(Math.random() * 7);\n    const questions = await axios.post(URL, {\n    query: `\n      query {\n        countriesByContinent(id_continent: ${continent}) {\n          name\n          latitude\n          longitude\n          }\n        }\n        `\n      })\n    console.log(questions)\n    if(questions &&  questions.data &&  questions.data.data){\n      return this.setState({questions: questions.data.data.countriesByContinent})\n    }\n\n  }\n\n  async insertScore(id_user, score, date_played, id_game){\n    console.log('insert score on map game. score: '+score)\n    var insertedScore = await axios.post(URL, {\n        query: `\n        mutation{\n            createScore(score:{\n                       ID_User: \"${id_user}\",\n                       Score: ${score},\n                       DatePlayed: \"${date_played}\",\n                       ID_Game: \"${id_game}\"\n            }){\n                 message\n            }\n          }\n\n          `\n        }\n      ).catch(err => {\n        console.error(err)\n      })\n      console.log(insertedScore)\n   }\n\n  componentDidMount() {\n    this.getQuestions()\n    /*\n    if(!this.props.user){\n       return this.props.history.push('/home')\n    }*/\n\n    if(this.props.location.rounds){\n       this.setState({gameLength: this.props.location.rounds})\n    }\n\n  }\n\n\n  chooseAnswer(question, answer) {\n    console.log(answer)\n    let points = 0;\n    let acertado = false;\n    if(question.latitude === answer.latitude && question.longitude === answer.longitude ){\n       points = question_points;\n       acertado = true;\n    }\n\n    if(this.state.current_question + 1 >= this.state.gameLength){\n      //save score\n      var username = this.props.user.username;\n      var total_score = this.state.score + points + 1;\n      var date_played = new Date();\n      date_played = date_played.toISOString()\n      var id_game = \"1\";\n\n      this.insertScore(username, total_score, date_played, id_game)\n\n      //...\n      //\n   }\n\n    this.getQuestions()\n    return this.setState({score: this.state.score + points, mostrar_boton_next: true, correct_selected: acertado});\n  }\n\n  nextQuestion(){\n\n    return this.setState({current_question: this.state.current_question + 1, mostrar_boton_next: false, correct_selected: false});\n  }\n\n  reiniciar(){\n    return this.setState({score:0, current_question:0})\n  }\n\n  render() {\n    var answer = null;\n    const question = this.state.questions;\n    if(question){\n       answer = Math.floor(Math.random() * this.state.questions.length);\n    }\n\n    const opbtn = { color: 'white', backgroundColor: '#9C27B0', margin: '1em', padding: '0.7em',\n                    boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'\n                  }\n    return (\n      <div className=\"map_container\">\n       <div className=\"map_flexcontainer\" >\n          <h2 style={{color: 'white', fontWeight: 600, fontSize: '3em', maxWidth: '25em', margin: '0 auto', marginTop: '1.5em'}}>\n            Identify the location on the map by choosing the correct marker\n          </h2>\n\n          <h3 className=\"score\">\n              <span style={{color: 'white'}}>Current score: </span>\n              {this.state.score}\n          </h3>\n\n          {\n            this.state.current_question >= this.state.gameLength ?\n              <Card style={{margin:'0 auto'}} elevation={10}>\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\n                  <CardMedia\n                    style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\n                    image={Trofeo}\n                    />\n                  <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                      The game is over. your score is: {this.state.score}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    </Typography>\n                  </CardContent>\n                </CardActionArea>\n\n                <CardActions>\n                 <div  style={{textAlign: 'center', margin: '0 auto'}}>\n                  <Button size=\"small\" color=\"primary\"  onClick={()=>this.props.history.push(\"/games\")}>\n                    Back to main menu\n                  </Button>\n                  <Button size=\"small\" color=\"primary\"  onClick={()=> this.reiniciar()}>\n                    Play again\n                  </Button>\n                 </div>\n                </CardActions>\n            </Card>\n            : null\n          }\n\n          {\n             this.state.mostrar_boton_next ?\n             <Card style={{margin: '0 auto', width: '20em', padding: '2em', borderRadius: '12px', marginTop: '8em',\n                           boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'\n                          }}>\n               <div  style={{textAlign: 'center', margin: '0 auto', display: 'flex', flexDirection: 'column'}}>\n                 {\n                   this.state.correct_selected === true ?\n                    <span className=\"mapGameCorrect\">\n                        Correct! + {question_points}\n                    </span>\n                   :\n                    <span className=\"mapGameIncorrect\" >\n                        Incorrect!\n                    </span>\n                 }\n                <Button size=\"small\" color=\"primary\" style={opbtn} onClick={()=>this.nextQuestion()}>\n                  Next question\n                </Button>\n               </div>\n             </Card>\n             :\n              null\n          }\n\n          {\n            question && this.state.mostrar_boton_next !== true &&   this.state.current_question < this.state.gameLength ?\n             <>\n              <h2 style={{color: \"#FFEB3B\"}}>\n                {\"Locate \"+  this.state.questions[answer].name +\" in the map\"}\n              </h2>\n              <GoogleMapComp\n                   center = { { lat:  4.6097100, lng: -74.0817500 } }\n                   containerElement={ <div style={{ height: '100%', width: '100%' , overflow: 'hidden', margin: '0 auto'}} /> }\n                   mapElement={ <div className=\"map_element\" /> }\n                   options = {question}\n                   /*\n                   optionA =  { question[0]}\n                   optionB =  { question[1]}\n                   optionC =  { question[2]}\n                   optionD =  { question[3]}\n                   optionE =  { question[4]}\n                   */\n                   choose ={(option)=>this.chooseAnswer(question[answer], option)}\n\n                 />\n              </>\n              : null\n             }\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Mapgame);\n","import React from 'react';\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport logoutUser from '../redux/actions/logoutUser';\n\nconst outItemLeft = {\n  marginLeft: '0.6em', marginRight: '1em', color: '#dfdada', textDecoration: 'none', marginTop: '0.8em',\n  fontWeight: 600, fontSize: '26px', cursor: 'pointer'\n}\nconst outItemRight = {\n  marginLeft: 'auto', marginRight: '1em', color: '#dfdada', textDecoration: 'none', marginTop: '0.8em',\n  fontWeight: 600, fontSize: '26px', cursor: 'pointer'\n}\n\n\nclass Navbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Usuario \"+JSON.stringify(this.props.user))\n  }\n\n  logOut(){\n    this.props.logoutUser();\n  }\n\n  render() {\n    if(this.props.user == null){ //this.props.user == null\n       return(\n         <div style={{width: '100%', backgroundColor: '#192023', minHeight: '5em', fontFamily: 'system-ui'}}>\n           <div style={{display: 'flex', flexDirection: 'row'}}>\n             <Link style={outItemLeft} to=\"/home\">Home</Link>\n             <Link style={outItemRight}to=\"/login\">Login</Link>\n             <Link style={outItemLeft} to=\"/signup\">Sign up</Link>\n           </div>\n         </div>\n       )\n    }\n\n    return (\n      <div style={{width: '100%', backgroundColor: '#192023', minHeight: '5em', fontFamily: 'system-ui'}}>\n        <div style={{display: 'flex', flexDirection: 'row'}}>\n          <Link className=\"navbtn\" to=\"/games\">Games</Link>\n          <Link className=\"navbtn\" to=\"/profile\">Profile</Link>\n          <Link className=\"navbtn\" to=\"/update-user\">Update info</Link>\n          <Link className=\"navbtn\" to=\"/chat/lobby\" replace >Chat</Link>\n          <Link className=\"navbtn\" to=\"/courses\" replace >Learntic courses</Link>\n\n          <Link style={{marginLeft: 'auto', marginRight: '1em', color: '#e91e63', textDecoration: 'none', marginTop: '0.8em',\n                        fontWeight: 600, fontSize: '26px', cursor: 'pointer'}}\n                onClick={() => this.logOut()} to=\"/home\">\n                Log out\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => { // get user in the redux store\n  return {\n    user: state.user,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => ({ // update user in the redux store\n  //\n  logoutUser: () => dispatch(logoutUser())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from \"react-redux\";\nimport {checkToken} from \"../redux/common/checkToken\";\n\nimport axios from 'axios';\nimport { URL } from \"../redux/data/server\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst BestScore = (props) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState(0);\n  //var rows = [];\n\n  async function getScores() {\n    var gametype = 1;\n    if(props.location.gametype){\n       gametype = props.location.gametype;\n    }\n\n    try {\n      const isValid = await checkToken();\n      console.log(isValid)\n      if(isValid == false){\n         return;\n      }\n      const score_object = await axios.post(URL, {\n        query: `\n         query{\n           bestScoreByGame(ID_Game: \"${gametype}\"){\n             ID\n             ID_User\n             Score\n             DatePlayed\n             ID_Game\n           }\n         }\n\n       `\n      })\n      console.log(score_object)\n      if (score_object.status === 200) {\n        return setRows(score_object.data.data.bestScoreByGame);\n      } else {\n        alert(\"Ups! Something went wrong\");\n      }\n    } catch(err) {\n      console.error(err)\n    }\n  };\n\n  useEffect(() => {\n    getScores()\n    console.log(rows);\n  }, [] );\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell>Username</StyledTableCell>\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\n            <StyledTableCell align=\"right\">Game</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? rows.map(element =>\n            <StyledTableRow key={element.ID}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n              {element.ID}\n            </StyledTableCell>\n            <StyledTableCell align=\"right\">{element.ID_User}</StyledTableCell>\n            <StyledTableCell align=\"right\">{element.Score-1}</StyledTableCell>\n            <StyledTableCell align=\"right\">{element.DatePlayed}</StyledTableCell>\n\n            {element.ID_Game === \"1\" ?   <StyledTableCell align=\"right\">Recognize the location</StyledTableCell> : null}\n            {element.ID_Game === \"2\" ?   <StyledTableCell align=\"right\">Recognize the flag</StyledTableCell> : null}\n            {element.ID_Game === \"3\" ?   <StyledTableCell align=\"right\">Recognize the place</StyledTableCell> : null}\n\n\n          </StyledTableRow>) : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BestScore);\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\n\nimport React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { connect } from \"react-redux\";\n\nimport {checkToken} from \"../redux/common/checkToken\";\nimport axios from 'axios';\nimport { URL } from \"../redux/data/server\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nconst MyRecords = (props) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState(0);\n  //var rows = [];\n\n  async function getScores() {\n    var gametype = 1;\n    if(props.location.gametype){\n       gametype = props.location.gametype;\n    }\n    var username = props.user.username;\n\n    try {\n      const isValid = await checkToken();\n      console.log(isValid)\n      if(isValid == false){\n         return;\n      }\n      const score_object = await axios.post(URL, {\n        query: `\n        query{\n            bestScoreByUserandGame(ID_User: \"${username}\", ID_Game: \"${gametype}\"){\n               ID\n               ID_User\n               Score\n               DatePlayed\n               ID_Game\n\n            }\n          }\n\n\n       `\n      })\n      console.log(score_object)\n      if (score_object.status === 200) {\n        return setRows(score_object.data.data.bestScoreByUserandGame);\n      } else {\n        alert(\"Ups! Something went wrong\");\n      }\n    } catch(err) {\n      console.error(err)\n    }\n  }\n\n  useEffect(() => {\n    getScores()\n    console.log(rows);\n  }, [] )\n\n\n  return (\n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>ID</StyledTableCell>\n            <StyledTableCell>Username</StyledTableCell>\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\n            <StyledTableCell align=\"right\">Game</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? rows.map(element =>\n            <StyledTableRow key={element.ID}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n              {element.ID}\n            </StyledTableCell>\n            <StyledTableCell align=\"right\">{element.ID_User}</StyledTableCell>\n            <StyledTableCell align=\"right\">{element.Score-1}</StyledTableCell>\n            <StyledTableCell align=\"right\">{element.DatePlayed}</StyledTableCell>\n\n            {element.ID_Game == \"1\" ?   <StyledTableCell align=\"right\">Recognize the location</StyledTableCell> : null}\n            {element.ID_Game == \"2\" ?   <StyledTableCell align=\"right\">Recognize the flag</StyledTableCell> : null}\n            {element.ID_Game == \"3\" ?   <StyledTableCell align=\"right\">Recognize the place</StyledTableCell> : null}\n\n\n          </StyledTableRow>) : null}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MyRecords);\n","import React, { useEffect, useState } from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { connect } from \"react-redux\";\nimport {checkToken} from \"../redux/common/checkToken\";\nimport Typography from '@material-ui/core/Typography';\nimport LearnticLogo from '../assets/img/courses/learntic.png' \nimport axios from 'axios';\n\nconst link = 'http://54.198.239.79:3001/interface/all-courses';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n  table: {\n    minWidth: 650,\n  }\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n  },\n  container: {\n    maxHeight: 440,\n    marginTop:'20px'\n  },\n});\n\nconst Courses = (props) => {\n  const classes = useStyles();\n  const [rows, setRows] = useState(0);\n  //var rows = [];\n\n  async function getCourses() {\n    try {\n      const isValid = await checkToken();\n      if(isValid === false){\n         return;\n      }\n      const course_object = await axios.get(link)\n      console.log(course_object.data.data[0].split(', '))\n      if (course_object.status === 200) {\n        return setRows(course_object.data.data[0].split(', '));\n      } else {\n        alert(\"Ups! Something went wrong\");\n      }\n    } catch(err) {\n      console.error(err)\n    }\n  };\n\n  useEffect(() => {\n    getCourses()\n    console.log(rows);\n  }, [] );\n\n  var i = 1;\n\n  return (\n    <div className={classes.root}>\n      <div>\n        <Typography variant=\"h3\" style={{display: 'flex', justifyContent: 'center', padding: 15}}>\n          <img src={LearnticLogo} alt=\"LearnticLogo\" width=\"100\" height=\"100\"/><div style={{marginTop: '1em'}}>Courses</div>\n        </Typography>\n      </div>\n      <Table>\n        <TableHead>\n          <TableRow>\n            <StyledTableCell aling=\"center\">ID</StyledTableCell>\n            <StyledTableCell align=\"left\">Course</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows ? rows.map(element =>\n            <StyledTableRow key= {i}>\n            <StyledTableCell component=\"th\" scope=\"row\">\n              {i++}\n            </StyledTableCell>\n            <StyledTableCell align=\"left\">{element}</StyledTableCell>\n          </StyledTableRow>) : null}\n        </TableBody>\n      </Table>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => { //get user in the store\n  return {\n    user: state.user,\n  };\n};\nconst mapDispatchToProps = {};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport Chat from './components/Chat/Chat';\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\nimport firebase from 'firebase';\n// views\nimport Login from './views/LoginPage';\nimport Signup from './views/SignupPage';\nimport Home from './views/HomePage';\nimport Games from  './views/Games';\nimport Questions from  './views/Questions';\n\nimport Profile from './views/Profile';\nimport UpdateUser from './views/UpdateUser';\nimport Mapgame from './views/Mapgame';\nimport Navbar from './components/Navbar';\nimport BestScores from  './views/BestScores';\nimport MyRecords from './views/MyRecords';\nimport Courses from './views/Courses'\n\n\n// redux store\nimport store from  './redux/store';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCUVk6-gHqGlZyiFoPIc_32QuIymP8O82c\",\n  authDomain: \"geosmart-4830e.firebaseapp.com\",\n  databaseURL: \"https://geosmart-4830e.firebaseio.com\",\n  projectId: \"geosmart-4830e\",\n  storageBucket: \"geosmart-4830e.appspot.com\",\n  messagingSenderId: \"715331075251\",\n  appId: \"1:715331075251:web:1cc463262287da9c49c4c6\",\n  measurementId: \"G-T3PHV83EH2\"\n});\n\nconst isAutenticated = () => (localStorage.getItem('user') !== null) ? true : false;\n\nconst AuthRoute = (props) => (\n  true\n  ? <Route {... props}/>\n  : <Route {... props}/>\n  /*\n  isAutenticated()\n  ? <Route {... props}/>\n  : <Redirect to=\"/login\" />\n  */\n)\n\nconst Root = (\n  <Provider store={store}>\n    <BrowserRouter>\n    <Navbar />\n      <Switch>\n        <Route path=\"/home\" component={Home} />\n        <Route path=\"/signup\" component={Signup} />\n        <Route path=\"/login\" component={Login} />\n        <AuthRoute path=\"/chat/:chatID/\" component={Chat} />\n        <AuthRoute path=\"/games\" component={Games} />\n        <AuthRoute path=\"/play/map\" component={Mapgame} />\n        <AuthRoute path=\"/play/flags\" component={Questions} />\n        <AuthRoute path=\"/play/places\" component={Questions} />\n        <AuthRoute path=\"/bestscores\" component={BestScores} />\n        <AuthRoute path=\"/profile\" component={Profile} />\n        <AuthRoute path=\"/update-user\" component={UpdateUser} />\n        <AuthRoute path=\"/myrecords\" component={MyRecords} />\n        <AuthRoute path=\"/courses\" component={Courses} />\n        <Redirect from=\"/\" to=\"home\" />\n      </Switch>\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(Root, document.getElementById('root'));\n"],"sourceRoot":""}