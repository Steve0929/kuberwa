{"version":3,"sources":["assets/img/geosmart_logo.jpg","assets/img/trofeo.jpg","assets/img/user.png","assets/img/homePage/Geosmartlogo.png","assets/img/homePage/BWLogo.png","assets/img/map.jpg","assets/img/flag.png","assets/img/place.jpg","assets/img/courses/learntic.png","components/Chat/Contact.js","redux/data/server.js","components/Chat/Sidepanel/Sidepanel.js","websocket.js","components/Chat/Chat.js","components/elfooter/Copyright.js","assets/JSS/userManagement/Styles.js","redux/actions/loginUser.js","redux/actions/logoutUser.js","redux/actions/updateUser.js","redux/reducers/user.js","redux/store.js","redux/common/checkToken.js","views/LoginPage.js","views/SignupPage.js","views/HomePage.js","components/gameSelection/GameCard.js","views/Games.js","components/Loader/Loader.js","views/Questions.js","views/Profile.js","views/UpdateUser.js","views/Mapgame.js","components/Navbar.js","views/BestScores.js","views/MyRecords.js","views/Courses.js","index.js"],"names":["module","exports","Contact","props","to","chatURL","style","color","className","status","src","picURL","alt","name","URL","Sidepanel","state","chats","getUserChats","a","console","log","user","username","axios","post","query","chats_object","setState","data","getChatsByUsername","this","activeChats","map","c","key","id","GeoLogo","profile_picture","aria-hidden","htmlFor","type","placeholder","React","Component","connect","WebSocketService","callbacks","socketRef","instance","chatUrl","path","WebSocket","onopen","socketNewMessage","JSON","stringify","command","onmessage","e","onerror","message","onclose","close","parsedData","parse","Object","keys","length","messages","chatId","sendMessage","from","content","messagesCallback","newMessageCallback","send","err","readyState","callback","socket","recursion","waitForSocketConnection","setTimeout","WebSocketInstance","getInstance","Chat","sendMessageHandler","event","preventDefault","messageObject","match","params","chatID","newChatMessage","messageChangeHandler","target","value","renderMessages","currentUser","i","arr","marginBottom","author","UserImage","minutesAgo","Math","round","Date","getTime","timestamp","scrollToBottom","messagesEnd","scrollIntoView","behavior","initializeChat","addCallbacks","setMessages","bind","addMessage","fetchMessages","newProps","disconnect","component","reverse","roomname","float","clear","ref","el","onSubmit","onChange","required","Copyright","Typography","variant","align","Link","href","getFullYear","useStyles","makeStyles","theme","root","height","image","backgroundImage","backgroundRepeat","backgroundColor","palette","grey","backgroundSize","backgroundPosition","paper","margin","spacing","display","flexDirection","alignItems","avatar","form","width","marginTop","submit","loginUser","user_object","payload","logoutUser","updateUser","defaultState","localStorage","getItem","reducer","action","loginUserType","setItem","token","removeItem","combineReducers","store","createStore","getState","dispatchLogout","dispatch","checkToken","trim","resp","validateToken","valid","useState","setUsername","password","setPassword","classes","Styles","history","useHistory","Grid","container","item","xs","sm","md","Paper","elevation","square","Avatar","noValidate","TextField","fullWidth","label","autoComplete","autoFocus","FormControlLabel","control","Checkbox","Button","onClick","alert","then","response","push","pathname","catch","Box","mt","SignupPage","firstname","setFirstname","lastname","setLastname","cpassword","setCpassword","country","setCountry","get","flag","message_object","contact_object","createContact","participantes_object","parts","participantes","update_parts_object","updateChat","createUser","handleSubmit","justifyContent","border","background","center","cursor","table","top","position","HomePage","size","fontFamily","m","logo","logobw","fontSize","face","GameCard","gameConfiguration","Card","borderRadius","boxShadow","CardActionArea","CardMedia","gameImage","title","CardContent","gutterBottom","gameName","gameDescription","mapGame","Tooltip","InputLabel","Select","labelId","gameValue","handleFunctionContinent","MenuItem","CardActions","onClickConfiguration","onClickLeaderboard","onClickMyRecords","Games","map_rounds","flag_continent","place_continent","minHeight","handle_flag_continent","FlagImage","gametype","filter","handle_map_rounds","MapImage","rounds","handle_place_continent","PlaceImage","Loader","textAlign","CircularProgress","thickness","Questions","mostrar_boton_next","correct_selected","score","current_question","questions","questionsx","_id","statement","optionA","optionB","optionC","optionD","ans","category","continent","created_at","Updated_at","id_user","date_played","id_game","error","scoreRequest","location","gameQuestions","preguntas","getQuestions","question","answer","points","acertado","total_score","toISOString","insertScore","opbtn","fontWeight","minWidth","Trofeo","reiniciar","nextQuestion","chooseAnswer","overflow","profile_image","subtitle","direction","marginLeft","slice","indexOf","imem","newUser","npassword","setNpassword","setProfilePicture","uploadValue","setUploadValue","fileName","setFilename","isValid","Container","maxWidth","Input","file","files","task","firebase","storage","put","on","snapshot","percentage","bytesTransferred","totalBytes","getDownloadURL","handleUpload","marginRight","max","icons_urls","mapStylesFull","featureType","elementType","stylers","visibility","GoogleMapComp","withGoogleMap","items","options","random_icon_index","floor","random","icon","url","lat","latitude","lng","longitude","draggable","choose","defaultCenter","defaultZoom","defaultOptions","zoomControl","styles","Mapgame","gameLength","countriesByContinent","insertedScore","padding","containerElement","mapElement","option","outItemLeft","textDecoration","outItemRight","Navbar","replace","logOut","StyledTableCell","withStyles","head","common","black","white","body","TableCell","StyledTableRow","hover","TableRow","rows","setRows","score_object","bestScoreByGame","useEffect","getScores","TableContainer","Table","aria-label","TableHead","TableBody","element","ID","scope","ID_User","Score","DatePlayed","ID_Game","bestScoreByUserandGame","link","maxHeight","course_object","split","getCourses","LearnticLogo","aling","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthRoute","Root","Home","Signup","Login","BestScores","Profile","UpdateUser","MyRecords","Courses","ReactDOM","render","document","getElementById"],"mappings":"+FAAAA,EAAOC,QAAU,IAA0B,2C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,0C,oBCA3CD,EAAOC,QAAU,IAA0B,oC,oBCA3CD,EAAOC,QAAU,IAA0B,iC,oBCA3CD,EAAOC,QAAU,IAA0B,kC,oBCA3CD,EAAOC,QAAU,IAA0B,mC,oBCA3CD,EAAOC,QAAU,IAA0B,sC,yRCkB5BC,EAfC,SAACC,GAAD,OACZ,kBAAC,IAAD,CAASC,GAAE,UAAKD,EAAME,SAAWC,MAAO,CAACC,MAAO,SAC5C,wBAAIC,UAAU,WACV,yBAAKA,UAAU,QACX,0BAAMA,UAAS,yBAAoBL,EAAMM,UACzC,yBAAKC,IAAKP,EAAMQ,OAAQC,IAAI,KAC5B,yBAAKJ,UAAU,QACX,uBAAGA,UAAU,QAAQL,EAAMU,WCIlCC,EAAG,iBAHH,iBAGG,YAFH,KAEG,YADG,WCJbC,E,4MAEFC,MAAQ,CACJC,MAAO,I,EAOXC,a,sBAAe,4BAAAC,EAAA,6DAMXC,QAAQC,IAAI,EAAKlB,MAAMmB,KAAKC,UANjB,kBAUgBC,IAAMC,KAAKX,EAAI,CACtCY,MAAM,2FAAD,OAGc,EAAKvB,MAAMmB,KAAKC,SAH9B,+JAXE,OAULI,EAVK,OAwBX,EAAKC,SAAS,CACVX,MAAOU,EAAaE,KAAKA,KAAKC,qBAzBvB,gDA4BPV,QAAQC,IAAR,MA5BO,yD,kEAHXU,KAAKb,iB,+BA0CL,IAAMc,EAAcD,KAAKf,MAAMC,MAAMgB,KAAI,SAAAC,GACrC,OACI,kBAAC,EAAD,CACIC,IAAMD,EAAEE,GACRvB,KAAOqB,EAAEE,GACTzB,OAAQ0B,IACR5B,OAAO,SACPJ,QAAO,gBAAW6B,EAAEE,SAK5Bd,EAAOS,KAAK5B,MAAMmB,KAEtB,OACI,yBAAKc,GAAG,aACZ,yBAAKA,GAAG,WACJ,yBAAK5B,UAAU,QACX,yBAAK4B,GAAG,cAAc1B,IAAKY,EAAKgB,gBAAiB9B,UAAU,SAASI,IAAI,KAChF,uBAAGwB,GAAG,gBAAgBd,EAAKC,UACnB,uBAAGf,UAAU,mCAAmC+B,cAAY,SAC5D,yBAAKH,GAAG,kBACJ,4BACI,wBAAIA,GAAG,gBAAgB5B,UAAU,UAAS,0BAAMA,UAAU,kBAA1D,IAAkF,sCAClF,wBAAI4B,GAAG,eAAc,0BAAM5B,UAAU,kBAArC,IAA6D,oCAC7D,wBAAI4B,GAAG,eAAc,0BAAM5B,UAAU,kBAArC,IAA6D,oCAC7D,wBAAI4B,GAAG,kBAAiB,0BAAM5B,UAAU,kBAAxC,IAAgE,yCAGxE,yBAAK4B,GAAG,eAUhB,yBAAKA,GAAG,UACJ,2BAAOI,QAAQ,IAAG,uBAAGhC,UAAU,eAAe+B,cAAY,UAC1D,2BAAOE,KAAK,OAAOC,YAAY,wBAEnC,yBAAKN,GAAG,YACJ,4BACKJ,IAuBT,yBAAKI,GAAG,cACJ,4BAAQA,GAAG,cAAa,uBAAG5B,UAAU,wBAAwB+B,cAAY,SAAzE,IAAqF,2CACrF,4BAAQH,GAAG,YAAW,uBAAG5B,UAAU,kBAAkB+B,cAAY,SAAjE,IAA6E,iD,GAvHjEI,IAAMC,WAsIfC,eAPS,SAAC7B,GACrB,MAAO,CACLM,KAAMN,EAAMM,QAKsB,GAAzBuB,CAA6B9B,G,SC/ItC+B,E,WAYF,aAAc,yBATdC,UAAY,GAURhB,KAAKiB,UAAY,K,+DAJjB,OAHIF,EAAiBG,WACjBH,EAAiBG,SAAW,IAAIH,GAE7BA,EAAiBG,a,6CAOpBC,GAAS,IAAD,OAENC,EAAI,0CAAsCD,EAAtC,KACV9B,QAAQC,IAAI8B,GACZpB,KAAKiB,UAAY,IAAII,UAAUD,GAC/BpB,KAAKiB,UAAUK,OAAS,WACpBjC,QAAQC,IAAI,mBAGhBU,KAAKuB,iBAAiBC,KAAKC,UAAU,CACjCC,QAAS,qBAGb1B,KAAKiB,UAAUU,UAAY,SAAAC,GAEvB,EAAKL,iBAAiBK,EAAE9B,OAE5BE,KAAKiB,UAAUY,QAAU,SAAAD,GACrBvC,QAAQC,IAAIsC,EAAEE,UAElB9B,KAAKiB,UAAUc,QAAU,WACrB1C,QAAQC,IAAI,uBACZ,EAAKwB,a,mCAKTd,KAAKiB,UAAUe,U,uCAGFlC,GACb,IAAMmC,EAAaT,KAAKU,MAAMpC,GACxB4B,EAAUO,EAAWP,QACe,IAAvCS,OAAOC,KAAKpC,KAAKgB,WAAWqB,SAGf,kBAAZX,GACA1B,KAAKgB,UAAUU,GAASO,EAAWK,UAExB,kBAAZZ,GACC1B,KAAKgB,UAAUU,GAASO,EAAWH,Y,oCAI7BtC,EAAU+C,GACpBvC,KAAKwC,YAAY,CACbd,QAAS,kBACTlC,SAAUA,EACV+C,OAAQA,M,qCAIDT,GACX9B,KAAKwC,YAAY,CACbd,QAAS,gBACTe,KAAMX,EAAQW,KACdX,QAASA,EAAQY,QACjBH,OAAQT,EAAQS,W,mCAIXI,EAAkBC,GAC3B5C,KAAKgB,UAAL,cAAkC2B,EAClC3C,KAAKgB,UAAL,cAAmC4B,I,kCAG3B9C,GACR,IACIE,KAAKiB,UAAU4B,KAAKrB,KAAKC,UAAL,eAAoB3B,KAC1C,MAAOgD,GACLzD,QAAQC,IAAIwD,EAAIhB,Y,8BAKpB,OAAO9B,KAAKiB,UAAU8B,a,8CAGFC,GACpB,IAAMC,EAASjD,KAAKiB,UACdiC,EAAYlD,KAAKmD,wBACvBC,YACI,WACI,GAAyB,IAAtBH,EAAOF,WAKN,OAJA1D,QAAQC,IAAI,6BACG,MAAZ0D,GACCA,KAIJ3D,QAAQC,IAAI,6BACZ4D,EAAUF,KAEf,O,KA7GTjC,EAEKG,SAAW,KAiHtB,IAEemC,EAFWtC,EAAiBuC,c,ICjFrCC,E,kDAiBF,WAAYnF,GAAO,IAAD,8BACd,cAAMA,IAhBVa,MAAQ,CAAE6C,QAAS,IAeD,EA8ClB0B,mBAAqB,SAAAC,GACjBA,EAAMC,iBACN,IAAMC,EAAgB,CAClBlB,KAAK,GAAD,OAAK,EAAKrE,MAAMmB,KAAKC,UACzBkD,QAAS,EAAKzD,MAAM6C,QACpBS,OAAQ,EAAKnE,MAAMwF,MAAMC,OAAOC,QAEpCT,EAAkBU,eAAeJ,GACjC,EAAK9D,SAAS,CACViC,QAAS,MAvDC,EA2DlBkC,qBAAuB,SAAAP,GACnB,EAAK5D,SAAS,CACViC,QAAS2B,EAAMQ,OAAOC,SA7DZ,EAkElBC,eAAiB,SAAC7B,GACd,IAAM8B,EAAW,UAAM,EAAKhG,MAAMmB,KAAKC,UACvC,OAAO8C,EAASpC,KAAI,SAAC4B,EAASuC,EAAGC,GAAb,OAChB,wBACIlE,IAAK0B,EAAQzB,GACb9B,MAAO,CAACgG,aAAcD,EAAIjC,OAAS,IAAMgC,EAAI,QAAU,QACvD5F,UAAYqD,EAAQ0C,SAAWJ,EAAc,OAAS,WACtD,yBAAKzF,IAAK8F,IAAW5F,IAAI,KACzB,2BACI,+BACCiD,EAAQ0C,QAET,6BACC1C,EAAQY,QACT,6BACA,gCA3HHgC,EA4HYC,KAAKC,QAAO,IAAIC,MAAOC,UAAY,IAAID,KAAK/C,EAAQiD,YAAY,MA1HzE,GACL,uCACGL,EADH,YAGFA,GAAc,IAAMA,EAAa,KAC/B,uCACGC,KAAKC,MAAMF,EAAW,IADzB,UAGDA,GAAc,KACb,uCACGC,KAAKC,MAAMF,EAAW,MADzB,iBADJ,KAVX,IAAiBA,MA0CK,EA+FlBM,eAAiB,WACb,EAAKC,YAAYC,eAAe,CAAEC,SAAU,YA9F5C,EAAKC,iBAFS,E,6DAbD,IAAD,OACZpF,KAAKmD,yBAAwB,WACrBE,EAAkBgC,aACd,EAAKC,YAAYC,KAAK,GACtB,EAAKC,WAAWD,KAAK,IAC7BlC,EAAkBoC,cACd,EAAKrH,MAAMgG,YACX,EAAKhG,MAAMwF,MAAMC,OAAOC,WAG5BT,EAAkBvC,QAAQd,KAAK5B,MAAMwF,MAAMC,OAAOC,Y,sEAQzB4B,GAAU,IAAD,OAGpC1F,KAAK5B,MAAMwF,MAAMC,OAAOC,SAAW4B,EAAS9B,MAAMC,OAAOC,SACxDT,EAAkBsC,aAClB3F,KAAKmD,yBAAwB,WAC5BE,EAAkBoC,cACd,EAAKrH,MAAMgG,YACX,EAAKhG,MAAMwF,MAAMC,OAAOC,WAG5BT,EAAkBvC,QAAQ4E,EAAS9B,MAAMC,OAAOC,W,8CAIhCd,GACpB,IAAM4C,EAAY5F,KAClBoD,YACI,WACI,GAAiC,IAA9BC,EAAkBpE,QAGjB,OAFAI,QAAQC,IAAI,6BACZ0D,IAGA3D,QAAQC,IAAI,6BACZsG,EAAUzC,wBAAwBH,KAEvC,K,kCAICV,GACRtC,KAAKH,SAAS,CAACyC,SAAUA,EAASuD,c,iCAG3B/D,GACP9B,KAAKH,SAAS,CACVyC,SAAS,GAAD,mBAAMtC,KAAKf,MAAMqD,UAAjB,CAA2BR,Q,0CA0DvC9B,KAAKgF,mB,2CAILhF,KAAKgF,mB,+BAGA,IApISc,EAoIV,OACExD,EAAWtC,KAAKf,MAAMqD,SAE5B,OACI,yBAAKjC,GAAG,SACR,kBAAC,EAAD,MACA,yBAAK5B,UAAU,WACX,yBAAKA,UAAU,mBACX,yBAAKE,IAAK2B,IAASzB,IAAI,KACvB,uBAAGwB,GAAG,oBA5IN,WADEyF,EA6IqC9F,KAAK5B,MAAMwF,MAAMC,OAAOC,QA3IpE,kDAEAgC,GA0IK,yBAAKrH,UAAU,gBACX,uBAAGA,UAAU,iBAAiB+B,cAAY,SAC1C,uBAAG/B,UAAU,gBAAgB+B,cAAY,SACxC,uBAAG/B,UAAU,kBAAkB+B,cAAY,WAGpD,yBAAK/B,UAAU,YACX,wBAAI4B,GAAG,YAECiC,GACAtC,KAAKmE,eAAe7B,GAExB,yBAAK/D,MAAO,CAAEwH,MAAM,OAAQC,MAAO,QACnCC,IAAK,SAACC,GAAS,EAAKjB,YAAciB,OAI1C,yBAAKzH,UAAU,iBACX,0BAAM0H,SAAUnG,KAAKwD,oBACjB,yBAAK/E,UAAU,QACf,2BACI2H,SAAUpG,KAAKgE,qBACfE,MAAOlE,KAAKf,MAAM6C,QAClBuE,UAAQ,EACRhG,GAAI,qBAAqBK,KAAK,OAAOC,YAAY,0BACrD,uBAAGlC,UAAU,6BAA6B+B,cAAY,SACtD,4BAAQH,GAAG,sBAAsB5B,UAAU,UAC3C,uBAAGA,UAAU,oBAAoB+B,cAAY,mB,GAjKlDI,IAAMC,WAmLVC,eANS,SAAC7B,GACrB,MAAO,CACLM,KAAMN,EAAMM,QAIsB,GAAzBuB,CAA6ByC,G,8ICjN7B,SAAS+C,IACtB,OACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBiI,MAAM,UACrD,kBACD,kBAACC,EAAA,EAAD,CAAMlI,MAAM,UAAUmI,KAAK,KAA3B,YAEQ,KACP,IAAI9B,MAAO+B,cACX,K,aCsBQC,EAhCGC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,SAEVC,MAAO,CACLC,gBAAiB,uDACjBC,iBAAkB,YAClBC,gBACyB,UAAvBN,EAAMO,QAAQ5G,KAAmBqG,EAAMO,QAAQC,KAAK,IAAMR,EAAMO,QAAQC,KAAK,KAC/EC,eAAgB,QAChBC,mBAAoB,UAEtBC,MAAO,CACLC,OAAQZ,EAAMa,QAAQ,EAAG,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,CACNL,OAAQZ,EAAMa,QAAQ,GACtBP,gBAAiB,WAEnBY,KAAM,CACJC,MAAO,OACPC,UAAWpB,EAAMa,QAAQ,IAE3BQ,OAAQ,CACNT,OAAQZ,EAAMa,QAAQ,EAAG,EAAG,GAC5BP,gBAAiB,eC9BR3G,EAAO,YAWL2H,EATG,SAACC,GACjB,MAAO,CACL5H,OACA6H,QAAS,CACPD,iBCKSE,EATI,WACjB,MAAO,CACL9H,KAJgB,aAKhB6H,QAAS,K,SCMEE,GATI,SAACH,GAClB,MAAO,CACL5H,KAJgB,aAKhB6H,QAAS,CACPD,iBCFAI,GAAelH,KAAKU,MAAMyG,aAAaC,QAAQ,SA0BtCC,OAxBf,WAAgD,IAA/B5J,EAA8B,uDAAtByJ,GAAcI,EAAQ,uCAC7C,OAAOA,EAAOpI,MACZ,KAAKqI,EAIH,OAHA1J,QAAQC,IAAIwJ,EAAOP,QAAQD,aAC3BK,aAAaK,QAAQ,OAAQxH,KAAKC,UAAUqH,EAAOP,QAAQD,cAC3DK,aAAaK,QAAQ,QAASxH,KAAKC,UAAUqH,EAAOP,QAAQD,YAAYW,QACzDH,EAAOP,QAAQD,YAEhC,IDdgB,aCiBd,OAFAjJ,QAAQC,IAAIwJ,GACZH,aAAaK,QAAQ,OAAQxH,KAAKC,UAAUqH,EAAOP,QAAQD,cAC5CQ,EAAOP,QAAQD,YAEhC,IFnBgB,aEuBd,OAHAjJ,QAAQC,IAAI,gBACZqJ,aAAaO,WAAW,QACxBP,aAAaO,WAAW,SACT,KAEjB,QACE,OAAOjK,ICvBP4J,GAAWM,aAAgB,CAC/B5J,UAGI6J,GAAQC,aAAYR,IAE1BxJ,QAAQC,IAAI8J,GAAME,YAEHF,UCLf,SAASG,KACPH,GAAMI,SAAS,CAAC9I,KAAK,eAGhB,SAAe+I,KAAtB,gC,8CAAO,8BAAArK,EAAA,yDACC6J,EAAQN,aAAaC,QAAQ,SAD9B,uBAGFvJ,QAAQC,IAAI,uBAHV,kBAIKiK,MAJL,cAMLlK,QAAQC,IAAI,kBANP,SAOcG,IAAMC,KAAKX,EAAK,CACrBY,MAAM,uEAAD,OAEsBsJ,EAAMS,OAF5B,oGARd,UAOCC,EAPD,OAiBLtK,QAAQC,IAAIqK,GAEA,GADEA,EAAK7J,KAAKA,KAAK8J,cAAcC,MAlBtC,2CAoBK,GApBL,kCAsBE,GAtBF,6C,sBCeP,IAoIe/I,gBATS,SAAC7B,GACvB,MAAO,MAIkB,SAACuK,GAAD,MAAe,CACxCnB,UAAW,SAAC9I,GAAD,OAAUiK,EAASnB,EAAU9I,QAG3BuB,EApIG,SAAC,GAAmB,IAAjBuH,EAAgB,EAAhBA,UAAgB,EACHyB,mBAAS,IADN,mBAC5BtK,EAD4B,KAClBuK,EADkB,OAEHD,mBAAS,IAFN,mBAE5BE,EAF4B,KAElBC,EAFkB,KAG7BC,EAAUC,IACVC,EAAUC,cA8ChB,OACE,6BACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAAC3E,UAAU,OAAOnH,UAAWyL,EAAQlD,MAClD,kBAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGlM,UAAWyL,EAAQhD,QACvD,kBAACoD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG/E,UAAWgF,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKrM,UAAWyL,EAAQxC,OACtB,kBAACqD,EAAA,EAAD,CAAQtM,UAAWyL,EAAQlC,QACzB,kBAAC,IAAD,OAEF,kBAACzB,EAAA,EAAD,CAAYX,UAAU,KAAKY,QAAQ,MAAnC,SAGA,0BAAM/H,UAAWyL,EAAQjC,KAAM+C,YAAU,GACvC,kBAACC,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPtB,UAAQ,EACR6E,WAAS,EACT7K,GAAG,WACH8K,MAAM,WACNrM,KAAK,WACLsM,aAAa,WACbhF,SAAU,SAACxE,GAAD,OAAOmI,EAAYnI,EAAEqC,OAAOC,QACtCmH,WAAS,IAEX,kBAACJ,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPtB,UAAQ,EACR6E,WAAS,EACTpM,KAAK,WACLqM,MAAM,WACNzK,KAAK,WACLL,GAAG,WACH+K,aAAa,mBACbhF,SAAU,SAACxE,GAAD,OAAOqI,EAAYrI,EAAEqC,OAAOC,UAExC,kBAACoH,EAAA,EAAD,CACEC,QAAS,kBAACC,EAAA,EAAD,CAAUtH,MAAM,WAAW1F,MAAM,YAC1C2M,MAAM,gBAER,kBAACM,EAAA,EAAD,CACEP,WAAS,EACT1E,QAAQ,YACRhI,MAAM,UACNC,UAAWyL,EAAQ9B,OACnBsD,QAAS,SAAC9J,GAAD,OAAoBA,EAzFnC8B,sBACwB,IAA3BlE,EAASkK,OAAOrH,QAA2C,IAA3B2H,EAASN,OAAOrH,OACjDsJ,MAAM,6BAGNlM,IAAMC,KAAKX,EAAK,CACdY,MAAM,mFAAD,OAGcH,EAASkK,OAHvB,uCAIcM,EAASN,OAJvB,oRAmBNkC,MAAK,SAAAC,GACoB,MAApBA,EAASnN,QACXW,QAAQC,IAAI,YAAYuM,EAAS/L,KAAKA,KAAKuI,WAC3CA,EAAUwD,EAAS/L,KAAKA,KAAKuI,WAE7B+B,EAAQ0B,KAAK,CAACC,SAAS,YAEvBJ,MAAM,gCAGTK,OAAM,WACLL,MAAM,mCAgDA,SASA,kBAACrB,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC/D,EAAA,EAAD,CAAMC,KAAK,IAAIH,QAAQ,SACpB,mBAGL,kBAAC8D,EAAA,EAAD,CAAME,MAAI,GACR,kBAAC9D,EAAA,EAAD,CAAMC,KAAK,UAAUH,QAAQ,SAC1B,oCAIP,kBAACyF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC5F,EAAD,eCiGD6F,GA3NI,WAAO,IAAD,EACWrC,mBAAS,IADpB,mBAChBsC,EADgB,KACLC,EADK,OAESvC,mBAAS,IAFlB,mBAEhBwC,EAFgB,KAENC,EAFM,OAGSzC,mBAAS,IAHlB,mBAGhBtK,EAHgB,KAGNuK,EAHM,OAISD,mBAAS,IAJlB,mBAIhBE,EAJgB,KAINC,EAJM,OAKWH,mBAAS,IALpB,mBAKhB0C,EALgB,KAKLC,EALK,OAMO3C,mBAAS,IANhB,mBAMhB4C,EANgB,KAMPC,EANO,KAQjBzC,EAAUC,IARO,4CAUvB,WAA4B1G,GAA5B,yBAAArE,EAAA,yDACEqE,EAAMC,iBAEyB,IAA5B0I,EAAU1C,OAAOrH,QACS,IAA3BiK,EAAS5C,OAAOrH,QACW,IAA3B7C,EAASkK,OAAOrH,QACW,IAA3B2H,EAASN,OAAOrH,QACY,IAA5BmK,EAAU9C,OAAOrH,QACS,IAA1BqK,EAAQhD,OAAOrH,OARnB,gBAUMsJ,MAAM,4BAVZ,0BAWY3B,EAASN,SAAW8C,EAAU9C,OAX1C,gBAYIiC,MAAM,6DAZV,iDAgByBlM,IAAMmN,IAAN,gDACwBF,IAjBjD,eAgBYG,EAhBZ,iBAoBmCpN,IAAMC,KAAKX,EAAK,CAC3CY,MAAM,2FAAD,OAGeyM,EAAU1C,OAHzB,yCAIc4C,EAAS5C,OAJvB,yCAKclK,EAASkK,OALvB,yCAMcM,EAASN,OANvB,wCAOagD,EAAQhD,OAPrB,qCAQUmD,EAAK/M,KAAK,GAAG+M,KARvB,6MArBb,eAoBYC,EApBZ,iBAuCmCrN,IAAMC,KAAKX,EAAK,CACzCY,MAAM,gGAAD,OAGYH,EAASkK,OAHrB,2CAIa0C,EAAU1C,OAJvB,0CAKY4C,EAAS5C,OALrB,iHAxCf,eAuCYqD,EAvCZ,OAoDQ1N,QAAQC,IAAI,WAAayN,EAAejN,KAAKA,KAAKkN,cAAcxN,SAAW,aApDnF,UAsDyCC,IAAMC,KAAKX,EAAK,CAC/CY,MAAM,mMAvDhB,eAsDYsN,EAtDZ,QAkEUC,EAAQD,EAAqBnN,KAAKA,KAAKC,mBAAmB,GAAGoN,eAE3DrB,KAAKiB,EAAejN,KAAKA,KAAKkN,cAAcxN,UApExD,UAsEwCC,IAAMC,KAAKX,EAAK,CAChDY,MAAM,mJAAD,OAKgB6B,KAAKC,UAAUyL,GAL/B,oFAvEb,QAsEYE,EAtEZ,OAmFM/N,QAAQC,IAAI,wBAA0B8N,EAAoBtN,KAAKA,KAAKuN,WAAWhN,GAAK,kBAEpFsL,MAAMmB,EAAehN,KAAKA,KAAKwN,WAAWxL,SArFhD,kDAuFMzC,QAAQC,IAAR,MAvFN,6FAVuB,sBAwGvB,OACE,6BACE,kBAACgL,EAAA,EAAD,CAAMC,WAAS,EAAC3E,UAAU,OAAOnH,UAAWyL,EAAQlD,MAClD,kBAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAI,EAAOC,GAAI,EAAGC,GAAI,EAAGlM,UAAWyL,EAAQhD,QACvD,kBAACoD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAG/E,UAAWgF,IAAOC,UAAW,EAAGC,QAAM,GACrE,yBAAKrM,UAAWyL,EAAQxC,OACtB,kBAACqD,EAAA,EAAD,CAAQtM,UAAWyL,EAAQlC,QACzB,kBAAC,IAAD,OAEF,kBAACzB,EAAA,EAAD,CAAYX,UAAU,KAAKY,QAAQ,MAAnC,WAGA,0BAAM/H,UAAWyL,EAAQjC,KAAM+C,YAAU,GACvC,kBAACV,EAAA,EAAD,CAAMC,WAAS,EAAC3C,QAAS,GACvB,kBAACqD,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPyD,aAAa,QACbtM,KAAK,YACLuB,GAAG,YACH8K,MAAM,aACN/E,SAAU,SAACxE,GAAD,OAAOyK,EAAazK,EAAEqC,OAAOC,QACvCgH,WAAS,EACT7E,UAAQ,EACRgF,WAAS,IAEX,kBAACJ,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPuD,WAAS,EACT7K,GAAG,WACH8K,MAAM,YACNrM,KAAK,WACLsM,aAAa,QACbhF,SAAU,SAACxE,GAAD,OAAO2K,EAAY3K,EAAEqC,OAAOC,QACtCmC,UAAQ,IAEV,kBAAC4E,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPtB,UAAQ,EACR6E,WAAS,EACT7K,GAAG,WACH8K,MAAM,WACNrM,KAAK,WACLsM,aAAa,WACbhF,SAAU,SAACxE,GAAD,OAAOmI,EAAYnI,EAAEqC,OAAOC,UAExC,kBAACoG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACO,EAAA,EAAD,CACEtD,OAAO,SACPyD,aAAa,WACbtM,KAAK,WACL0H,QAAQ,WACRnG,GAAG,WACH8K,MAAM,WACNzK,KAAK,WACL2F,UAAQ,EACR6E,WAAS,EACT9E,SAAU,SAACxE,GAAD,OAAOqI,EAAYrI,EAAEqC,OAAOC,WAG1C,kBAACoG,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,kBAACO,EAAA,EAAD,CACEtD,OAAO,SACPnB,QAAQ,WACRnG,GAAG,YACH8K,MAAM,mBACNzK,KAAK,WACL5B,KAAK,YACLsM,aAAa,mBACb/E,UAAQ,EACR6E,WAAS,EACT9E,SAAU,SAACxE,GAAD,OAAO6K,EAAa7K,EAAEqC,OAAOC,WAG3C,kBAAC+G,EAAA,EAAD,CACEtD,OAAO,SACPnB,QAAQ,WACRH,UAAQ,EACR6E,WAAS,EACT7K,GAAG,UACH8K,MAAM,UACNrM,KAAK,UACLsM,aAAa,UACbhF,SAAU,SAACxE,GAAD,OAAO+K,EAAW/K,EAAEqC,OAAOC,UAEvC,kBAACuH,EAAA,EAAD,CACEP,WAAS,EACT1E,QAAQ,YACRhI,MAAM,UACNC,UAAWyL,EAAQ9B,OACnBsD,QAAS,SAAC9J,GAAD,OApMF,2CAoMS2L,CAAa3L,KAL/B,WASA,kBAAC0I,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,IAAE,GACX,kBAAC/D,EAAA,EAAD,CAAMC,KAAK,SAASH,QAAQ,SAA5B,qCAMN,kBAACyF,EAAA,EAAD,CAAKC,GAAI,GACP,kBAAC5F,EAAD,a,0CCvNVO,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCwD,UAAW,CACTiD,eAAgB,SAChBzF,WAAY,SACZ0F,OAAQ,QACRC,WAAY,WAEdlD,KAAM,CACJtC,MAAO,OACPwF,WAAY,UACZ,UAAa,SACb,aAAgB,MAChB,UAAa,SAEfC,OAAQ,CACNC,OAAQ,UACR/F,QAAS,SACT2F,eAAgB,SAChB,OAAU,OACVtF,MAAO,QACP,MAAS,QAEX2F,MAAM,CACJ3F,MAAM,OACNL,QAAQ,SAEViG,IAAI,CACFjG,QAAS,aACTkG,SAAU,WACV7F,MAAM,OACNjB,OAAQ,QACR,mBAAoB,sBACpB,iBAAiB,UAEnBmB,OAAQ,CACNT,OAAQZ,EAAMa,QAAQ,EAAG,EAAG,QAwDjBoG,GApDE,WACf,IAAM5D,EAAUC,cAgBVH,EAAUrD,KAChB,OACE,yBAAKtI,MAAO,CAAC0I,OAAQ,UACnB,kBAACqD,EAAA,EAAD,CAAMC,WAAS,EAAC9L,UAAWyL,EAAQK,WACjC,0BAAM/L,MAAQ,QAAQyP,KAAO,MAC3B,wBAAI1P,MAAO,CAAC2P,WAAY,cAAxB,6BAIF,kBAAC5D,EAAA,EAAD,CAAME,MAAI,EAAC2D,EAAG,GAAI1P,UAAWyL,EAAQM,MACnC,yBAAKjM,MAAO,CAACsJ,QAAS,OAAQC,cAAe,WAC3C,yBAAKrJ,UAAYyL,EAAQyD,QACvB,yBAAKhP,IAAKyP,KAAMvP,IAAI,OAAOqJ,MAAM,MAAMjB,OAAO,MAAMyE,QA3B3C,WAEnBtB,EAAQ0B,KADK,cA4BL,yBAAKrN,UAAYyL,EAAQyD,QACvB,yBAAKhP,IAAK0P,KAAQxP,IAAI,QAAQqJ,MAAM,MAAMjB,OAAO,MAAMyE,QAzB9C,WAEnBtB,EAAQ0B,KADK,eA0BL,uBAAGJ,QAtBQ,WAEnBtB,EAAQ0B,KADK,cAqBqBvN,MAAO,CAAC+P,SAAU,QAA5C,cAGJ,kBAAChE,EAAA,EAAD,KACE,0BAAM9L,MAAQ,QAAQ+P,KAAO,YAC3B,wBAAIhQ,MAAO,CAAC2P,WAAY,cAAxB,+BAGA,wBAAI3P,MAAO,CAAC2P,WAAY,cAAxB,+E,0FCaGM,GA3FE,SAACC,GAChB,OACE,kBAACC,GAAA,EAAD,CAAMnQ,MAAO,CAACoJ,OAAO,MAAOV,OAAQ,OAAQiB,MAAO,OAAQyG,aAAc,OAC3DC,UAAW,4GACvB,kBAACC,GAAA,EAAD,CAAgBtQ,MAAO,CAAC4J,UAAW,QACjC,kBAAC2G,GAAA,EAAD,CACEvQ,MAAO,CAAC0I,OAAQ,IAAKiB,MAAO,IAAKP,OAAQ,SAAUgH,aAAc,OACjEzH,MAAOuH,EAAkBM,UACzBC,MAAM,0BACR,kBAACC,GAAA,EAAD,KACE,kBAAC1I,EAAA,EAAD,CAAY2I,cAAY,EAAC1I,QAAQ,KAAKZ,UAAU,MAC5C6I,EAAkBU,UAEtB,kBAAC5I,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBoH,UAAU,KACxD6I,EAAkBW,iBAGpBX,EAAkBY,QAChB,oCACE,kBAACC,GAAA,EAAD,CAASN,MAAM,yBACb,kBAACO,GAAA,EAAD,CAAYhR,MAAO,CAAC4J,UAAW,QAA/B,uBAEF,kBAACqH,GAAA,EAAD,CACEjR,MAAO,CAAC2J,MAAO,QACfuH,QAAQ,2BACRpP,GAAG,qBACH6D,MAAOuK,EAAkBiB,UACzBtJ,SAAUqI,EAAkBkB,yBAE5B,kBAACC,GAAA,EAAD,CAAU1L,MAAO,KAAjB,YACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,KAAjB,YACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,KAAjB,YACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,KAAjB,YACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,KAAjB,YACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,MAAjB,eAIJ,oCACE,kBAACoL,GAAA,EAAD,CAASN,MAAM,gDACb,kBAACO,GAAA,EAAD,CAAYhR,MAAO,CAAC4J,UAAW,QAA/B,0BAEF,kBAACqH,GAAA,EAAD,CACEjR,MAAO,CAAC2J,MAAO,QACfuH,QAAQ,2BACRpP,GAAG,qBACH6D,MAAOuK,EAAkBiB,UACzBtJ,SAAUqI,EAAkBkB,yBAE5B,kBAACC,GAAA,EAAD,CAAU1L,MAAO,UAAjB,iBACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,WAAjB,WACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,QAAjB,QACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,UAAjB,aACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,UAAjB,UACA,kBAAC0L,GAAA,EAAD,CAAU1L,MAAO,WAAjB,eAOZ,kBAAC2L,GAAA,EAAD,KACE,kBAACpE,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAUD,MAAO,CAACC,MAAO,QAAS6I,gBAAiB,UAAWM,OAAQ,QAASpD,aAAc,OAChHmH,QAAS+C,EAAkBqB,sBADnC,YAYA,kBAACrE,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO,CAACC,MAAO,QAAS6I,gBAAiB,UAAWM,OAAQ,QAASpD,aAAc,OAC/GmH,QAAS+C,EAAkBsB,oBADrC,eAMA,kBAACtE,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO,CAACC,MAAO,QAAS6I,gBAAiB,UAAWM,OAAQ,QAASpD,aAAc,OAC/GmH,QAAS+C,EAAkBuB,kBADrC,iB,+DCnFFC,G,kDACJ,WAAY7R,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,MAAQ,CACXiR,WAAY,IACZC,eAAgB,SAChBC,gBAAiB,UANF,E,gEAWjB3G,O,gDAKwBrL,M,wFAIRwD,GAChB,IAAMsC,EAAQtC,EAAEqC,OAAOC,MACvBlE,KAAKH,SAAS,CAACqQ,WAAYhM,M,4CAGPtC,GACpB,IAAMsC,EAAQtC,EAAEqC,OAAOC,MACvBlE,KAAKH,SAAS,CAACsQ,eAAgBjM,M,6CAGVtC,GACrB,IAAMsC,EAAQtC,EAAEqC,OAAOC,MACvBlE,KAAKH,SAAS,CAACuQ,gBAAiBlM,M,+BAGxB,IAAD,OASP,OACE,yBAAK3F,MAAO,CAAC2J,MAAO,OAAOf,gBAAiB,oDAAqDkJ,UAAW,UAC1G,yBAAK9R,MAAO,CAACsJ,QAAS,SACpB,kBAAC,GAAD,CACEsH,SAAS,qBACTC,gBAAgB,wDAChBO,wBAAyB,SAAC/N,GAAD,OAAO,EAAK0O,sBAAsB1O,IAC3DmN,UAAWwB,KACXb,UAAW1P,KAAKf,MAAMkR,eACtBH,iBAAkB,kBAAM,EAAK5R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,aAAcyE,SAAU,OACnFT,mBAAoB,kBAAM,EAAK3R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,cAAeyE,SAAU,OACtFV,qBAAsB,kBAAM,EAAK1R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,cAAe0E,OAAQ,EAAKxR,MAAMkR,eAAgBK,SAAU,aAG7H,kBAAC,GAAD,CACEnB,SAAS,EACTF,SAAS,qBACTC,gBAAgB,kFAChBO,wBAAyB,SAAC/N,GAAD,OAAO,EAAK8O,kBAAkB9O,IACvDmN,UAAW4B,KACXjB,UAAW1P,KAAKf,MAAMiR,WACtBF,iBAAkB,kBAAM,EAAK5R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,aAAcyE,SAAU,OACnFT,mBAAoB,kBAAM,EAAK3R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,cAAeyE,SAAU,OACtFV,qBAAsB,kBAAM,EAAK1R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,YAAa6E,OAAQ,EAAK3R,MAAMiR,gBAGjG,kBAAC,GAAD,CACEf,SAAS,sBACTC,gBAAgB,wEAChBO,wBAAyB,SAAC/N,GAAD,OAAO,EAAKiP,uBAAuBjP,IAC5DmN,UAAW+B,KACXpB,UAAW1P,KAAKf,MAAMmR,gBACtBJ,iBAAkB,kBAAM,EAAK5R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,aAAcyE,SAAU,OACnFT,mBAAoB,kBAAM,EAAK3R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,cAAeyE,SAAU,OACtFV,qBAAsB,kBAAM,EAAK1R,MAAMgM,QAAQ0B,KAAK,CAACC,SAAU,eAAgB0E,OAAQ,EAAKxR,MAAMmR,gBAAiBI,SAAU,oB,GA/ErH5P,IAAMC,WAiGXC,gBAVS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,SAIW,SAACiK,GAAD,MAAe,KAI3B1I,CAA6CmP,I,+BClE7Cc,G,kDApCb,WAAY3S,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,MAAQ,GAHI,E,mHAaOb,M,+EAMxB,OACE,yBAAKG,MAAO,CAAC2J,MAAO,OAAOf,gBAAiB,mDAAoDkJ,UAAW,SAC1G,yBAAK9R,MAAO,CAACyS,UAAW,WACnB,kBAACC,GAAA,EAAD,CACAzK,QAAQ,gBACRjI,MAAO,CAAC4J,UAAW,OAAQ3J,MAAO,WAClCyP,KAAM,IACNiD,UAAW,GACXhN,MAAO,MAET,wBAAI3F,MAAO,CAAC2P,WAAY,YAAa1P,MAAO,UAA5C,yB,GA9BWoC,IAAMC,WCerBsQ,G,kDACJ,WAAY/S,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXmS,oBAAoB,EACpBC,kBAAkB,EAClBC,MAAO,EACPC,iBAAkB,EAClBC,UAAW,KACXC,WAAY,CACV,CACEC,IAAK,SACLC,UAAW,0CACXzK,MAAO,wGACP0K,QAAS,WACTC,QAAS,SACTC,QAAS,UACTC,QAAS,UACTC,IAAK,SACLC,SAAU,QACVC,UAAW,UACXC,WAAY,WACZC,WAAY,aAEd,CACEV,IAAK,SACLC,UAAW,0CACXzK,MAAO,mFACP0K,QAAS,WACTC,QAAS,SACTC,QAAS,UACTC,QAAS,UACTC,IAAK,UACLC,SAAU,QACVC,UAAW,UACXC,WAAY,WACZC,WAAY,aAEd,CACAV,IAAK,SACLC,UAAW,0CACXzK,MAAO,wEACP0K,QAAS,WACTC,QAAS,SACTC,QAAS,WACTC,QAAS,UACTC,IAAK,WACLC,SAAU,QACVC,UAAW,UACXC,WAAY,WACZC,WAAY,eAjDC,E,iGAsDDC,EAASf,EAAOgB,EAAaC,G,uFACpB9S,IAAMC,KAAKX,EAAK,CACrCY,MAAM,0FAAD,OAGsB0S,EAHtB,6CAImBf,EAJnB,kDAKyBgB,EALzB,gDAMsBC,EANtB,4FAcLvG,OAAM,SAAAlJ,GACNzD,QAAQmT,MAAM1P,M,OAhBd2P,E,OAkBJpT,QAAQC,IAAImT,G,wQAKdpT,QAAQC,IAAIU,KAAK5B,MAAMsU,SAASlC,UAChCnR,QAAQC,IAAIU,KAAK5B,MAAMsU,SAASjC,QAC1BwB,EAAWjS,KAAK5B,MAAMsU,SAASlC,SAEpB,YADb0B,EAAYlS,KAAK5B,MAAMsU,SAASjC,UAEjCyB,EAAY,I,SAGSzS,IAAMC,KAAKX,EAAK,CACxCY,MAAM,iDAAD,OAE0BsS,EAF1B,0BAEoDC,EAFpD,2Q,UADCV,E,OAqBNnS,QAAQC,IAAIkS,KACTA,GAAcA,EAAU1R,MAAS0R,EAAU1R,KAAKA,M,0CAC1CE,KAAKH,SAAS,CAAC2R,UAAWA,EAAU1R,KAAKA,KAAK6S,cAAcC,a,iJAQjE,OADAvT,QAAQC,IAAIU,KAAK5B,MAAMsU,UACnB1S,KAAK5B,MAAMsU,SAASlC,SAGpBxQ,KAAK5B,MAAMmB,UAGfS,KAAK6S,eAFK7S,KAAK5B,MAAMgM,QAAQ0B,KAAK,SAHxB9L,KAAK5B,MAAMgM,QAAQ0B,KAAK,Y,yCASnB1N,M,mFAQN0U,EAAUC,GACrB,IAAIC,EAAS,EACTC,GAAW,EAMf,OALGH,EAASd,MAAQe,IACjBC,EA9IiB,IA+IjBC,GAAW,GAGPjT,KAAKH,SAAS,CAACyR,MAAOtR,KAAKf,MAAMqS,MAAQ0B,EAAQ5B,oBAAoB,EAAMC,iBAAkB4B,M,kCAIpG,OAAOjT,KAAKH,SAAS,CAACyR,MAAM,EAAGC,iBAAiB,M,qCAKhD,GAAGvR,KAAKf,MAAMsS,iBAAmB,GAAKvR,KAAKf,MAAMuS,UAAUnP,OAAO,CAE/D,IAAI7C,EAAWQ,KAAK5B,MAAMmB,KAAKC,SAC3B0T,EAAclT,KAAKf,MAAMqS,MAAQ,EACjCgB,EAAc,IAAIzN,KACtByN,EAAcA,EAAYa,cAC1B,IAAIZ,EAAU,IACsB,WAAjCvS,KAAK5B,MAAMsU,SAASlC,WACpB+B,EAAU,KAEblT,QAAQC,IAAIgT,GACZtS,KAAKoT,YAAY5T,EAAU0T,EAAaZ,EAAaC,GAOxD,OAAOvS,KAAKH,SAAS,CAAC0R,iBAAkBvR,KAAKf,MAAMsS,iBAAmB,EAAGH,oBAAoB,EAAOC,kBAAkB,M,+BAG9G,IAAD,OACP,GAA2B,MAAxBrR,KAAKf,MAAMuS,WAA6C,MAAxBxR,KAAKf,MAAMuS,UAC5C,OACE,kBAAC,GAAD,MAGJ,IAAMsB,EAAW9S,KAAKf,MAAMuS,UAAUxR,KAAKf,MAAMsS,kBAC3C8B,EAAQ,CAAC7U,MAAO,QAAS6I,gBAAiB,UAAWM,OAAQ,OAOnE,OACE,yBAAKpJ,MAAOyB,KAAK5B,MAAMsU,SAASlC,UAA6C,UAAjCxQ,KAAK5B,MAAMsU,SAASlC,SAPzC,CAAErJ,gBAAiB,mDACjBe,MAAO,OAAQmI,UAAW,OAAQnC,WAAY,aAE/C,CAAE/G,gBAAiB,oDACjBe,MAAO,OAAQmI,UAAW,OAAQnC,WAAY,cAIvE,yBAAK3P,MAAO,CAACsJ,QAAS,OAAQmJ,UAAW,SAAUlJ,cAAe,WAG5B,UAAjC9H,KAAK5B,MAAMsU,SAASlC,SAClB,wBAAIjS,MAAO,CAACC,MAAO,QAAS2J,UAAW,QAASmL,WAAY,IAAKhF,SAAU,QAA3E,8CAEA,wBAAI/P,MAAO,CAACC,MAAO,QAAS2J,UAAW,QAASmL,WAAY,IAAKhF,SAAU,QAA3E,+CAGJ,wBAAI7P,UAAU,SACV,0BAAMF,MAAO,CAACC,MAAO,UAArB,mBACCwB,KAAKf,MAAMqS,OAIdtR,KAAKf,MAAMsS,kBAAoBvR,KAAKf,MAAMuS,UAAUnP,OAClD,kBAACqM,GAAA,EAAD,CAAMnQ,MAAO,CAACoJ,OAAO,UAAWkD,UAAW,IACzC,kBAACgE,GAAA,EAAD,CAAgBtQ,MAAO,CAAC4J,UAAW,MAAOoL,SAAU,SAClD,kBAACzE,GAAA,EAAD,CACEvQ,MAAO,CAAC0I,OAAQ,IAAKiB,MAAO,IAAKP,OAAQ,SAAUgH,aAAc,OACjEzH,MAAOsM,OAET,kBAACvE,GAAA,EAAD,KACE,kBAAC1I,EAAA,EAAD,CAAY2I,cAAY,EAAC1I,QAAQ,KAAKZ,UAAU,MAAhD,oCACoC5F,KAAKf,MAAMqS,OAE/C,kBAAC/K,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBoH,UAAU,QAKhE,kBAACiK,GAAA,EAAD,KACC,yBAAMtR,MAAO,CAACyS,UAAW,SAAUrJ,OAAQ,WAC1C,kBAAC8D,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWkN,QAAS,kBAAI,EAAKtN,MAAMgM,QAAQ0B,KAAK,YAA3E,qBAGA,kBAACL,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWkN,QAAS,kBAAK,EAAK+H,cAAzD,iBAMJ,KAIHX,EACG,kBAACpE,GAAA,EAAD,CAAMnQ,MAAO,CAACoJ,OAAO,UAAWkD,UAAW,IACzC,kBAACgE,GAAA,EAAD,CAAgBtQ,MAAO,CAAC4J,UAAW,MAAOoL,SAAU,SAClD,kBAACzE,GAAA,EAAD,CACEvQ,MAAO,CAAC0I,OAAQ,IAAKiB,MAAO,IAAKP,OAAQ,UACzCT,MAAO4L,EAAS5L,MAChB8H,MAAM,0BACR,kBAACC,GAAA,EAAD,KACE,kBAAC1I,EAAA,EAAD,CAAY2I,cAAY,EAAC1I,QAAQ,KAAKZ,UAAU,MAAhD,YACY5F,KAAKf,MAAMsS,mBAGa,IAAlCvR,KAAKf,MAAMmS,mBACX,kBAAC7K,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBoH,UAAU,IAAIrH,MAAO,CAAC+P,SAAU,UAE9C,IAAhCtO,KAAKf,MAAMoS,iBACV,0BAAM9S,MAAO,CAACC,MAAO,UAAW8U,WAAY,MAA5C,cA9PH,KAgQG,0BAAM/U,MAAO,CAACC,MAAO,MAAO8U,WAAY,MAAxC,eAIL,kBAAC/M,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBoH,UAAU,KACzDkN,EAASnB,aAOlB,kBAAC9B,GAAA,EAAD,MAEoC,IAAlC7P,KAAKf,MAAMmS,mBACX,yBAAM7S,MAAO,CAACyS,UAAW,SAAUrJ,OAAQ,WAC1C,kBAAC8D,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAUD,MAAO8U,EAAO3H,QAAS,kBAAI,EAAKgI,iBAArE,kBAMD,yBAAMnV,MAAO,CAACyS,UAAW,SAAUrJ,OAAQ,WAC1C,kBAAC8D,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO8U,EAAO3H,QAAS,kBAAI,EAAKiI,aAAab,EAAUA,EAASlB,WACnGkB,EAASlB,SAEZ,kBAACnG,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO8U,EAAO3H,QAAS,kBAAI,EAAKiI,aAAab,EAAUA,EAASjB,WACnGiB,EAASjB,SAEZ,kBAACpG,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO8U,EAAO3H,QAAS,kBAAI,EAAKiI,aAAab,EAAUA,EAAShB,WACnGgB,EAAShB,SAEZ,kBAACrG,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWD,MAAO8U,EAAQ3H,QAAS,kBAAI,EAAKiI,aAAab,EAAUA,EAASf,WACpGe,EAASf,YAQjB,KAIF/R,KAAK5B,MAAMsU,SAASjC,QAAyC,WAA/BzQ,KAAK5B,MAAMsU,SAASjC,OAClD,wBAAIlS,MAAO,CAACC,MAAO,QAAS8U,WAAY,IAAKhF,SAAU,QAAvD,wBAAqFtO,KAAK5B,MAAMsU,SAASjC,QACvG,W,GA7SU7P,IAAMC,WAgUfC,gBAVS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,SAIW,SAACiK,GAAD,MAAe,KAI3B1I,CAA6CqQ,ICxUtDtK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,QACRiB,MAAO,OACP0L,SAAU,SACVzM,gBAAiB,qDAEnBO,MAAO,CACLG,QAAS,OACTF,OAAQ,IACRO,MAAO,OACPjB,OAAQ,KAEV4M,cAAe,CACb3L,MAAO,OACPjB,OAAQ,QAEV6M,SAAU,CACRjM,QAAS,OACTC,cAAe,MACfK,UAAW,OAEbzF,QAAS,CACPmF,QAAS,OACTC,cAAe,WAqGJhH,gBANS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,QAIwB,GAAzBuB,EAjGC,SAAC,GAAc,IAAZvB,EAAW,EAAXA,KACX2K,EAAUrD,KACVuD,EAAUC,cAEhB,OACE,yBAAK5L,UAAWyL,EAAQlD,MACtB,kBAACsD,EAAA,EAAD,CAAMC,WAAS,EAACwJ,UAAU,MAAMnM,QAAS,GACvC,kBAAC8G,GAAA,EAAD,CAAMjQ,UAAWyL,EAAQxC,OACvB,kBAAC4C,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACqE,GAAA,EAAD,CACErQ,UAAWyL,EAAQ2J,cACnB3M,MAAO3H,EAAKgB,gBACZyO,MAAM,qBAGV,kBAAC1E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACH,EAAA,EAAD,CAAMyJ,UAAU,MAAMnM,QAAS,GAC7B,kBAACqH,GAAA,EAAD,CAAa1Q,MAAO,CAACyV,WAAY,QAC/B,yBAAKzV,MAAO,CAACsJ,QAAS,OAAQC,cAAe,MAAOK,UAAW,QAC7D,kBAACmC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,YAAYhI,MAAM,gBAAgBoH,UAAU,KAAhE,cAKJ,yBAAKnH,UAAWyL,EAAQxH,SACtB,kBAAC4H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,aAChBjH,EAAKC,YAIb,yBAAKf,UAAWyL,EAAQ4J,UACtB,kBAACxJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,YAAYhI,MAAM,gBAAgBoH,UAAU,KAAhE,cAIF,kBAAC0E,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,YAAYhI,MAAM,gBAAgBoH,UAAU,KAAhE,gBAKJ,yBAAKnH,UAAWyL,EAAQxH,SACtB,kBAAC4H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,aAChBjH,EAAK6M,UAAY,IAAM7M,EAAK+M,WAGlC,kBAAChC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,aAChBjH,EAAK4S,WAAW8B,MAAM,EAAG1U,EAAK4S,WAAW+B,QAAQ,SAIzD,yBAAKzV,UAAWyL,EAAQ4J,UACtB,kBAACxJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,YAAYhI,MAAM,gBAAgBoH,UAAU,KAAhE,aAKJ,yBAAKnH,UAAWyL,EAAQxH,SACtB,kBAAC4H,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAClE,EAAA,EAAD,CAAYC,QAAQ,aAChBjH,EAAKmN,SAET,yBAAK/N,IAAKY,EAAKsN,KAAMhO,IAAI,OAAOoI,OAAO,OACvC,kBAACqD,EAAA,EAAD,CAAM6J,MAAI,EAAC1J,GAAI,EAAGlM,MAAO,CAAC4J,UAAW,QACnC,kBAACsD,EAAA,EAAD,CACEP,WAAS,EACT1E,QAAQ,YACRhI,MAAM,UACNC,UAAWyL,EAAQ9B,OACnBsD,QAAS,kBAAMtB,EAAQ0B,KAAK,CAACC,SAAS,mBALxC,sB,8DCiJPjL,gBAVS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,SAIW,SAACiK,GAAD,MAAe,CACxCf,WAAY,SAAC2L,GAAD,OAAa5K,EAASf,GAAW2L,QAGhCtT,EA1OI,SAAC,GAA0B,IAAxBvB,EAAuB,EAAvBA,KAAMkJ,EAAiB,EAAjBA,WAAiB,EACTqB,mBAAS,IADA,mBACpCsC,EADoC,KACzBC,EADyB,OAEXvC,mBAAS,IAFE,mBAEpCwC,EAFoC,KAE1BC,EAF0B,OAGXzC,mBAAS,IAHE,mBAGpCtK,EAHoC,KAG1BuK,EAH0B,OAIXD,mBAAS,IAJE,mBAIpCE,EAJoC,KAI1BC,EAJ0B,OAKTH,mBAAS,IALA,mBAKpCuK,EALoC,KAKzBC,EALyB,OAMbxK,mBAAS,IANI,mBAMpC4C,EANoC,KAM3BC,EAN2B,OAOE7C,mBAAS,IAPX,mBAOpCvJ,EAPoC,KAOnBgU,EAPmB,OAQLzK,mBAAS,GARJ,mBAQpC0K,EARoC,KAQvBC,EARuB,OASX3K,mBAAS,IATE,mBASpC4K,EAToC,KAS1BC,EAT0B,KAUrCzK,GAAUC,IAV2B,8CAgC3C,WAA4B1G,GAA5B,mBAAArE,EAAA,yDACEqE,EAAMC,iBAEwB,IAA3BsG,EAASN,OAAOrH,OAHrB,gBAIIsJ,MAAM,4CAJV,0BAKY3B,EAASN,SAAW2K,EAAU3K,OAL1C,gBAMIiC,MAAM,kDANV,0BAOwC,IAA5BS,EAAU1C,OAAOrH,QACU,IAA3BiK,EAAS5C,OAAOrH,QACW,IAA3B7C,EAASkK,OAAOrH,QACY,IAA5BgS,EAAU3K,OAAOrH,QACS,IAA1BqK,EAAQhD,OAAOrH,QACY,IAA3B9B,EAAgB8B,OAZ5B,iBAcIsJ,MAAM,0EAdV,qCAiBUkB,EAAO,KACRH,EAAQhD,OAAOrH,OAAS,GAlBjC,kCAmBqB5C,IAAMmN,IAAN,gDAC8BF,IApBnD,QAuBQG,GAJAA,EAnBR,QAuBoB/M,KAAK,GAAG+M,KAvB5B,yBA0B4BpD,KA1B5B,WA0BYmL,EA1BZ,OA2BMvV,QAAQC,IAAIsV,GACE,GAAXA,EA5BT,oEAgCgCnV,IAAMC,KAAKX,EAAK,CACxCY,MAAM,2DAAD,OAEiBJ,EAAKmS,IAFtB,mDAGetF,EAAU1C,OAHzB,yCAIc4C,EAAS5C,OAJvB,yCAKclK,EAASkK,OALvB,yCAMcM,EAASN,OANvB,6CAOkB2K,EAAU3K,OAP5B,wCAQagD,EAAQhD,OARrB,gDASqBnJ,EATrB,qCAUUsM,EAVV,uRAjCb,QA0DgC,OA1BpBvE,EAhCZ,QA0DqB5J,SACbW,QAAQC,IAAIgJ,GACZG,EAAWH,EAAYxI,KAAKA,KAAK2I,YACjCkD,MAAM,iBA7Dd,mDAgEMtM,QAAQC,IAAR,MACAqM,MAAM,wBAjEZ,8FAhC2C,sBAwG3C,OACE,6BACE,kBAACkJ,GAAA,EAAD,CAAWjP,UAAU,OAAOkP,SAAS,MACnC,yBAAKrW,UAAWyL,GAAQxC,OACtB,kBAACqD,EAAA,EAAD,CAAQtM,UAAWyL,GAAQlC,QACzB,kBAAC,KAAD,OAEF,kBAACzB,EAAA,EAAD,CAAYX,UAAU,KAAKY,QAAQ,MAAnC,kBAGA,0BAAM/H,UAAWyL,GAAQjC,KAAM+C,YAAU,GACvC,kBAACC,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,OACL5B,KAAK,YACLqM,MAAM,gBACN9K,GAAG,QACH+K,aAAa,YACbhF,SAAU,SAACxE,GAAD,OAAOyK,EAAazK,EAAEqC,OAAOC,QACvCgH,WAAS,EACTG,WAAS,IAEX,kBAACJ,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,OACL5B,KAAK,WACLqM,MAAM,eACN9K,GAAG,WACH+K,aAAa,WACbhF,SAAU,SAACxE,GAAD,OAAO2K,EAAY3K,EAAEqC,OAAOC,QACtCgH,WAAS,IAEX,kBAACD,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,OACL5B,KAAK,WACLqM,MAAM,eACN9K,GAAG,WACH+K,aAAa,WACbhF,SAAU,SAACxE,GAAD,OAAOmI,EAAYnI,EAAEqC,OAAOC,QACtCgH,WAAS,IAEX,kBAACD,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,OACL5B,KAAK,UACLqM,MAAM,cACN9K,GAAG,UACH+K,aAAa,UACbhF,SAAU,SAACxE,GAAD,OAAO+K,EAAW/K,EAAEqC,OAAOC,QACrCgH,WAAS,IAEX,kBAACD,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,WACL5B,KAAK,YACLqM,MAAM,eACN9K,GAAG,YACH+K,aAAa,eACbhF,SAAU,SAACxE,GAAD,OAAO0S,EAAa1S,EAAEqC,OAAOC,QACvCgH,WAAS,IAEX,kBAACD,EAAA,EAAD,CACEzE,QAAQ,WACRmB,OAAO,SACPjH,KAAK,WACL5B,KAAK,WACLqM,MAAM,mBACN9K,GAAG,WACH+K,aAAa,eACbhF,SAAU,SAACxE,GAAD,OAAOqI,EAAYrI,EAAEqC,OAAOC,QACtCgH,WAAS,EACT7E,UAAQ,IAEV,yBAAK9H,MAAO,CAAC4J,UAAU,MAAON,QAAS,OAAQC,cAAe,QAC5D,2BAAOrH,QAAQ,gBACb,kBAACsU,GAAA,EAAD,CACExW,MAAO,CAAEsJ,QAAS,QAClBxH,GAAG,eACHvB,KAAK,eACL4B,KAAK,OACL0F,SAAU,SAAAxE,GAAC,OAlL3B,SAAsB6B,GACpB,IAAMuR,EAAOvR,EAAMQ,OAAOgR,MAAM,GAChCN,EAAYK,EAAKlW,MACjB,IACMoW,EADaC,IAASC,UAAUnP,IAAnB,2BAA2C1G,EAAKC,WAC3C6V,IAAIL,GAE5BE,EAAKI,GAAG,iBAAiB,SAAAC,GACvB,IAAIC,EAAcD,EAASE,iBAAiBF,EAASG,WAAY,IACjEjB,EAAee,MACd,SAAAhD,GACDnT,QAAQC,IAAIkT,EAAM1Q,YACjB,WACDoT,EAAKK,SAAStP,IAAI0P,iBAAiB/J,MAAK,SAAC1H,GACvC7E,QAAQC,IAAI4E,GACZqQ,EAAkBrQ,GAClBuQ,EAAe,WAmKUmB,CAAahU,MAE9B,kBAAC6J,EAAA,EAAD,CACEjN,MAAM,UACNgI,QAAQ,YACRZ,UAAU,OACVrH,MAAO,CAAC8I,gBAAiB,UAAWwO,YAAa,UAEjD,kBAAC,KAAD,CAAStX,MAAO,CAACsX,YAAa,SANhC,kBASF,8BAAU3R,MAAOsQ,EAAasB,IAAI,MAAMvX,MAAO,CAAC2J,MAAO,MAAOC,UAAU,WAE1E,kBAAC5B,EAAA,EAAD,CAAY/H,MAAM,gBAAgBgI,QAAQ,YAAYjI,MAAO,CAAC4J,UAAU,UAAWuM,GAEnF,kBAACjJ,EAAA,EAAD,CACEP,WAAS,EACT1E,QAAQ,YACRhI,MAAM,UACNC,UAAWyL,GAAQ9B,OACnBsD,QAAS,SAAC9J,GAAD,OAlNsB,4CAkNf2L,CAAa3L,KAL/B,YAWJ,kBAACqK,EAAA,EAAD,CAAKC,GAAI,EAAG3N,MAAO,CAACgG,aAAa,QAC/B,kBAAC+B,EAAD,Y,UCzNJyP,GAAa,CACjB,oEACA,mEACA,qEACA,sEACA,oEACA,sEACA,uEAWIC,GAAgB,CAClBC,YAAa,MACbC,YAAa,SACbC,QAAS,CACL,CAAEC,WAAY,SAWhBC,GAAgBC,0BAAc,SAAAlY,GAClC,IAAMmY,EAAQnY,EAAMoY,QAAQtW,KAAI,SAAC4S,EAAUzO,GACzC,IAAMoS,EAAoB9R,KAAK+R,MAAM/R,KAAKgS,SAAWZ,GAAW1T,QAChE,OACE,kBAAC,UAAD,CACEjC,IAAK,MAAMiE,EACXuS,KAAO,CAACC,IAAKd,GAAWU,IACxBzH,MAAO,UAAU3K,EACjBvF,KAAM,UAAUuF,EAChB0J,SAAU,CAAC+I,IAAKhE,EAASiE,SAAUC,IAAKlE,EAASmE,WACjDC,WAAW,EACXxL,QAAS,SAAC9J,GACHxD,EAAM+Y,OAAOrE,SAM1B,OACG,kBAAC,aAAD,CACEsE,cAAehZ,EAAMuP,OACrB0J,YAAa,EACbC,eAAgB,CACXC,aAAa,EAAOC,OAAQ,CAACxB,MAElCO,MAIDkB,G,kDACJ,WAAYrZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXmS,oBAAoB,EACpBC,kBAAkB,EAClBqG,WAAY,EACZpG,MAAO,EACPC,iBAAkB,EAClBC,UAAW,MARI,E,oLAmBXU,EAAY,EAAIvN,KAAK+R,MAAsB,EAAhB/R,KAAKgS,U,SACdlX,IAAMC,KAAKX,EAAK,CACxCY,MAAM,+DAAD,OAEoCuS,EAFpC,oG,UADCV,E,OAWNnS,QAAQC,IAAIkS,KACTA,GAAcA,EAAU1R,MAAS0R,EAAU1R,KAAKA,M,yCAC1CE,KAAKH,SAAS,CAAC2R,UAAWA,EAAU1R,KAAKA,KAAK6X,wB,iLAKvCtF,EAASf,EAAOgB,EAAaC,G,8EAC7ClT,QAAQC,IAAI,oCAAoCgS,G,SACtB7R,IAAMC,KAAKX,EAAK,CACtCY,MAAM,0FAAD,OAGsB0S,EAHtB,6CAImBf,EAJnB,kDAKyBgB,EALzB,gDAMsBC,EANtB,4FAcLvG,OAAM,SAAAlJ,GACNzD,QAAQmT,MAAM1P,M,OAhBd8U,E,OAkBFvY,QAAQC,IAAIsY,G,kJAId5X,KAAK6S,eAMF7S,KAAK5B,MAAMsU,SAAS9B,QACpB5Q,KAAKH,SAAS,CAAC6X,WAAY1X,KAAK5B,MAAMsU,SAAS9B,W,mCAMvCkC,EAAUC,GACrB1T,QAAQC,IAAIyT,GACZ,IAAIC,EAAS,EACTC,GAAW,EAMf,GALGH,EAASiE,WAAahE,EAAOgE,UAAYjE,EAASmE,YAAclE,EAAOkE,YACvEjE,EAhJiB,IAiJjBC,GAAW,GAGXjT,KAAKf,MAAMsS,iBAAmB,GAAKvR,KAAKf,MAAMyY,WAAW,CAE1D,IAAIlY,EAAWQ,KAAK5B,MAAMmB,KAAKC,SAC3B0T,EAAclT,KAAKf,MAAMqS,MAAQ0B,EAAS,EAC1CV,EAAc,IAAIzN,KACtByN,EAAcA,EAAYa,cAG1BnT,KAAKoT,YAAY5T,EAAU0T,EAAaZ,EAF1B,KAShB,OADAtS,KAAK6S,eACE7S,KAAKH,SAAS,CAACyR,MAAOtR,KAAKf,MAAMqS,MAAQ0B,EAAQ5B,oBAAoB,EAAMC,iBAAkB4B,M,qCAKpG,OAAOjT,KAAKH,SAAS,CAAC0R,iBAAkBvR,KAAKf,MAAMsS,iBAAmB,EAAGH,oBAAoB,EAAOC,kBAAkB,M,kCAItH,OAAOrR,KAAKH,SAAS,CAACyR,MAAM,EAAGC,iBAAiB,M,+BAGxC,IAAD,OACHwB,EAAS,KACPD,EAAW9S,KAAKf,MAAMuS,UACzBsB,IACAC,EAASpO,KAAK+R,MAAM/R,KAAKgS,SAAW3W,KAAKf,MAAMuS,UAAUnP,SAM5D,OACE,yBAAK5D,UAAU,iBACd,yBAAKA,UAAU,qBACZ,wBAAIF,MAAO,CAACC,MAAO,QAAS8U,WAAY,IAAKhF,SAAU,MAAOwG,SAAU,OAAQnN,OAAQ,SAAUQ,UAAW,UAA7G,mEAIA,wBAAI1J,UAAU,SACV,0BAAMF,MAAO,CAACC,MAAO,UAArB,mBACCwB,KAAKf,MAAMqS,OAIdtR,KAAKf,MAAMsS,kBAAoBvR,KAAKf,MAAMyY,WACxC,kBAAChJ,GAAA,EAAD,CAAMnQ,MAAO,CAACoJ,OAAO,UAAWkD,UAAW,IACzC,kBAACgE,GAAA,EAAD,CAAgBtQ,MAAO,CAAC4J,UAAW,MAAOoL,SAAU,SAClD,kBAACzE,GAAA,EAAD,CACEvQ,MAAO,CAAC0I,OAAQ,IAAKiB,MAAO,IAAKP,OAAQ,SAAUgH,aAAc,OACjEzH,MAAOsM,OAET,kBAACvE,GAAA,EAAD,KACE,kBAAC1I,EAAA,EAAD,CAAY2I,cAAY,EAAC1I,QAAQ,KAAKZ,UAAU,MAAhD,oCACoC5F,KAAKf,MAAMqS,OAE/C,kBAAC/K,EAAA,EAAD,CAAYC,QAAQ,QAAQhI,MAAM,gBAAgBoH,UAAU,QAKhE,kBAACiK,GAAA,EAAD,KACC,yBAAMtR,MAAO,CAACyS,UAAW,SAAUrJ,OAAQ,WAC1C,kBAAC8D,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWkN,QAAS,kBAAI,EAAKtN,MAAMgM,QAAQ0B,KAAK,YAA3E,qBAGA,kBAACL,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAWkN,QAAS,kBAAK,EAAK+H,cAAzD,iBAMJ,KAIDzT,KAAKf,MAAMmS,mBACX,kBAAC1C,GAAA,EAAD,CAAMnQ,MAAO,CAACoJ,OAAQ,SAAUO,MAAO,OAAQ2P,QAAS,MAAOlJ,aAAc,OAAQxG,UAAW,MAClFyG,UAAW,4GAEvB,yBAAMrQ,MAAO,CAACyS,UAAW,SAAUrJ,OAAQ,SAAUE,QAAS,OAAQC,cAAe,YAEjD,IAAhC9H,KAAKf,MAAMoS,iBACV,0BAAM5S,UAAU,kBAAhB,cA5OI,KAgPJ,0BAAMA,UAAU,oBAAhB,cAIJ,kBAACgN,EAAA,EAAD,CAAQwC,KAAK,QAAQzP,MAAM,UAAUD,MA9DnC,CAAEC,MAAO,QAAS6I,gBAAiB,UAAWM,OAAQ,MAAOkQ,QAAS,QACpEjJ,UAAW,2GA6DoClD,QAAS,kBAAI,EAAKgI,iBAArE,mBAMF,KAIFZ,IAA8C,IAAlC9S,KAAKf,MAAMmS,oBAAiCpR,KAAKf,MAAMsS,iBAAmBvR,KAAKf,MAAMyY,WAChG,oCACC,wBAAInZ,MAAO,CAACC,MAAO,YAChB,UAAYwB,KAAKf,MAAMuS,UAAUuB,GAAQjU,KAAM,eAElD,kBAACuX,GAAD,CACK1I,OAAW,CAAEmJ,IAAM,QAAWE,KAAM,UACpCc,iBAAmB,yBAAKvZ,MAAO,CAAE0I,OAAQ,OAAQiB,MAAO,OAAS0L,SAAU,SAAUjM,OAAQ,YAC7FoQ,WAAa,yBAAKtZ,UAAU,gBAC5B+X,QAAW1D,EAQXqE,OAAS,SAACa,GAAD,OAAU,EAAKrE,aAAab,EAASC,GAASiF,OAI1D,W,GApNMpX,IAAMC,WAsObC,gBAVS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,SAIW,SAACiK,GAAD,MAAe,KAI3B1I,CAA6C2W,ICnTtDQ,GAAc,CAClBjE,WAAY,QAAS6B,YAAa,MAAOrX,MAAO,UAAW0Z,eAAgB,OAAQ/P,UAAW,QAC9FmL,WAAY,IAAKhF,SAAU,OAAQV,OAAQ,WAEvCuK,GAAe,CACnBnE,WAAY,OAAQ6B,YAAa,MAAOrX,MAAO,UAAW0Z,eAAgB,OAAQ/P,UAAW,QAC7FmL,WAAY,IAAKhF,SAAU,OAAQV,OAAQ,WAIvCwK,G,kDACJ,WAAYha,GAAQ,IAAD,8BACjB,cAAMA,IAEDa,MAAQ,GAHI,E,gEASjBI,QAAQC,IAAI,WAAWkC,KAAKC,UAAUzB,KAAK5B,MAAMmB,S,+BAIjDS,KAAK5B,MAAMoK,e,+BAGH,IAAD,OACP,OAAsB,MAAnBxI,KAAK5B,MAAMmB,KAET,yBAAKhB,MAAO,CAAC2J,MAAO,OAAQb,gBAAiB,UAAWgJ,UAAW,MAAOnC,WAAY,cACpF,yBAAK3P,MAAO,CAACsJ,QAAS,OAAQC,cAAe,QAC3C,kBAAC,IAAD,CAAMvJ,MAAO0Z,GAAa5Z,GAAG,SAA7B,QACA,kBAAC,IAAD,CAAME,MAAO4Z,GAAa9Z,GAAG,UAA7B,SACA,kBAAC,IAAD,CAAME,MAAO0Z,GAAa5Z,GAAG,WAA7B,aAOP,yBAAKE,MAAO,CAAC2J,MAAO,OAAQb,gBAAiB,UAAWgJ,UAAW,MAAOnC,WAAY,cACpF,yBAAK3P,MAAO,CAACsJ,QAAS,OAAQC,cAAe,QAC3C,kBAAC,IAAD,CAAMrJ,UAAU,SAASJ,GAAG,UAA5B,SACA,kBAAC,IAAD,CAAMI,UAAU,SAASJ,GAAG,YAA5B,WACA,kBAAC,IAAD,CAAMI,UAAU,SAASJ,GAAG,gBAA5B,eACA,kBAAC,IAAD,CAAMI,UAAU,SAASJ,GAAG,cAAcga,SAAO,GAAjD,QACA,kBAAC,IAAD,CAAM5Z,UAAU,SAASJ,GAAG,WAAWga,SAAO,GAA9C,oBAEA,kBAAC,IAAD,CAAM9Z,MAAO,CAACyV,WAAY,OAAQ6B,YAAa,MAAOrX,MAAO,UAAW0Z,eAAgB,OAAQ/P,UAAW,QAC7FmL,WAAY,IAAKhF,SAAU,OAAQV,OAAQ,WACnDlC,QAAS,kBAAM,EAAK4M,UAAUja,GAAG,SAFvC,iB,GAvCWuC,IAAMC,WA6DZC,gBAXS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,SAIW,SAACiK,GAAD,MAAe,CAExChB,WAAY,kBAAMgB,EAAShB,SAGd1H,CAA6CsX,I,oEC3DtDG,GAAkBC,cAAW,SAACzR,GAAD,MAAY,CAC7C0R,KAAM,CACJpR,gBAAiBN,EAAMO,QAAQoR,OAAOC,MACtCna,MAAOuI,EAAMO,QAAQoR,OAAOE,OAE9BC,KAAM,CACJvK,SAAU,OANUkK,CAQpBM,MAEEC,GAAiBP,cAAW,SAACzR,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBK,gBAAiBN,EAAMO,QAAQwB,OAAOkQ,WAHrBR,CAMnBS,MAEEpS,GAAYC,YAAW,CAC3B+G,MAAO,CACL0F,SAAU,OA4FCzS,gBAPS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,QAGW,GAEZuB,EAxFG,SAAC1C,GACjB,IAAM8L,EAAUrD,KADW,EAEHiD,mBAAS,GAFN,mBAEpBoP,EAFoB,KAEdC,EAFc,iDAK3B,gCAAA/Z,EAAA,6DACMoR,EAAW,EACZpS,EAAMsU,SAASlC,WACfA,EAAWpS,EAAMsU,SAASlC,UAH/B,kBAO0B/G,KAP1B,UAOUmL,EAPV,OAQIvV,QAAQC,IAAIsV,GACE,GAAXA,EATP,kEAY+BnV,IAAMC,KAAKX,EAAK,CACzCY,MAAM,2DAAD,OAE0B6Q,EAF1B,wJAbX,WAYU4I,EAZV,OA0BI/Z,QAAQC,IAAI8Z,GACgB,MAAxBA,EAAa1a,OA3BrB,0CA4Baya,EAAQC,EAAatZ,KAAKA,KAAKuZ,kBA5B5C,QA8BM1N,MAAM,6BA9BZ,0DAiCItM,QAAQmT,MAAR,MAjCJ,2DAL2B,sBA+C3B,OALA8G,qBAAU,YA1CiB,mCA2CzBC,GACAla,QAAQC,IAAI4Z,KACX,IAGD,kBAACM,GAAA,EAAD,CAAgB5T,UAAWgF,KACzB,kBAAC6O,GAAA,EAAD,CAAOhb,UAAWyL,EAAQ2D,MAAO6L,aAAW,oBAC1C,kBAACC,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAACV,GAAD,WACA,kBAACA,GAAD,iBACA,kBAACA,GAAD,CAAiB9R,MAAM,SAAvB,SACA,kBAAC8R,GAAD,CAAiB9R,MAAM,SAAvB,QACA,kBAAC8R,GAAD,CAAiB9R,MAAM,SAAvB,UAGJ,kBAACmT,GAAA,EAAD,KACGV,EAAOA,EAAKhZ,KAAI,SAAA2Z,GAAO,OACtB,kBAACd,GAAD,CAAgB3Y,IAAKyZ,EAAQC,IAC7B,kBAACvB,GAAD,CAAiB3S,UAAU,KAAKmU,MAAM,OACnCF,EAAQC,IAEX,kBAACvB,GAAD,CAAiB9R,MAAM,SAASoT,EAAQG,SACxC,kBAACzB,GAAD,CAAiB9R,MAAM,SAASoT,EAAQI,MAAM,GAC9C,kBAAC1B,GAAD,CAAiB9R,MAAM,SAASoT,EAAQK,YAEnB,MAApBL,EAAQM,QAAoB,kBAAC5B,GAAD,CAAiB9R,MAAM,SAAvB,0BAA0E,KAClF,MAApBoT,EAAQM,QAAoB,kBAAC5B,GAAD,CAAiB9R,MAAM,SAAvB,sBAAsE,KAC9E,MAApBoT,EAAQM,QAAoB,kBAAC5B,GAAD,CAAiB9R,MAAM,SAAvB,uBAAuE,SAGjF,WClGzB8R,GAAkBC,cAAW,SAACzR,GAAD,MAAY,CAC7C0R,KAAM,CACJpR,gBAAiBN,EAAMO,QAAQoR,OAAOC,MACtCna,MAAOuI,EAAMO,QAAQoR,OAAOE,OAE9BC,KAAM,CACJvK,SAAU,OANUkK,CAQpBM,MAEEC,GAAiBP,cAAW,SAACzR,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBK,gBAAiBN,EAAMO,QAAQwB,OAAOkQ,WAHrBR,CAMnBS,MAEEpS,GAAYC,YAAW,CAC3B+G,MAAO,CACL0F,SAAU,OAgGCzS,gBAPS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,QAGW,GAEZuB,EA5FG,SAAC1C,GACjB,IAAM8L,EAAUrD,KADW,EAEHiD,mBAAS,GAFN,mBAEpBoP,EAFoB,KAEdC,EAFc,iDAK3B,kCAAA/Z,EAAA,6DACMoR,EAAW,EACZpS,EAAMsU,SAASlC,WACfA,EAAWpS,EAAMsU,SAASlC,UAEzBhR,EAAWpB,EAAMmB,KAAKC,SAL5B,kBAQ0BiK,KAR1B,UAQUmL,EARV,OASIvV,QAAQC,IAAIsV,GACE,GAAXA,EAVP,oEAa+BnV,IAAMC,KAAKX,EAAK,CACzCY,MAAM,kEAAD,OAEkCH,EAFlC,wBAE0DgR,EAF1D,wKAdX,WAaU4I,EAbV,OA6BI/Z,QAAQC,IAAI8Z,GACgB,MAAxBA,EAAa1a,OA9BrB,0CA+Baya,EAAQC,EAAatZ,KAAKA,KAAKsa,yBA/B5C,QAiCMzO,MAAM,6BAjCZ,0DAoCItM,QAAQmT,MAAR,MApCJ,2DAL2B,sBAmD3B,OANA8G,qBAAU,YA7CiB,mCA8CzBC,GACAla,QAAQC,IAAI4Z,KACX,IAID,kBAACM,GAAA,EAAD,CAAgB5T,UAAWgF,KACzB,kBAAC6O,GAAA,EAAD,CAAOhb,UAAWyL,EAAQ2D,MAAO6L,aAAW,oBAC1C,kBAACC,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAAC,GAAD,WACA,kBAAC,GAAD,iBACA,kBAAC,GAAD,CAAiBxS,MAAM,SAAvB,SACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,QACA,kBAAC,GAAD,CAAiBA,MAAM,SAAvB,UAGJ,kBAACmT,GAAA,EAAD,KACGV,EAAOA,EAAKhZ,KAAI,SAAA2Z,GAAO,OACtB,kBAAC,GAAD,CAAgBzZ,IAAKyZ,EAAQC,IAC7B,kBAAC,GAAD,CAAiBlU,UAAU,KAAKmU,MAAM,OACnCF,EAAQC,IAEX,kBAAC,GAAD,CAAiBrT,MAAM,SAASoT,EAAQG,SACxC,kBAAC,GAAD,CAAiBvT,MAAM,SAASoT,EAAQI,MAAM,GAC9C,kBAAC,GAAD,CAAiBxT,MAAM,SAASoT,EAAQK,YAEpB,KAAnBL,EAAQM,QAAmB,kBAAC,GAAD,CAAiB1T,MAAM,SAAvB,0BAA0E,KAClF,KAAnBoT,EAAQM,QAAmB,kBAAC,GAAD,CAAiB1T,MAAM,SAAvB,sBAAsE,KAC9E,KAAnBoT,EAAQM,QAAmB,kBAAC,GAAD,CAAiB1T,MAAM,SAAvB,uBAAuE,SAGhF,W,qBC1GzB4T,GAAO,kDAEP9B,GAAkBC,cAAW,SAACzR,GAAD,MAAY,CAC7C0R,KAAM,CACJpR,gBAAiBN,EAAMO,QAAQoR,OAAOC,MACtCna,MAAOuI,EAAMO,QAAQoR,OAAOE,OAE9BC,KAAM,CACJvK,SAAU,IAEZT,MAAO,CACL0F,SAAU,QATUiF,CAWpBM,MAEEC,GAAiBP,cAAW,SAACzR,GAAD,MAAY,CAC5CC,KAAM,CACJ,qBAAsB,CACpBK,gBAAiBN,EAAMO,QAAQwB,OAAOkQ,WAHrBR,CAMnBS,MAEEpS,GAAYC,YAAW,CAC3BE,KAAM,CACJkB,MAAO,QAETqC,UAAW,CACT+P,UAAW,IACXnS,UAAU,UAqECrH,gBAPS,SAAC7B,GACvB,MAAO,CACLM,KAAMN,EAAMM,QAGW,GAEZuB,EAjEC,SAAC1C,GACf,IAAM8L,EAAUrD,KADS,EAEDiD,mBAAS,GAFR,mBAElBoP,EAFkB,KAEZC,EAFY,iDAKzB,4BAAA/Z,EAAA,+EAE0BqK,KAF1B,WAGmB,IAHnB,wEAMgChK,IAAMmN,IAAIyN,IAN1C,UAMUE,EANV,OAOIlb,QAAQC,IAAIib,EAAcza,KAAKA,KAAK,GAAG0a,MAAM,OAChB,MAAzBD,EAAc7b,OARtB,0CASaya,EAAQoB,EAAcza,KAAKA,KAAK,GAAG0a,MAAM,QATtD,QAWM7O,MAAM,6BAXZ,0DAcItM,QAAQmT,MAAR,MAdJ,2DALyB,sBAuBzB8G,qBAAU,YAvBe,mCAwBvBmB,GACApb,QAAQC,IAAI4Z,KACX,IAEH,IAAI7U,EAAI,EAER,OACE,yBAAK5F,UAAWyL,EAAQlD,MACtB,6BACE,kBAACT,EAAA,EAAD,CAAYC,QAAQ,KAAKjI,MAAO,CAACsJ,QAAS,OAAQ2F,eAAgB,SAAUqK,QAAS,KACnF,yBAAKlZ,IAAK+b,KAAc7b,IAAI,eAAeqJ,MAAM,MAAMjB,OAAO,QAAO,yBAAK1I,MAAO,CAAC4J,UAAW,QAAxB,aAGzE,kBAACsR,GAAA,EAAD,KACE,kBAACE,GAAA,EAAD,KACE,kBAACV,GAAA,EAAD,KACE,kBAAC,GAAD,CAAiB0B,MAAM,UAAvB,MACA,kBAAC,GAAD,CAAiBlU,MAAM,QAAvB,YAGJ,kBAACmT,GAAA,EAAD,KACGV,EAAOA,EAAKhZ,KAAI,SAAA2Z,GAAO,OACtB,kBAAC,GAAD,CAAgBzZ,IAAMiE,GACtB,kBAAC,GAAD,CAAiBuB,UAAU,KAAKmU,MAAM,OACnC1V,KAEH,kBAAC,GAAD,CAAiBoC,MAAM,QAAQoT,OACZ,WCxE/B1E,IAASyF,cAAc,CACrBC,OAAQ,0CACRC,WAAY,iCACZC,YAAa,wCACbC,UAAW,iBACXC,cAAe,6BACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGjB,IAEMC,GAAY,SAACjd,GAAD,OAF6C,OAAjCuK,aAAaC,QAAQ,QAU/C,kBAAC,IAAWxK,GACZ,kBAAC,IAAD,CAAUC,GAAG,YAIXid,GACJ,kBAAC,IAAD,CAAUlS,MAAOA,IACf,kBAAC,IAAD,KACA,kBAAC,GAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOhI,KAAK,QAAQwE,UAAW2V,KAC/B,kBAAC,IAAD,CAAOna,KAAK,UAAUwE,UAAW4V,KACjC,kBAAC,IAAD,CAAOpa,KAAK,SAASwE,UAAW6V,KAChC,kBAAC,GAAD,CAAWra,KAAK,iBAAiBwE,UAAWrC,IAC5C,kBAAC,GAAD,CAAWnC,KAAK,SAASwE,UAAWqK,KACpC,kBAAC,GAAD,CAAW7O,KAAK,YAAYwE,UAAW6R,KACvC,kBAAC,GAAD,CAAWrW,KAAK,cAAcwE,UAAWuL,KACzC,kBAAC,GAAD,CAAW/P,KAAK,eAAewE,UAAWuL,KAC1C,kBAAC,GAAD,CAAW/P,KAAK,cAAcwE,UAAW8V,KACzC,kBAAC,GAAD,CAAWta,KAAK,WAAWwE,UAAW+V,KACtC,kBAAC,GAAD,CAAWva,KAAK,eAAewE,UAAWgW,KAC1C,kBAAC,GAAD,CAAWxa,KAAK,aAAawE,UAAWiW,KACxC,kBAAC,GAAD,CAAWza,KAAK,WAAWwE,UAAWkW,KACtC,kBAAC,IAAD,CAAUrZ,KAAK,IAAIpE,GAAG,YAM9B0d,IAASC,OAAOV,GAAMW,SAASC,eAAe,W","file":"static/js/main.de52535d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/geosmart_logo.b584ec82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/trofeo.6e8f5de9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/user.2412c938.png\";","module.exports = __webpack_public_path__ + \"static/media/Geosmartlogo.a0465ace.png\";","module.exports = __webpack_public_path__ + \"static/media/BWLogo.fe21ac4b.png\";","module.exports = __webpack_public_path__ + \"static/media/map.4a0d0ee2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/flag.7fbbfd24.png\";","module.exports = __webpack_public_path__ + \"static/media/place.3cbd4b3c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/learntic.0ce8c98a.png\";","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Contact = (props) => (\r\n    <NavLink to={`${props.chatURL}`} style={{color: '#fff'}}>\r\n        <li className=\"contact\">\r\n            <div className=\"wrap\">\r\n                <span className={`contact-status ${props.status}`}></span>\r\n                <img src={props.picURL} alt=\"\" />\r\n                <div className=\"meta\">\r\n                    <p className=\"name\">{props.name}</p>\r\n                    {/* <p className=\"preview\">You just got LITT up, Mike.</p> */}\r\n                </div>\r\n            </div>\r\n        </li>\r\n    </NavLink>\r\n);\r\n\r\nexport default Contact;","//const host = '23.23.230.33';\r\n//const port = '5000';\r\n//const host = '3.92.249.155';\r\n//const port = '5230';\r\n//const host = '3.92.114.227';\r\n//const host = '34.198.84.251';\r\n//const port = '5230';\r\n//const port = '80';\r\n//const host = '35.174.123.91';\r\n//const port = '5000';\r\n\r\nconst host = '54.197.174.175';\r\nconst port = '80';\r\nconst entryPoint = 'graphql';\r\nexport const URL = `http://${host}:${port}/${entryPoint}`;\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n//import Birb from '../../../assets/img/birb.jpg'\r\nimport GeoLogo from '../../../assets/img/geosmart_logo.jpg'\r\nimport UserImage from '../../../assets/img/user.png'\r\nimport Contact from '../Contact'\r\nimport { connect } from 'react-redux';\r\nimport { URL } from \"../../../redux/data/server\";\r\n\r\nclass Sidepanel extends React.Component {\r\n\r\n    state = { \r\n        chats: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getUserChats()\r\n    }\r\n\r\n    getUserChats = async () => { \r\n        // axios.defaults.headers = {\r\n        //     \"Content-Type\": \"application/json\",\r\n        //    // \"Access-Control-Allow-Origin\": \"*\"\r\n        //     //Authorization: `Token ${token}`\r\n        // };\r\n        console.log(this.props.user.username)\r\n        //axios.get(`http://127.0.0.1:8000/api/chat?username=${this.props.user.username}`) //localhost\r\n        //axios.get(`http://18.210.193.21:8000/api/chat?username=${this.props.user.username}`) //remote node\r\n        try {\r\n        const chats_object = await axios.post(URL,{\r\n            query: `\r\n            query{\r\n                getChatsByUsername(\r\n                  username: \"${this.props.user.username}\"\r\n                ) {\r\n                  id\r\n                  participantes\r\n                  messages\r\n                }\r\n              }\r\n          `\r\n        })\r\n\r\n        this.setState({\r\n            chats: chats_object.data.data.getChatsByUsername\r\n        });\r\n        } catch(err) {\r\n            console.log(err);\r\n          }\r\n        // .then(res => {\r\n        //     this.setState({\r\n        //         chats: res.data.getChatsByUsername\r\n        //     });\r\n        // });\r\n\r\n    }\r\n    \r\n    render(){\r\n        const activeChats = this.state.chats.map(c => {\r\n            return (\r\n                <Contact \r\n                    key ={c.id}\r\n                    name ={c.id}\r\n                    picURL={GeoLogo}\r\n                    status=\"online\"\r\n                    chatURL={`/chat/${c.id}`}\r\n                    />\r\n            )\r\n        })\r\n\r\n        var user = this.props.user;\r\n\r\n        return(\r\n            <div id=\"sidepanel\">\r\n        <div id=\"profile\">\r\n            <div className=\"wrap\">\r\n                <img id=\"profile-img\" src={user.profile_picture} className=\"online\" alt=\"\" />\r\n        <p id=\"profile-name\">{user.username}</p>\r\n                <i className=\"fa fa-chevron-down expand-button\" aria-hidden=\"true\"></i>\r\n                <div id=\"status-options\">\r\n                    <ul>\r\n                        <li id=\"status-online\" className=\"active\"><span className=\"status-circle\"></span> <p>Online</p></li>\r\n                        <li id=\"status-away\"><span className=\"status-circle\"></span> <p>Away</p></li>\r\n                        <li id=\"status-busy\"><span className=\"status-circle\"></span> <p>Busy</p></li>\r\n                        <li id=\"status-offline\"><span className=\"status-circle\"></span> <p>Offline</p></li>\r\n                    </ul>\r\n                </div>\r\n                <div id=\"expanded\">\r\n                    {/* <label htmlFor=\"twitter\"><i className=\"fa fa-facebook fa-fw\" aria-hidden=\"true\"></i></label>\r\n                    <input name=\"twitter\" type=\"text\" value=\"mikeross\" />\r\n                    <label htmlFor=\"twitter\"><i className=\"fa fa-twitter fa-fw\" aria-hidden=\"true\"></i></label>\r\n                    <input name=\"twitter\" type=\"text\" value=\"ross81\" />\r\n                    <label htmlFor=\"twitter\"><i className=\"fa fa-instagram fa-fw\" aria-hidden=\"true\"></i></label>\r\n                    <input name=\"twitter\" type=\"text\" value=\"mike.ross\" /> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div id=\"search\">\r\n            <label htmlFor=\"\"><i className=\"fa fa-search\" aria-hidden=\"true\"></i></label>\r\n            <input type=\"text\" placeholder=\"Search contacts...\" />\r\n        </div>\r\n        <div id=\"contacts\">\r\n            <ul>\r\n                {activeChats}\r\n                {/* <li className=\"contact\">\r\n                    <div className=\"wrap\">\r\n                        <span className=\"contact-status busy\"></span>\r\n                        <img src={Birb} alt=\"\" />\r\n                        <div className=\"meta\">\r\n                            <p className=\"name\">Grupo2</p>\r\n                            <p className=\"preview\">Grupo de avistamiento de aves. Más infomación llamar al ....</p>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"contact active\">\r\n                    <div className=\"wrap\">\r\n                        <span className=\"contact-status online\"></span>\r\n                        <img src={GeoLogo} alt=\"\" />\r\n                        <div className=\"meta\">\r\n                            <p className=\"name\" id=\"lateral-group-name\">groupname</p>\r\n                            <p className=\"preview\" id=\"group-lobby\">group description.</p>\r\n                        </div>\r\n                    </div>\r\n                </li> */}\r\n            </ul>\r\n        </div>\r\n        <div id=\"bottom-bar\">\r\n            <button id=\"addcontact\"><i className=\"fa fa-user-plus fa-fw\" aria-hidden=\"true\"></i> <span>Add chat</span></button>\r\n            <button id=\"settings\"><i className=\"fa fa-cog fa-fw\" aria-hidden=\"true\"></i> <span>Settings</span></button>\r\n        </div>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => { // get user in the redux store\r\n    return {\r\n      user: state.user,\r\n    };\r\n  };\r\n\r\n//export default Sidepanel;\r\nexport default connect(mapStateToProps, {})(Sidepanel)","class WebSocketService {\r\n    \r\n    static instance = null;\r\n    callbacks = {};\r\n    \r\n    static getInstance(){\r\n        if(!WebSocketService.instance){\r\n            WebSocketService.instance = new WebSocketService();\r\n        }\r\n        return WebSocketService.instance;\r\n    }\r\n\r\n    constructor(){\r\n        this.socketRef = null;\r\n    }\r\n\r\n    connect(chatUrl){\r\n        //const path = `ws://127.0.0.1:8000/ws/chat/${chatUrl}/`; //For Localhost\r\n        const path = `ws://18.210.193.21:8000/ws/chat/${chatUrl}/`; //For remote node's static IP\r\n        console.log(path);\r\n        this.socketRef = new WebSocket(path);\r\n        this.socketRef.onopen = () => {\r\n            console.log('websocket open');\r\n        };\r\n\r\n        this.socketNewMessage(JSON.stringify({\r\n            command: 'buscar_mensajes'\r\n        }))\r\n\r\n        this.socketRef.onmessage = e => {\r\n            // sending a message\r\n            this.socketNewMessage(e.data);\r\n        }\r\n        this.socketRef.onerror = e => {\r\n            console.log(e.message);\r\n        }\r\n        this.socketRef.onclose = () => {\r\n            console.log('websocket is closed');\r\n            this.connect();\r\n        }\r\n    }\r\n\r\n    disconnect(){\r\n        this.socketRef.close();\r\n    }\r\n\r\n    socketNewMessage(data){\r\n        const parsedData = JSON.parse(data);\r\n        const command = parsedData.command;\r\n        if(Object.keys(this.callbacks).length === 0){\r\n            return;\r\n        }\r\n        if (command === 'messages_dump'){\r\n            this.callbacks[command](parsedData.messages);\r\n        }\r\n        if(command === 'nuevo_mensaje'){\r\n            this.callbacks[command](parsedData.message);\r\n        }\r\n    }\r\n\r\n    fetchMessages(username, chatId){\r\n        this.sendMessage({\r\n            command: 'buscar_mensajes', \r\n            username: username,\r\n            chatId: chatId\r\n        });\r\n    }\r\n\r\n    newChatMessage(message){\r\n        this.sendMessage({\r\n            command: 'nuevo_mensaje', \r\n            from: message.from, \r\n            message: message.content,\r\n            chatId: message.chatId\r\n        });\r\n    }\r\n\r\n    addCallbacks(messagesCallback, newMessageCallback){\r\n        this.callbacks['messages_dump'] = messagesCallback;\r\n        this.callbacks['nuevo_mensaje'] =  newMessageCallback;  \r\n    }\r\n\r\n    sendMessage(data){\r\n        try{\r\n            this.socketRef.send(JSON.stringify({ ...data}))\r\n        } catch (err){\r\n            console.log(err.message);\r\n        }\r\n    }\r\n\r\n    state(){\r\n        return this.socketRef.readyState;\r\n    }\r\n\r\n    waitForSocketConnection(callback){\r\n        const socket = this.socketRef;\r\n        const recursion = this.waitForSocketConnection;\r\n        setTimeout(\r\n            function(){\r\n                if(socket.readyState === 1){\r\n                    console.log('connection is secure');\r\n                    if(callback != null){\r\n                        callback();\r\n                    }\r\n                    return;\r\n                } else {\r\n                    console.log('waiting for connection...');\r\n                    recursion(callback);\r\n                }\r\n            }, 1);\r\n\r\n    }\r\n\r\n}\r\n\r\nconst WebSocketInstance = WebSocketService.getInstance();\r\n\r\nexport default WebSocketInstance;","import React from 'react';\r\nimport chatStyle from '../../assets/css/chat.css'\r\nimport Sidepanel from './Sidepanel/Sidepanel'\r\nimport GeoLogo from '../../assets/img/geosmart_logo.jpg'\r\nimport UserImage from '../../assets/img/user.png'\r\nimport WebSocketInstance from '../../websocket';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction TimeAgo(minutesAgo) {\r\n        \r\n    if(minutesAgo < 60){\r\n        return <small>\r\n            Hace {minutesAgo} minutos\r\n        </small> \r\n    }else if(minutesAgo >= 60 && minutesAgo < 60*24){\r\n        return <small>\r\n            Hace {Math.round(minutesAgo/60)} horas\r\n        </small> \r\n    } else if(minutesAgo >= 60*24){\r\n        return <small>\r\n            Hace {Math.round(minutesAgo/(60*24))} días\r\n            </small>\r\n    }\r\n}\r\n\r\nfunction roomnameText(roomname){\r\n    if(roomname === 'lobby'){\r\n        return \"Elija el grupo de chat en la parte izquierda...\";\r\n    } else {\r\n        return roomname;\r\n    }\r\n}\r\n\r\nclass Chat extends React.Component{\r\n\r\n    state = { message: '' }\r\n\r\n    initializeChat(){\r\n        this.waitForSocketConnection(() => {\r\n                WebSocketInstance.addCallbacks(\r\n                    this.setMessages.bind(this),\r\n                    this.addMessage.bind(this));\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.currentUser,\r\n                this.props.match.params.chatID\r\n                );   \r\n            });\r\n            WebSocketInstance.connect(this.props.match.params.chatID);\r\n    }\r\n\r\n    constructor(props){\r\n        super(props)\r\n        this.initializeChat();\r\n    }\r\n\r\n    UNSAFE_componentWillReceiveProps(newProps){\r\n       //console.log(newProps);\r\n       //this.initializeChat();\r\n       if(this.props.match.params.chatID !== newProps.match.params.chatID){\r\n           WebSocketInstance.disconnect();\r\n           this.waitForSocketConnection(() => {\r\n            WebSocketInstance.fetchMessages(\r\n                this.props.currentUser,\r\n                this.props.match.params.chatID\r\n                );   \r\n            });\r\n            WebSocketInstance.connect(newProps.match.params.chatID);\r\n       }\r\n    }\r\n\r\n    waitForSocketConnection(callback){\r\n        const component = this;\r\n        setTimeout(\r\n            function(){\r\n                if(WebSocketInstance.state() === 1){\r\n                    console.log('connection is secure');\r\n                    callback();\r\n                    return;\r\n                } else {\r\n                    console.log('waiting for connection...');\r\n                    component.waitForSocketConnection(callback);\r\n                }\r\n            }, 1);\r\n\r\n    }\r\n\r\n    setMessages(messages){\r\n        this.setState({messages: messages.reverse()});\r\n    }\r\n\r\n    addMessage(message){\r\n        this.setState({\r\n            messages: [...this.state.messages, message]\r\n        });\r\n    }\r\n\r\n    sendMessageHandler = event =>{\r\n        event.preventDefault();\r\n        const messageObject = {\r\n            from: `${this.props.user.username}`,\r\n            content: this.state.message,\r\n            chatId: this.props.match.params.chatID\r\n        }\r\n        WebSocketInstance.newChatMessage(messageObject);\r\n        this.setState({\r\n            message: ''\r\n        })\r\n    }\r\n\r\n    messageChangeHandler = event =>{\r\n        this.setState({\r\n            message: event.target.value\r\n        });\r\n    }\r\n\r\n\r\n    renderMessages = (messages) => {\r\n        const currentUser = `${this.props.user.username}`;\r\n        return messages.map((message, i, arr) => (\r\n            <li \r\n                key={message.id}\r\n                style={{marginBottom: arr.length - 1 === i ? '300px' : '15px'}}\r\n                className ={message.author === currentUser ? 'sent' : 'replies'} >\r\n                <img src={UserImage} alt=\"\"/>\r\n                <p>\r\n                    <small>\r\n                    {message.author}\r\n                    </small>\r\n                    <br />\r\n                    {message.content}\r\n                    <br />\r\n                    <small>\r\n                    {TimeAgo(Math.round((new Date().getTime() - new Date(message.timestamp))/60000))}\r\n                    </small>\r\n                    {/* <small>\r\n                        \r\n                        {\r\n                        Math.round((new Date().getTime() - new Date(message.timestamp))/60000)\r\n                         } minutes ago\r\n                    </small> */}\r\n                </p>\r\n            </li>\r\n        ));\r\n    }\r\n\r\n    scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    render(){\r\n        const messages = this.state.messages;\r\n\r\n        return(\r\n            <div id=\"frame\">\r\n            <Sidepanel />\r\n            <div className=\"content\">\r\n                <div className=\"contact-profile\">\r\n                    <img src={GeoLogo} alt=\"\" />\r\n                    <p id=\"upper-group-name\">{roomnameText(this.props.match.params.chatID)}</p>\r\n                    <div className=\"social-media\">\r\n                        <i className=\"fa fa-facebook\" aria-hidden=\"true\"></i>\r\n                        <i className=\"fa fa-twitter\" aria-hidden=\"true\"></i>\r\n                         <i className=\"fa fa-instagram\" aria-hidden=\"true\"></i>\r\n                    </div>\r\n                </div>\r\n                <div className=\"messages\">\r\n                    <ul id=\"chat-log\">\r\n                        {\r\n                            messages &&\r\n                            this.renderMessages(messages)\r\n                        }\r\n                        <div style={{ float:\"left\", clear: \"both\" }}\r\n                        ref={(el) => { this.messagesEnd = el; }}>\r\n                    </div>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"message-input\">\r\n                    <form onSubmit={this.sendMessageHandler}>\r\n                        <div className=\"wrap\">\r\n                        <input \r\n                            onChange={this.messageChangeHandler}\r\n                            value={this.state.message}\r\n                            required\r\n                            id =\"chat-message-input\" type=\"text\" placeholder=\"Write your message...\" />\r\n                        <i className=\"fa fa-paperclip attachment\" aria-hidden=\"true\"></i>\r\n                        <button id=\"chat-message-submit\" className=\"submit\">\r\n                        <i className=\"fa fa-paper-plane\" aria-hidden=\"true\"></i>\r\n                        </button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => { // get user in the redux store\r\n    return {\r\n      user: state.user,\r\n    };\r\n  };\r\n\r\nexport default connect(mapStateToProps, {})(Chat);","import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Link from '@material-ui/core/Link';\r\n\r\nexport default function Copyright() {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"/\">\r\n        Geosmart\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n};\r\n\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n  },\r\n  image: {\r\n    backgroundImage: 'url(https://source.unsplash.com/collection/15780809)',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundColor:\r\n      theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\r\n    backgroundSize: 'cover',\r\n    backgroundPosition: 'center',\r\n  },\r\n  paper: {\r\n    margin: theme.spacing(8, 4),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: '#7ab648',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n    backgroundColor: '#3a7ca4',\r\n  },\r\n}));\r\n\r\nexport default useStyles;","export const type = 'loginUser';\r\n\r\nconst loginUser = (user_object) => {\r\n  return {\r\n    type,\r\n    payload: {\r\n      user_object\r\n    },\r\n  };\r\n};\r\n\r\nexport default loginUser;\r\n","export const type = 'logoutUser';\r\n\r\nconst logoutUser = () => {\r\n  return {\r\n    type,\r\n    payload: {\r\n      //user_object\r\n    },\r\n  };\r\n};\r\n\r\nexport default logoutUser;\r\n","export const type = 'updateUser';\r\n\r\nconst updateUser = (user_object) => {\r\n  return {\r\n    type,\r\n    payload: {\r\n      user_object\r\n    },\r\n  };\r\n};\r\n\r\nexport default updateUser;\r\n","import {type as loginUserType} from '../actions/loginUser';\r\nimport {type as updateUserType} from '../actions/updateUser';\r\nimport {type as logOutUserType} from '../actions/logoutUser';\r\n\r\nconst defaultState = JSON.parse(localStorage.getItem('user'));\r\n\r\nfunction reducer(state = defaultState, action) {\r\n  switch(action.type) {\r\n    case loginUserType: {\r\n      console.log(action.payload.user_object);\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user_object));\r\n      localStorage.setItem('token', JSON.stringify(action.payload.user_object.token));\r\n      return state = action.payload.user_object; //se establece en el estado el objeto del user ya logeado\r\n    }\r\n    case updateUserType: {\r\n      console.log(action);\r\n      localStorage.setItem('user', JSON.stringify(action.payload.user_object));\r\n      return state = action.payload.user_object;\r\n    }\r\n    case logOutUserType:{\r\n      console.log(\"Log out user\");\r\n      localStorage.removeItem('user');\r\n      localStorage.removeItem('token');\r\n      return state = null;\r\n    }\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default reducer;\r\n","import { createStore,  combineReducers } from 'redux';\r\nimport user from './reducers/user';\r\n\r\nconst reducer =  combineReducers({\r\n  user,\r\n});\r\n\r\nconst store = createStore(reducer);\r\n\r\nconsole.log(store.getState())\r\n\r\nexport default store;","import { URL } from \"../data/server\";\r\nimport axios from 'axios';\r\nimport logoutUser from '../actions/logoutUser';\r\nimport store from '../store'\r\n\r\n\r\nfunction dispatchLogout(){\r\n  store.dispatch({type:\"logoutUser\"});\r\n}\r\n\r\nexport async function checkToken() {\r\n  const token = localStorage.getItem('token');\r\n  if(!token){\r\n     console.log('No token on storage')\r\n     return dispatchLogout();\r\n  }\r\n  console.log(\"cheking token \");\r\n  const resp = await axios.post(URL, {\r\n                query: `\r\n                query {\r\n                    validateToken(token: ${token.trim()}) {\r\n                      valid\r\n                    }\r\n                  }\r\n                `\r\n              })\r\n\r\n  console.log(resp)\r\n  const valid = resp.data.data.validateToken.valid;\r\n  if(valid == true){\r\n     return true;\r\n  }\r\n  return false;\r\n}\r\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\r\n\r\nimport React, { useState } from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Link from '@material-ui/core/Link';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Copyright from '../components/elfooter/Copyright';\r\nimport Styles from '../assets/JSS/userManagement/Styles';\r\nimport loginUser from '../redux/actions/loginUser';\r\nimport { URL } from \"../redux/data/server\";\r\n\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\n\r\nconst LoginPage = ({ loginUser }) => {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const classes = Styles();\r\n  const history = useHistory();\r\n\r\n  function handleSubmit(event) {\r\n    event.preventDefault();\r\n    if(username.trim().length === 0 || password.trim().length === 0) {\r\n      alert(\"All fields must be filled\");\r\n    } else {\r\n      //logear al usuario\r\n      axios.post(URL, {\r\n        query: `\r\n          mutation {\r\n            loginUser(user: {\r\n              username: \"${username.trim()}\"\r\n              password: \"${password.trim()}\"\r\n            }) {\r\n              _id\r\n              firstname\r\n              lastname\r\n              username\r\n              country\r\n              profile_picture\r\n              created_at\r\n              flag\r\n              token\r\n            }\r\n          }\r\n        `\r\n      })\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          console.log(\"USUARIO: \"+response.data.data.loginUser)\r\n          loginUser(response.data.data.loginUser);\r\n\r\n          history.push({pathname:\"/games\"})\r\n        } else {\r\n          alert(\"Ups! Something went wrong\");\r\n        }\r\n      })\r\n      .catch(() => {\r\n        alert(\"Ups! Something went wrong\");\r\n      });\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Login\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                onChange={(e) => setUsername(e.target.value)}\r\n                autoFocus\r\n              />\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                label=\"Remember me\"\r\n              />\r\n              <Button\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                className={classes.submit}\r\n                onClick={(e) => handleSubmit(e)}\r\n              >\r\n                Login\r\n              </Button>\r\n              <Grid container>\r\n                <Grid item xs>\r\n                  <Link href=\"#\" variant=\"body2\">\r\n                    {\"Login as guest\"}\r\n                  </Link>\r\n                </Grid>\r\n                <Grid item>\r\n                  <Link href=\"/signup\" variant=\"body2\">\r\n                    {\"Don't have an account? Sign Up\"}\r\n                  </Link>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  loginUser: (user) => dispatch(loginUser(user))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage);\r\n","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Copyright from '../components/elfooter/Copyright';\r\nimport Styles from '../assets/JSS/userManagement/Styles';\r\nimport { URL } from '../redux/data/server';\r\n\r\nconst SignupPage = () => {\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [cpassword, setCpassword] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const classes = Styles();\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if(firstname.trim().length === 0 ||\r\n      lastname.trim().length === 0 ||\r\n      username.trim().length === 0 ||\r\n      password.trim().length === 0 ||\r\n      cpassword.trim().length === 0 ||\r\n      country.trim().length === 0\r\n      ) {\r\n        alert(\"All field must be filled\");\r\n    } else if(password.trim() !== cpassword.trim()) {\r\n      alert(\"The password and confirm password fields must be the same\");\r\n    } else {\r\n      // create new user\r\n      try {\r\n        const flag = await axios.get(\r\n          `https://restcountries.eu/rest/v2/name/${country}`\r\n        );\r\n\r\n        const message_object = await axios.post(URL, {\r\n          query: `\r\n            mutation {\r\n              createUser(user: {\r\n                firstname: \"${firstname.trim()}\"\r\n                lastname: \"${lastname.trim()}\"\r\n                username: \"${username.trim()}\"\r\n                password: \"${password.trim()}\"\r\n                country: \"${country.trim()}\"\r\n                flag: \"${flag.data[0].flag}\"\r\n                profile_picture: \"https://github.com/nicrodriguezval/images/blob/main/3382926.jpg?raw=true\"\r\n              }) {\r\n                message\r\n              }\r\n            }\r\n          `\r\n        });\r\n\r\n        //Creates contact for chat application\r\n        const contact_object = await axios.post(URL, {\r\n            query: `\r\n            mutation {\r\n              createContact(contact: {\r\n                username: \"${username.trim()}\",\r\n                firstname: \"${firstname.trim()}\",\r\n                lastname: \"${lastname.trim()}\",\r\n                friends: []}) {\r\n                username\r\n              }\r\n            }\r\n            `\r\n          });\r\n          console.log(\"Contact \" + contact_object.data.data.createContact.username + \" created \")\r\n        //Get all participants in the general chat (provisional query, must have getChatById query! )\r\n        const participantes_object = await axios.post(URL, {\r\n            query: `\r\n            query{\r\n              getChatsByUsername(\r\n                username: \"dummyuser\"\r\n              ) {\r\n                participantes\r\n              }\r\n            }\r\n            `\r\n          });\r\n        //Retrieves all participants from this chat\r\n        var parts = participantes_object.data.data.getChatsByUsername[0].participantes;\r\n        //Adds the current user to the participants list\r\n        parts.push(contact_object.data.data.createContact.username)\r\n        //Updates the chat general to have the recently created user\r\n        const update_parts_object = await axios.post(URL, {\r\n          query: `\r\n          mutation{\r\n            updateChat(\r\n              id: \"general\",\r\n              chat: {id: \"general\",\r\n              participantes: ${JSON.stringify(parts)},\r\n              }){\r\n              id\r\n            }\r\n          }\r\n          `\r\n        });\r\n        console.log(\"User joined chatroom \" + update_parts_object.data.data.updateChat.id + \" successfully \")\r\n\r\n        alert(message_object.data.data.createUser.message);\r\n      } catch(err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n\r\n    return;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Grid container component=\"main\" className={classes.root}>\r\n        <Grid item xs={false} sm={4} md={7} className={classes.image} />\r\n        <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\r\n          <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n              <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component=\"h1\" variant=\"h5\">\r\n              Sign up\r\n            </Typography>\r\n            <form className={classes.form} noValidate>\r\n              <Grid container spacing={2}>\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  autoComplete=\"fname\"\r\n                  name=\"firstName\"\r\n                  id=\"firstName\"\r\n                  label=\"First Name\"\r\n                  onChange={(e) => setFirstname(e.target.value)}\r\n                  fullWidth\r\n                  required\r\n                  autoFocus\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  fullWidth\r\n                  id=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  name=\"lastName\"\r\n                  autoComplete=\"lname\"\r\n                  onChange={(e) => setLastname(e.target.value)}\r\n                  required\r\n                />\r\n                <TextField\r\n                  variant=\"outlined\"\r\n                  margin=\"normal\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"username\"\r\n                  label=\"Username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"username\"\r\n                  onChange={(e) => setUsername(e.target.value)}\r\n                />\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    autoComplete=\"password\"\r\n                    name=\"password\"\r\n                    variant=\"outlined\"\r\n                    id=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                    id=\"cpassword\"\r\n                    label=\"Confirm Password\"\r\n                    type=\"password\"\r\n                    name=\"cpassword\"\r\n                    autoComplete=\"confirm-password\"\r\n                    required\r\n                    fullWidth\r\n                    onChange={(e) => setCpassword(e.target.value)}\r\n                  />\r\n                </Grid>\r\n                <TextField\r\n                  margin=\"normal\"\r\n                  variant=\"outlined\"\r\n                  required\r\n                  fullWidth\r\n                  id=\"country\"\r\n                  label=\"Country\"\r\n                  name=\"country\"\r\n                  autoComplete=\"country\"\r\n                  onChange={(e) => setCountry(e.target.value)}\r\n                />\r\n                <Button\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  className={classes.submit}\r\n                  onClick={(e) => handleSubmit(e)}\r\n                >\r\n                  Sign Up\r\n                </Button>\r\n                <Grid container>\r\n                  <Grid item xs>\r\n                    <Link href=\"/login\" variant=\"body2\">\r\n                      Already have an account? Login\r\n                    </Link>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Box mt={5}>\r\n                <Copyright />\r\n              </Box>\r\n            </form>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignupPage;\r\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\r\n\r\nimport React from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport logo from '../assets/img/homePage/Geosmartlogo.png';\r\nimport logobw from '../assets/img/homePage/BWLogo.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    border: 'black',\r\n    background: '#3497d4',\r\n  },\r\n  item: {\r\n    width: '100%',\r\n    background: '#3F51B5',\r\n    'textAlign': 'center',\r\n    'borderRadius': '5px',\r\n    'marginTop': '120px'\r\n  },\r\n  center: {\r\n    cursor: 'pointer',\r\n    display: 'center',\r\n    justifyContent: 'center',\r\n    'margin': 'auto',\r\n    width: '250px',\r\n    'float': 'left'\r\n  },\r\n  table:{\r\n    width:'100%',\r\n    display:'table'\r\n  },\r\n  top:{\r\n    display: 'table-cell',\r\n    position: 'relative',\r\n    width:'100%',\r\n    height: '100px',\r\n    'background-color': 'rgba(89,144,222,.6)',\r\n    'vertical-align':'middle'\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n}));\r\n\r\nconst HomePage = () => {\r\n  const history = useHistory();\r\n  const routeChange1 = () =>{\r\n    const path = '/login';\r\n    history.push(path);\r\n  };\r\n\r\n  const routeChange2 = () =>{\r\n    const path = '/signup';\r\n    history.push(path);\r\n  };\r\n\r\n  const routeChange3 = () =>{\r\n    const path = '/play/map';\r\n    history.push(path);\r\n  };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div style={{height: \"100vh\"}}>\r\n      <Grid container className={classes.container}>\r\n        <font color = \"white\" size = \"80\">\r\n          <h1 style={{fontFamily: 'system-ui'}}>\r\n            Welcome to Geosmart app.\r\n          </h1>\r\n        </font>\r\n        <Grid item m={12} className={classes.item} >\r\n          <div style={{display: 'flex', flexDirection: 'column'}}>\r\n            <div className ={classes.center}>\r\n              <img src={logo} alt=\"Logo\" width=\"308\" height=\"300\" onClick={routeChange1} />\r\n            </div>\r\n            <div className ={classes.center}>\r\n              <img src={logobw} alt=\"Logo2\" width=\"328\" height=\"320\" onClick={routeChange2} />\r\n            </div>\r\n            <a onClick={routeChange3} style={{fontSize: '2px'}}>Test map</a>\r\n          </div>\r\n        </Grid>\r\n        <Grid>\r\n          <font color = \"white\" face = \"Garamond\">\r\n            <h2 style={{fontFamily: 'system-ui'}}>\r\n              Learn Geography by Playing!\r\n            </h2>\r\n            <h2 style={{fontFamily: 'system-ui'}}>\r\n              Click the color logo to login, or the black and white logo to sign up.\r\n            </h2>\r\n          </font>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst GameCard = (gameConfiguration) => {\r\n  return (\r\n    <Card style={{margin:'3em', height: '100%', width: '100%', borderRadius: '25px',\r\n                  boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'}}>\r\n      <CardActionArea style={{marginTop: '2em'}}>\r\n        <CardMedia\r\n          style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\r\n          image={gameConfiguration.gameImage}\r\n          title=\"Contemplative Reptile\" />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            { gameConfiguration.gameName }\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            { gameConfiguration.gameDescription }\r\n          </Typography>\r\n          {\r\n            gameConfiguration.mapGame ?\r\n              <>\r\n                <Tooltip title=\"Number of game rounds\">\r\n                  <InputLabel style={{marginTop: '2em'}}>Number of rounds: </InputLabel>\r\n                </Tooltip>\r\n                <Select\r\n                  style={{width: '100%'}}\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={gameConfiguration.gameValue}\r\n                  onChange={gameConfiguration.handleFunctionContinent}\r\n                >\r\n                  <MenuItem value={\"5\"}>5 rounds</MenuItem>\r\n                  <MenuItem value={\"6\"}>6 rounds</MenuItem>\r\n                  <MenuItem value={\"7\"}>7 rounds</MenuItem>\r\n                  <MenuItem value={\"8\"}>8 rounds</MenuItem>\r\n                  <MenuItem value={\"9\"}>9 rounds</MenuItem>\r\n                  <MenuItem value={\"10\"}>10 rounds</MenuItem>\r\n                </Select>\r\n              </>\r\n             :\r\n              <>\r\n                <Tooltip title=\"Restrict game questions to a given continent\">\r\n                  <InputLabel style={{marginTop: '2em'}}>Only questions from: </InputLabel>\r\n                </Tooltip>\r\n                <Select\r\n                  style={{width: '100%'}}\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={gameConfiguration.gameValue}\r\n                  onChange={gameConfiguration.handleFunctionContinent}\r\n                >\r\n                  <MenuItem value={\"Global\"}>All the world</MenuItem>\r\n                  <MenuItem value={\"America\"}>America</MenuItem>\r\n                  <MenuItem value={\"Asia\"}>Asia</MenuItem>\r\n                  <MenuItem value={\"Africa\"}>África</MenuItem>\r\n                  <MenuItem value={\"Europe\"}>Europe</MenuItem>\r\n                  <MenuItem value={\"Oceania\"}>Oceania</MenuItem>\r\n                </Select>\r\n              </>\r\n            }\r\n        </CardContent>\r\n      </CardActionArea>\r\n\r\n      <CardActions>\r\n        <Button size=\"small\" color=\"primary\" style={{color: 'white', backgroundColor: '#00bcd4', margin: '0.5em', marginBottom: '1em'}}\r\n                onClick={gameConfiguration.onClickConfiguration}\r\n                >\r\n          Play now\r\n        </Button>\r\n\r\n        {/*\r\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#4CAF50', margin: '1em'}}>\r\n          Play multiplayer\r\n        </Button>\r\n        */}\r\n\r\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#9C27B0', margin: '0.5em', marginBottom: '1em'}}\r\n                  onClick={gameConfiguration.onClickLeaderboard}\r\n                >\r\n          Leaderboard\r\n        </Button>\r\n\r\n        <Button size=\"small\" color=\"primary\"  style={{color: 'white', backgroundColor: '#FF5722', margin: '0.5em', marginBottom: '1em'}}\r\n                  onClick={gameConfiguration.onClickMyRecords}\r\n                >\r\n          My Records\r\n        </Button>\r\n\r\n      </CardActions>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default GameCard;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport GameCard from '../components/gameSelection/GameCard';\r\nimport MapImage from '../assets/img/map.jpg'\r\nimport FlagImage from '../assets/img/flag.png'\r\nimport PlaceImage from '../assets/img/place.jpg'\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\n\r\n\r\nclass Games extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      map_rounds: \"5\",\r\n      flag_continent: \"Global\",\r\n      place_continent: \"Global\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    checkToken();\r\n    //console.log(\"Usuario \"+JSON.stringify(this.props.user))\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props) {}\r\n\r\n  componentWillUnmount() {}\r\n\r\n  handle_map_rounds(e){\r\n    const value = e.target.value;\r\n    this.setState({map_rounds: value})\r\n  }\r\n\r\n  handle_flag_continent(e){\r\n    const value = e.target.value;\r\n    this.setState({flag_continent: value})\r\n  }\r\n\r\n  handle_place_continent(e){\r\n    const value = e.target.value;\r\n    this.setState({place_continent: value})\r\n  }\r\n\r\n  render() {\r\n    /*\r\n    if(!this.props.user){\r\n      return(\r\n        <div style={{margin: \"10em\",fontSize: \"20px\", fontWeight: 600,textAlign: \"center\"}}>\r\n         La sesión ha expirado\r\n        </div>\r\n      )\r\n    }*/\r\n    return (\r\n      <div style={{width: '100%',backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)', minHeight: '100vh'}}>\r\n        <div style={{display: 'flex'}}>\r\n          <GameCard\r\n            gameName=\"Recognize the flag\"\r\n            gameDescription=\"Recognize to which country the indicated flag belongs\"\r\n            handleFunctionContinent={(e) => this.handle_flag_continent(e)}\r\n            gameImage={FlagImage}\r\n            gameValue={this.state.flag_continent}\r\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"2\"})}\r\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"2\"})}\r\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/flags\", filter: this.state.flag_continent, gametype: \"flags\"})}\r\n            />\r\n\r\n          <GameCard\r\n            mapGame={true}\r\n            gameName=\"Locate the country\"\r\n            gameDescription=\"Locate the indicated country on our interactive map on a given series of rounds\"\r\n            handleFunctionContinent={(e) => this.handle_map_rounds(e)}\r\n            gameImage={MapImage}\r\n            gameValue={this.state.map_rounds}\r\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"1\"})}\r\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"1\"})}\r\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/map\", rounds: this.state.map_rounds})}\r\n            />\r\n\r\n          <GameCard\r\n            gameName=\"Recognize the place\"\r\n            gameDescription=\"Recognize to which country the indicated representative place belongs\"\r\n            handleFunctionContinent={(e) => this.handle_place_continent(e)}\r\n            gameImage={PlaceImage}\r\n            gameValue={this.state.place_continent}\r\n            onClickMyRecords={() => this.props.history.push({pathname: \"/myrecords\", gametype: \"3\"})}\r\n            onClickLeaderboard={() => this.props.history.push({pathname: \"/bestscores\", gametype: \"3\"})}\r\n            onClickConfiguration={() => this.props.history.push({pathname: \"/play/places\", filter: this.state.place_continent, gametype: \"places\"})}\r\n            />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Games);\r\n","import React from 'react';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n\r\nclass Loader extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //console.log(\"Usuario \"+JSON.stringify(this.props.user))\r\n\r\n  }\r\n\r\n  componentWillReceiveProps(props) {}\r\n\r\n  componentWillUnmount() {}\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div style={{width: '100%',backgroundImage: 'linear-gradient(315deg, #7f53ac 0%, #647dee 74%)', minHeight: '50em'}}>\r\n       <div style={{textAlign: 'center'}}>\r\n            <CircularProgress\r\n            variant=\"indeterminate\"\r\n            style={{marginTop: '15em', color: '#FFEB3B'}}\r\n            size={200}\r\n            thickness={10}\r\n            value={100}\r\n            />\r\n          <h2 style={{fontFamily: 'system-ui', color: 'white'}}>Loading game...</h2>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { connect } from \"react-redux\";\r\nimport Trofeo from '../assets/img/trofeo.jpg';\r\nimport Loader from '../components/Loader/Loader.js';\r\n\r\nimport axios from 'axios';\r\nimport { URL } from \"../redux/data/server\";\r\n\r\n\r\nconst question_points = 100;\r\n\r\nclass Questions extends React.Component  {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mostrar_boton_next: false,\r\n      correct_selected: false,\r\n      score: 0,\r\n      current_question: 0,\r\n      questions: null,\r\n      questionsx: [\r\n        {\r\n          _id: \"someid\",\r\n          statement: \"¿A que lugar pertenece esta bandera?\",\r\n          image: \"https://upload.wikimedia.org/wikipedia/en/thumb/0/05/Flag_of_Brazil.svg/1200px-Flag_of_Brazil.svg.png\",\r\n          optionA: \"Colombia\",\r\n          optionB: \"Brasil\",\r\n          optionC: \"Ecuador\",\r\n          optionD: \"Perú\",\r\n          ans: \"Brasil\",\r\n          category: \"flags\",\r\n          continent: \"America\",\r\n          created_at: \"somedate\",\r\n          Updated_at: \"otherdate\"\r\n        },\r\n        {\r\n          _id: \"someid\",\r\n          statement: \"¿A que lugar pertenece esta bandera?\",\r\n          image: \"https://upload.wikimedia.org/wikipedia/commons/d/df/Flag_of_Peru_%28state%29.svg\",\r\n          optionA: \"Colombia\",\r\n          optionB: \"Brasil\",\r\n          optionC: \"Ecuador\",\r\n          optionD: \"Perú\",\r\n          ans: \"Perú\",\r\n          category: \"flags\",\r\n          continent: \"America\",\r\n          created_at: \"somedate\",\r\n          Updated_at: \"otherdate\"\r\n        },\r\n        {\r\n        _id: \"someid\",\r\n        statement: \"¿A que lugar pertenece esta bandera?\",\r\n        image: \"https://upload.wikimedia.org/wikipedia/commons/9/9e/Flag_of_Japan.svg\",\r\n        optionA: \"Colombia\",\r\n        optionB: \"Brasil\",\r\n        optionC: \"Japón\",\r\n        optionD: \"Perú\",\r\n        ans: \"Japón\",\r\n        category: \"flags\",\r\n        continent: \"America\",\r\n        created_at: \"somedate\",\r\n        Updated_at: \"otherdate\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n  async insertScore(id_user, score, date_played, id_game){\r\n  const scoreRequest = await axios.post(URL, {\r\n        query: `\r\n        mutation{\r\n            createScore(score:{\r\n                       ID_User: \"${id_user}\",\r\n                       Score: ${score},\r\n                       DatePlayed: \"${date_played}\",\r\n                       ID_Game: \"${id_game}\"\r\n            }){\r\n                 message\r\n            }\r\n          }\r\n\r\n          `\r\n        }\r\n      ).catch(err => {\r\n        console.error(err)\r\n      })\r\n    console.log(scoreRequest)\r\n\r\n   }\r\n\r\nasync getQuestions(){\r\n  console.log(this.props.location.gametype)\r\n  console.log(this.props.location.filter)\r\n  const category = this.props.location.gametype;\r\n  let continent = this.props.location.filter;\r\n  if(continent === \"Global\"){\r\n     continent = \"\"; //no continent in particular\r\n  }\r\n\r\n  const questions = await axios.post(URL, {\r\n  query: `\r\n    query {\r\n      gameQuestions(category: \"${category}\", continent: \"${continent}\") {\r\n        categoria\r\n        ERROR\r\n        preguntas{\r\n          _id\r\n          statement\r\n          optionA\r\n          optionB\r\n          optionC\r\n          optionD\r\n          continent\r\n          image\r\n          ans\r\n        }\r\n       }\r\n      }\r\n      `\r\n    })\r\n  console.log(questions)\r\n  if(questions &&  questions.data &&  questions.data.data){\r\n    return this.setState({questions: questions.data.data.gameQuestions.preguntas})\r\n  }\r\n\r\n }\r\n\r\n\r\n  componentDidMount() {\r\n      console.log(this.props.location)\r\n      if(!this.props.location.gametype){\r\n         return this.props.history.push('/games')\r\n      }\r\n      if(!this.props.user){\r\n         return this.props.history.push('/home')\r\n      }\r\n      this.getQuestions();\r\n\r\n    }\r\n\r\n  componentDidUpdate(props) {\r\n\r\n\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n\r\n  chooseAnswer(question, answer) {\r\n    let points = 0;\r\n    let acertado = false;\r\n    if(question.ans === answer){\r\n       points = question_points;\r\n       acertado = true;\r\n    }\r\n\r\n    return this.setState({score: this.state.score + points, mostrar_boton_next: true, correct_selected: acertado});\r\n  }\r\n\r\n  reiniciar(){\r\n    return this.setState({score:0, current_question:0})\r\n  }\r\n\r\n  nextQuestion(){\r\n\r\n    if(this.state.current_question + 1 >= this.state.questions.length){\r\n       //save score\r\n       var username = this.props.user.username;\r\n       var total_score = this.state.score + 1;\r\n       var date_played = new Date();\r\n       date_played = date_played.toISOString()\r\n       var id_game = \"2\";\r\n       if(this.props.location.gametype === \"places\"){\r\n          id_game = \"3\";\r\n       }\r\n       console.log(date_played)\r\n       this.insertScore(username, total_score, date_played, id_game);\r\n\r\n       //...\r\n       //\r\n    }\r\n\r\n\r\n    return this.setState({current_question: this.state.current_question + 1, mostrar_boton_next: false, correct_selected: false})\r\n  }\r\n\r\n  render() {\r\n    if(this.state.questions == null || this.state.questions == null){\r\n      return(\r\n        <Loader/>\r\n      )\r\n    }\r\n    const question = this.state.questions[this.state.current_question];\r\n    const opbtn = {color: 'white', backgroundColor: '#00bcd4', margin: '1em'}\r\n    const comp_style_flags = { backgroundImage: 'linear-gradient(15deg, #13547a 0%, #80d0c7 100%)',\r\n                               width: '100%', minHeight: '50em', fontFamily: 'system-ui'}\r\n\r\n    const comp_style_places = { backgroundImage: 'linear-gradient(to top, #09203f 0%, #537895 100%)',\r\n                                width: '100%', minHeight: '50em', fontFamily: 'system-ui'}\r\n\r\n    return (\r\n      <div style={this.props.location.gametype && this.props.location.gametype === \"flags\" ? comp_style_flags : comp_style_places}>\r\n       <div style={{display: 'flex', textAlign: 'center', flexDirection: 'column'}}>\r\n\r\n          {\r\n            this.props.location.gametype === \"flags\" ?\r\n              <h2 style={{color: 'white', marginTop: '1.5em', fontWeight: 600, fontSize: '3em'}}>Identify which country the flag belongs to</h2>\r\n            :\r\n              <h2 style={{color: 'white', marginTop: '1.5em', fontWeight: 600, fontSize: '3em'}}>Identify which country the place belongs to</h2>\r\n          }\r\n\r\n          <h3 className=\"score\">\r\n              <span style={{color: 'white'}}>Current score: </span>\r\n              {this.state.score}\r\n          </h3>\r\n\r\n          {\r\n            this.state.current_question >= this.state.questions.length ?\r\n              <Card style={{margin:'0 auto'}} elevation={10}>\r\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\r\n                  <CardMedia\r\n                    style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\r\n                    image={Trofeo}\r\n                    />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      The game is over. your score is: {this.state.score}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n                <CardActions>\r\n                 <div  style={{textAlign: 'center', margin: '0 auto'}}>\r\n                  <Button size=\"small\" color=\"primary\"  onClick={()=>this.props.history.push(\"/games\")}>\r\n                    Back to main menu\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\"  onClick={()=> this.reiniciar()}>\r\n                    Play again\r\n                  </Button>\r\n                 </div>\r\n                </CardActions>\r\n            </Card>\r\n            : null\r\n          }\r\n\r\n          {\r\n           question ?\r\n              <Card style={{margin:'0 auto'}} elevation={10}>\r\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\r\n                  <CardMedia\r\n                    style={{height: 140, width: 200, margin: '0 auto'}}\r\n                    image={question.image}\r\n                    title=\"Contemplative Reptile\"/>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      Question {this.state.current_question}\r\n                    </Typography>\r\n                    {\r\n                      this.state.mostrar_boton_next === true ?\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\" style={{fontSize: '18px'}}>\r\n                        {\r\n                          this.state.correct_selected === true ?\r\n                           <span style={{color: '#07d607', fontWeight: 600}}>Correct! + {question_points}</span>\r\n                          :\r\n                           <span style={{color: 'red', fontWeight: 600}}>Incorrect!</span>\r\n                        }\r\n                      </Typography>\r\n                      :\r\n                      <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {question.statement}\r\n                      </Typography>\r\n                    }\r\n\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n                <CardActions>\r\n                {\r\n                  this.state.mostrar_boton_next === true ?\r\n                  <div  style={{textAlign: 'center', margin: '0 auto'}}>\r\n                   <Button size=\"small\" color=\"primary\" style={opbtn} onClick={()=>this.nextQuestion()}>\r\n                     Next question\r\n                   </Button>\r\n                  </div>\r\n\r\n                  :\r\n                  <div  style={{textAlign: 'center', margin: '0 auto'}}>\r\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionA)}>\r\n                     {question.optionA}\r\n                   </Button>\r\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionB)}>\r\n                     {question.optionB}\r\n                   </Button>\r\n                   <Button size=\"small\" color=\"primary\"  style={opbtn} onClick={()=>this.chooseAnswer(question, question.optionC)}>\r\n                     {question.optionC}\r\n                   </Button>\r\n                   <Button size=\"small\" color=\"primary\"  style={opbtn}  onClick={()=>this.chooseAnswer(question, question.optionD)}>\r\n                     {question.optionD}\r\n                   </Button>\r\n                  </div>\r\n                }\r\n\r\n                </CardActions>\r\n            </Card>\r\n\r\n            : null\r\n          }\r\n\r\n          {\r\n            this.props.location.filter && this.props.location.filter !== 'global' ?\r\n            <h3 style={{color: 'white', fontWeight: 600, fontSize: '2em'}}>Only questions from: {this.props.location.filter}</h3>\r\n            : null\r\n          }\r\n\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    height: '100vh',\r\n    width: '100%',\r\n    overflow: 'hidden',\r\n    backgroundImage: 'linear-gradient(160deg, #0093E9 0%, #80D0C7 100%)',\r\n  },\r\n  paper: {\r\n    display: 'flex',\r\n    margin: 100,\r\n    width: '100%',\r\n    height: 500\r\n  },\r\n  profile_image: {\r\n    width: '100%',\r\n    height: '100%',\r\n  },\r\n  subtitle: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    marginTop: '2em',\r\n  },\r\n  content: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n  }\r\n}));\r\n\r\nconst Profile = ({ user }) => {\r\n  const classes = useStyles();\r\n  const history = useHistory();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container direction=\"row\" spacing={2}>\r\n        <Card className={classes.paper}>\r\n          <Grid item xs={3}>\r\n            <CardMedia\r\n              className={classes.profile_image}\r\n              image={user.profile_picture}\r\n              title=\"Profile picture\"\r\n            />\r\n          </Grid>\r\n          <Grid item xs={9}>\r\n            <Grid direction=\"row\" spacing={2}>\r\n              <CardContent style={{marginLeft: '3em'}}>\r\n                <div style={{display: 'flex', flexDirection: 'row', marginTop: '2em'}}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                      Username\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                <div className={classes.content}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      { user.username }\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                <div className={classes.subtitle}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                      Full name\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                      Created at\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                <div className={classes.content}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      { user.firstname + ' ' + user.lastname }\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      { user.created_at.slice(0, user.created_at.indexOf('T')) }\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                <div className={classes.subtitle}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\" color=\"textSecondary\" component=\"p\">\r\n                      Country\r\n                    </Typography>\r\n                  </Grid>\r\n                </div>\r\n                <div className={classes.content}>\r\n                  <Grid item xs={6}>\r\n                    <Typography variant=\"subtitle1\">\r\n                      { user.country }\r\n                    </Typography>\r\n                    <img src={user.flag} alt=\"Logo\" height=\"7%\" />\r\n                    <Grid imem xs={3} style={{marginTop: '5em'}}>\r\n                      <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={() => history.push({pathname:\"/update-user\"})}\r\n                      >\r\n                        update\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </div>\r\n              </CardContent>\r\n            </Grid>\r\n          </Grid>\r\n        </Card>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => { // get user in the redux store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(Profile)\r\n","import React, { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport firebase from 'firebase';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport Container from '@material-ui/core/Container';\r\nimport Input from '@material-ui/core/Input';\r\nimport AddIcon from \"@material-ui/icons/Publish\";\r\n\r\nimport updateUser from '../redux/actions/updateUser';\r\nimport Copyright from '../components/elfooter/Copyright';\r\nimport Styles from '../assets/JSS/userManagement/Styles';\r\nimport { URL } from \"../redux/data/server\";\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\n\r\nconst UpdateUser = ({ user, updateUser }) => {\r\n  const [firstname, setFirstname] = useState('');\r\n  const [lastname, setLastname] = useState('');\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [npassword, setNpassword] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [profile_picture, setProfilePicture] = useState('');\r\n  const [uploadValue, setUploadValue] = useState(0);\r\n  const [fileName, setFilename] = useState('');\r\n  const classes = Styles();\r\n\r\n  function handleUpload(event) {\r\n    const file = event.target.files[0];\r\n    setFilename(file.name);\r\n    const storageRef = firebase.storage().ref(`/profile_picture/${user.username}`);\r\n    const task = storageRef.put(file);\r\n\r\n    task.on('state_changed', snapshot => {\r\n      let percentage = (snapshot.bytesTransferred/snapshot.totalBytes)*100;\r\n      setUploadValue(percentage);\r\n    }, error => {\r\n      console.log(error.message);\r\n    }, () => {\r\n      task.snapshot.ref.getDownloadURL().then((value) => {\r\n        console.log(value);\r\n        setProfilePicture(value);\r\n        setUploadValue(100);\r\n      });\r\n    });\r\n  };\r\n\r\n  async function handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    if(password.trim().length === 0) {\r\n      alert(\"You must fill the current password field\");\r\n    } else if(password.trim() === npassword.trim()) {\r\n      alert(\"New password and current password are the same\");\r\n    } else if(firstname.trim().length === 0 &&\r\n              lastname.trim().length === 0 &&\r\n              username.trim().length === 0 &&\r\n              npassword.trim().length === 0 &&\r\n              country.trim().length === 0 &&\r\n              profile_picture.length === 0\r\n            ) {\r\n      alert(\"you need to have at least one field filled in addition to the password\");\r\n    } else {\r\n      try {\r\n        var flag = '';\r\n        if(country.trim().length > 0) {\r\n          flag = await axios.get(\r\n            `https://restcountries.eu/rest/v2/name/${country}`\r\n          );\r\n\r\n          flag = flag.data[0].flag;\r\n        }\r\n\r\n        const isValid = await checkToken();\r\n        console.log(isValid)\r\n        if(isValid == false){\r\n           return;\r\n        }\r\n\r\n        const user_object = await axios.post(URL, {\r\n          query: `\r\n            mutation {\r\n              updateUser(id: \"${user._id}\", user: {\r\n                firstname: \"${firstname.trim()}\"\r\n                lastname: \"${lastname.trim()}\"\r\n                username: \"${username.trim()}\"\r\n                password: \"${password.trim()}\"\r\n                new_password: \"${npassword.trim()}\"\r\n                country: \"${country.trim()}\"\r\n                profile_picture: \"${profile_picture}\"\r\n                flag: \"${flag}\"\r\n              }) {\r\n                _id\r\n                firstname\r\n                lastname\r\n                username\r\n                country\r\n                profile_picture\r\n                created_at\r\n                flag\r\n              }\r\n            }\r\n          `\r\n        });\r\n\r\n        if(user_object.status === 200) {\r\n          console.log(user_object);\r\n          updateUser(user_object.data.data.updateUser);\r\n          alert(\"User updated\");\r\n        }\r\n      } catch(err) {\r\n        console.log(err);\r\n        alert(\"Ups! some went wrong\");\r\n      }\r\n    }\r\n\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>\r\n          <Avatar className={classes.avatar}>\r\n            <UpdateIcon />\r\n          </Avatar>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Update Profile\r\n          </Typography>\r\n          <form className={classes.form} noValidate>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              name=\"firstname\"\r\n              label=\"New Firstname\"\r\n              id=\"email\"\r\n              autoComplete=\"firstname\"\r\n              onChange={(e) => setFirstname(e.target.value)}\r\n              fullWidth\r\n              autoFocus\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              name=\"lastname\"\r\n              label=\"New Lastname\"\r\n              id=\"lastname\"\r\n              autoComplete=\"lastname\"\r\n              onChange={(e) => setLastname(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              name=\"username\"\r\n              label=\"New Username\"\r\n              id=\"username\"\r\n              autoComplete=\"username\"\r\n              onChange={(e) => setUsername(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"text\"\r\n              name=\"country\"\r\n              label=\"New Country\"\r\n              id=\"country\"\r\n              autoComplete=\"country\"\r\n              onChange={(e) => setCountry(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              name=\"npassword\"\r\n              label=\"New Password\"\r\n              id=\"npassword\"\r\n              autoComplete=\"new-password\"\r\n              onChange={(e) => setNpassword(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              label=\"Current Password\"\r\n              id=\"password\"\r\n              autoComplete=\"new-password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              fullWidth\r\n              required\r\n            />\r\n            <div style={{marginTop:\"1em\", display: 'flex', flexDirection: 'row'}}>\r\n              <label htmlFor=\"upload-photo\">\r\n                <Input\r\n                  style={{ display: \"none\"}}\r\n                  id=\"upload-photo\"\r\n                  name=\"upload-photo\"\r\n                  type=\"file\"\r\n                  onChange={e => handleUpload(e)}\r\n                />\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  component=\"span\"\r\n                  style={{backgroundColor: '#3a7ca4', marginRight: \"1.5em\"}}\r\n                >\r\n                  <AddIcon style={{marginRight: \"2px\"}}/> Upload photo\r\n                </Button>\r\n              </label>\r\n              <progress value={uploadValue} max=\"100\" style={{width: \"60%\", marginTop:\".7em\"}}/>\r\n            </div>\r\n            <Typography color=\"textSecondary\" variant=\"subtitle1\" style={{marginTop:'0.5em'}}>{fileName}</Typography>\r\n\r\n            <Button\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              onClick={(e) => handleSubmit(e)}\r\n            >\r\n              Update\r\n            </Button>\r\n          </form>\r\n        </div>\r\n        <Box mt={8} style={{marginBottom:\"2em\"}}>\r\n          <Copyright />\r\n        </Box>\r\n      </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => { // get user in the redux store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({ // update user in the redux store\r\n  updateUser: (newUser) => dispatch(updateUser(newUser))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UpdateUser)\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Button from '@material-ui/core/Button';\r\nimport {\r\n  withGoogleMap,\r\n  GoogleMap,\r\n  Marker\r\n} from \"react-google-maps\";\r\nimport Trofeo from '../assets/img/trofeo.jpg'\r\nimport axios from 'axios';\r\nimport { URL } from \"../redux/data/server\";\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\n\r\nconst question_points = 100;\r\nconst icons_urls = [\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/blue-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/red-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/green-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/purple-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/pink-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/orange-dot.png\",\r\n  \"https://www.google.com/intl/en_us/mapfiles/ms/micons/yellow-dot.png\"\r\n]\r\n\r\nconst mapStyles = {\r\n    featureType: \"administrative.country\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n        { visibility: \"off\" }\r\n    ]\r\n}\r\n\r\nconst mapStylesFull = {\r\n    featureType: \"all\",\r\n    elementType: \"labels\",\r\n    stylers: [\r\n        { visibility: \"off\" }\r\n    ]\r\n}\r\n\r\nconst st = {\r\n    \"featureType\": \"all\",\r\n    \"stylers\": [\r\n      { \"color\": \"#aad80e\" }\r\n    ]\r\n  }\r\n\r\nconst GoogleMapComp = withGoogleMap(props => {\r\n  const items = props.options.map((question, i) => {\r\n    const random_icon_index = Math.floor(Math.random() * icons_urls.length);\r\n    return(\r\n      <Marker\r\n        key={\"opt\"+i}\r\n        icon= {{url: icons_urls[random_icon_index] }}\r\n        title={\"option \"+i}\r\n        name={\"option \"+i}\r\n        position={{lat: question.latitude, lng: question.longitude }}\r\n        draggable={false}\r\n        onClick={(e) => {\r\n               props.choose(question)\r\n               }}\r\n       />\r\n     )\r\n  })\r\n\r\n  return(\r\n     <GoogleMap\r\n       defaultCenter={props.center}\r\n       defaultZoom={2}\r\n       defaultOptions={{\r\n            zoomControl: false, styles: [mapStylesFull]\r\n        }}>\r\n      {items}\r\n     </GoogleMap>\r\n   )});\r\n\r\nclass Mapgame extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mostrar_boton_next: false,\r\n      correct_selected: false,\r\n      gameLength: 5,\r\n      score: 0,\r\n      current_question: 0,\r\n      questions: null,\r\n    }\r\n  }\r\n\r\n  async getQuestions(){\r\n    /*\r\n    const isValid = await checkToken();\r\n    console.log(isValid)\r\n    if(isValid == false){\r\n       return;\r\n    }*/\r\n    const continent = 1 + Math.floor(Math.random() * 7);\r\n    const questions = await axios.post(URL, {\r\n    query: `\r\n      query {\r\n        countriesByContinent(id_continent: ${continent}) {\r\n          name\r\n          latitude\r\n          longitude\r\n          }\r\n        }\r\n        `\r\n      })\r\n    console.log(questions)\r\n    if(questions &&  questions.data &&  questions.data.data){\r\n      return this.setState({questions: questions.data.data.countriesByContinent})\r\n    }\r\n\r\n  }\r\n\r\n  async insertScore(id_user, score, date_played, id_game){\r\n    console.log('insert score on map game. score: '+score)\r\n    var insertedScore = await axios.post(URL, {\r\n        query: `\r\n        mutation{\r\n            createScore(score:{\r\n                       ID_User: \"${id_user}\",\r\n                       Score: ${score},\r\n                       DatePlayed: \"${date_played}\",\r\n                       ID_Game: \"${id_game}\"\r\n            }){\r\n                 message\r\n            }\r\n          }\r\n\r\n          `\r\n        }\r\n      ).catch(err => {\r\n        console.error(err)\r\n      })\r\n      console.log(insertedScore)\r\n   }\r\n\r\n  componentDidMount() {\r\n    this.getQuestions()\r\n    /*\r\n    if(!this.props.user){\r\n       return this.props.history.push('/home')\r\n    }*/\r\n\r\n    if(this.props.location.rounds){\r\n       this.setState({gameLength: this.props.location.rounds})\r\n    }\r\n\r\n  }\r\n\r\n\r\n  chooseAnswer(question, answer) {\r\n    console.log(answer)\r\n    let points = 0;\r\n    let acertado = false;\r\n    if(question.latitude === answer.latitude && question.longitude === answer.longitude ){\r\n       points = question_points;\r\n       acertado = true;\r\n    }\r\n\r\n    if(this.state.current_question + 1 >= this.state.gameLength){\r\n      //save score\r\n      var username = this.props.user.username;\r\n      var total_score = this.state.score + points + 1;\r\n      var date_played = new Date();\r\n      date_played = date_played.toISOString()\r\n      var id_game = \"1\";\r\n\r\n      this.insertScore(username, total_score, date_played, id_game)\r\n\r\n      //...\r\n      //\r\n   }\r\n\r\n    this.getQuestions()\r\n    return this.setState({score: this.state.score + points, mostrar_boton_next: true, correct_selected: acertado});\r\n  }\r\n\r\n  nextQuestion(){\r\n\r\n    return this.setState({current_question: this.state.current_question + 1, mostrar_boton_next: false, correct_selected: false});\r\n  }\r\n\r\n  reiniciar(){\r\n    return this.setState({score:0, current_question:0})\r\n  }\r\n\r\n  render() {\r\n    var answer = null;\r\n    const question = this.state.questions;\r\n    if(question){\r\n       answer = Math.floor(Math.random() * this.state.questions.length);\r\n    }\r\n\r\n    const opbtn = { color: 'white', backgroundColor: '#9C27B0', margin: '1em', padding: '0.7em',\r\n                    boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'\r\n                  }\r\n    return (\r\n      <div className=\"map_container\">\r\n       <div className=\"map_flexcontainer\" >\r\n          <h2 style={{color: 'white', fontWeight: 600, fontSize: '3em', maxWidth: '25em', margin: '0 auto', marginTop: '1.5em'}}>\r\n            Identify the location on the map by choosing the correct marker\r\n          </h2>\r\n\r\n          <h3 className=\"score\">\r\n              <span style={{color: 'white'}}>Current score: </span>\r\n              {this.state.score}\r\n          </h3>\r\n\r\n          {\r\n            this.state.current_question >= this.state.gameLength ?\r\n              <Card style={{margin:'0 auto'}} elevation={10}>\r\n                <CardActionArea style={{marginTop: '2em', minWidth: '45em'}}>\r\n                  <CardMedia\r\n                    style={{height: 140, width: 140, margin: '0 auto', borderRadius: '50%'}}\r\n                    image={Trofeo}\r\n                    />\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                      The game is over. your score is: {this.state.score}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                    </Typography>\r\n                  </CardContent>\r\n                </CardActionArea>\r\n\r\n                <CardActions>\r\n                 <div  style={{textAlign: 'center', margin: '0 auto'}}>\r\n                  <Button size=\"small\" color=\"primary\"  onClick={()=>this.props.history.push(\"/games\")}>\r\n                    Back to main menu\r\n                  </Button>\r\n                  <Button size=\"small\" color=\"primary\"  onClick={()=> this.reiniciar()}>\r\n                    Play again\r\n                  </Button>\r\n                 </div>\r\n                </CardActions>\r\n            </Card>\r\n            : null\r\n          }\r\n\r\n          {\r\n             this.state.mostrar_boton_next ?\r\n             <Card style={{margin: '0 auto', width: '20em', padding: '2em', borderRadius: '12px', marginTop: '8em',\r\n                           boxShadow: '0px 6px 6px -3px rgba(0,0,0,0.2), 0px 10px 14px 1px rgba(0,0,0,0.14), 0px 4px 18px 3px rgba(0,0,0,0.12)'\r\n                          }}>\r\n               <div  style={{textAlign: 'center', margin: '0 auto', display: 'flex', flexDirection: 'column'}}>\r\n                 {\r\n                   this.state.correct_selected === true ?\r\n                    <span className=\"mapGameCorrect\">\r\n                        Correct! + {question_points}\r\n                    </span>\r\n                   :\r\n                    <span className=\"mapGameIncorrect\" >\r\n                        Incorrect!\r\n                    </span>\r\n                 }\r\n                <Button size=\"small\" color=\"primary\" style={opbtn} onClick={()=>this.nextQuestion()}>\r\n                  Next question\r\n                </Button>\r\n               </div>\r\n             </Card>\r\n             :\r\n              null\r\n          }\r\n\r\n          {\r\n            question && this.state.mostrar_boton_next !== true &&   this.state.current_question < this.state.gameLength ?\r\n             <>\r\n              <h2 style={{color: \"#FFEB3B\"}}>\r\n                {\"Locate \"+  this.state.questions[answer].name +\" in the map\"}\r\n              </h2>\r\n              <GoogleMapComp\r\n                   center = { { lat:  4.6097100, lng: -74.0817500 } }\r\n                   containerElement={ <div style={{ height: '100%', width: '100%' , overflow: 'hidden', margin: '0 auto'}} /> }\r\n                   mapElement={ <div className=\"map_element\" /> }\r\n                   options = {question}\r\n                   /*\r\n                   optionA =  { question[0]}\r\n                   optionB =  { question[1]}\r\n                   optionC =  { question[2]}\r\n                   optionD =  { question[3]}\r\n                   optionE =  { question[4]}\r\n                   */\r\n                   choose ={(option)=>this.chooseAnswer(question[answer], option)}\r\n\r\n                 />\r\n              </>\r\n              : null\r\n             }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  //loginUser: (username, password) => dispatch(loginUser(username, password))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Mapgame);\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport logoutUser from '../redux/actions/logoutUser';\r\n\r\nconst outItemLeft = {\r\n  marginLeft: '0.6em', marginRight: '1em', color: '#dfdada', textDecoration: 'none', marginTop: '0.8em',\r\n  fontWeight: 600, fontSize: '26px', cursor: 'pointer'\r\n}\r\nconst outItemRight = {\r\n  marginLeft: 'auto', marginRight: '1em', color: '#dfdada', textDecoration: 'none', marginTop: '0.8em',\r\n  fontWeight: 600, fontSize: '26px', cursor: 'pointer'\r\n}\r\n\r\n\r\nclass Navbar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(\"Usuario \"+JSON.stringify(this.props.user))\r\n  }\r\n\r\n  logOut(){\r\n    this.props.logoutUser();\r\n  }\r\n\r\n  render() {\r\n    if(this.props.user == null){ //this.props.user == null\r\n       return(\r\n         <div style={{width: '100%', backgroundColor: '#192023', minHeight: '5em', fontFamily: 'system-ui'}}>\r\n           <div style={{display: 'flex', flexDirection: 'row'}}>\r\n             <Link style={outItemLeft} to=\"/home\">Home</Link>\r\n             <Link style={outItemRight}to=\"/login\">Login</Link>\r\n             <Link style={outItemLeft} to=\"/signup\">Sign up</Link>\r\n           </div>\r\n         </div>\r\n       )\r\n    }\r\n\r\n    return (\r\n      <div style={{width: '100%', backgroundColor: '#192023', minHeight: '5em', fontFamily: 'system-ui'}}>\r\n        <div style={{display: 'flex', flexDirection: 'row'}}>\r\n          <Link className=\"navbtn\" to=\"/games\">Games</Link>\r\n          <Link className=\"navbtn\" to=\"/profile\">Profile</Link>\r\n          <Link className=\"navbtn\" to=\"/update-user\">Update info</Link>\r\n          <Link className=\"navbtn\" to=\"/chat/lobby\" replace >Chat</Link>\r\n          <Link className=\"navbtn\" to=\"/courses\" replace >Learntic courses</Link>\r\n\r\n          <Link style={{marginLeft: 'auto', marginRight: '1em', color: '#e91e63', textDecoration: 'none', marginTop: '0.8em',\r\n                        fontWeight: 600, fontSize: '26px', cursor: 'pointer'}}\r\n                onClick={() => this.logOut()} to=\"/home\">\r\n                Log out\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => { // get user in the redux store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({ // update user in the redux store\r\n  //\r\n  logoutUser: () => dispatch(logoutUser())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)\r\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\";\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\n\r\nimport axios from 'axios';\r\nimport { URL } from \"../redux/data/server\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst BestScore = (props) => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState(0);\r\n  //var rows = [];\r\n\r\n  async function getScores() {\r\n    var gametype = 1;\r\n    if(props.location.gametype){\r\n       gametype = props.location.gametype;\r\n    }\r\n\r\n    try {\r\n      const isValid = await checkToken();\r\n      console.log(isValid)\r\n      if(isValid == false){\r\n         return;\r\n      }\r\n      const score_object = await axios.post(URL, {\r\n        query: `\r\n         query{\r\n           bestScoreByGame(ID_Game: \"${gametype}\"){\r\n             ID\r\n             ID_User\r\n             Score\r\n             DatePlayed\r\n             ID_Game\r\n           }\r\n         }\r\n\r\n       `\r\n      })\r\n      console.log(score_object)\r\n      if (score_object.status === 200) {\r\n        return setRows(score_object.data.data.bestScoreByGame);\r\n      } else {\r\n        alert(\"Ups! Something went wrong\");\r\n      }\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getScores()\r\n    console.log(rows);\r\n  }, [] );\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ID</StyledTableCell>\r\n            <StyledTableCell>Username</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Game</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows ? rows.map(element =>\r\n            <StyledTableRow key={element.ID}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {element.ID}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.ID_User}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.Score-1}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.DatePlayed}</StyledTableCell>\r\n\r\n            {element.ID_Game === \"1\" ?   <StyledTableCell align=\"right\">Recognize the location</StyledTableCell> : null}\r\n            {element.ID_Game === \"2\" ?   <StyledTableCell align=\"right\">Recognize the flag</StyledTableCell> : null}\r\n            {element.ID_Game === \"3\" ?   <StyledTableCell align=\"right\">Recognize the place</StyledTableCell> : null}\r\n\r\n\r\n          </StyledTableRow>) : null}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BestScore);\r\n","// based on https://material-ui.com/getting-started/templates/sign-in-side/\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\nimport axios from 'axios';\r\nimport { URL } from \"../redux/data/server\";\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 700,\r\n  },\r\n});\r\n\r\nconst MyRecords = (props) => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState(0);\r\n  //var rows = [];\r\n\r\n  async function getScores() {\r\n    var gametype = 1;\r\n    if(props.location.gametype){\r\n       gametype = props.location.gametype;\r\n    }\r\n    var username = props.user.username;\r\n\r\n    try {\r\n      const isValid = await checkToken();\r\n      console.log(isValid)\r\n      if(isValid == false){\r\n         return;\r\n      }\r\n      const score_object = await axios.post(URL, {\r\n        query: `\r\n        query{\r\n            bestScoreByUserandGame(ID_User: \"${username}\", ID_Game: \"${gametype}\"){\r\n               ID\r\n               ID_User\r\n               Score\r\n               DatePlayed\r\n               ID_Game\r\n\r\n            }\r\n          }\r\n\r\n\r\n       `\r\n      })\r\n      console.log(score_object)\r\n      if (score_object.status === 200) {\r\n        return setRows(score_object.data.data.bestScoreByUserandGame);\r\n      } else {\r\n        alert(\"Ups! Something went wrong\");\r\n      }\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    getScores()\r\n    console.log(rows);\r\n  }, [] )\r\n\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} aria-label=\"customized table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell>ID</StyledTableCell>\r\n            <StyledTableCell>Username</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Score</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Date</StyledTableCell>\r\n            <StyledTableCell align=\"right\">Game</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows ? rows.map(element =>\r\n            <StyledTableRow key={element.ID}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {element.ID}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.ID_User}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.Score-1}</StyledTableCell>\r\n            <StyledTableCell align=\"right\">{element.DatePlayed}</StyledTableCell>\r\n\r\n            {element.ID_Game == \"1\" ?   <StyledTableCell align=\"right\">Recognize the location</StyledTableCell> : null}\r\n            {element.ID_Game == \"2\" ?   <StyledTableCell align=\"right\">Recognize the flag</StyledTableCell> : null}\r\n            {element.ID_Game == \"3\" ?   <StyledTableCell align=\"right\">Recognize the place</StyledTableCell> : null}\r\n\r\n\r\n          </StyledTableRow>) : null}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MyRecords);\r\n","import React, { useEffect, useState } from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport { connect } from \"react-redux\";\r\nimport {checkToken} from \"../redux/common/checkToken\";\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LearnticLogo from '../assets/img/courses/learntic.png' \r\nimport axios from 'axios';\r\n\r\nconst link = 'http://54.198.239.79:3001/interface/all-courses';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  }\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n    marginTop:'20px'\r\n  },\r\n});\r\n\r\nconst Courses = (props) => {\r\n  const classes = useStyles();\r\n  const [rows, setRows] = useState(0);\r\n  //var rows = [];\r\n\r\n  async function getCourses() {\r\n    try {\r\n      const isValid = await checkToken();\r\n      if(isValid === false){\r\n         return;\r\n      }\r\n      const course_object = await axios.get(link)\r\n      console.log(course_object.data.data[0].split(', '))\r\n      if (course_object.status === 200) {\r\n        return setRows(course_object.data.data[0].split(', '));\r\n      } else {\r\n        alert(\"Ups! Something went wrong\");\r\n      }\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCourses()\r\n    console.log(rows);\r\n  }, [] );\r\n\r\n  var i = 1;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <div>\r\n        <Typography variant=\"h3\" style={{display: 'flex', justifyContent: 'center', padding: 15}}>\r\n          <img src={LearnticLogo} alt=\"LearnticLogo\" width=\"100\" height=\"100\"/><div style={{marginTop: '1em'}}>Courses</div>\r\n        </Typography>\r\n      </div>\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell aling=\"center\">ID</StyledTableCell>\r\n            <StyledTableCell align=\"left\">Course</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows ? rows.map(element =>\r\n            <StyledTableRow key= {i}>\r\n            <StyledTableCell component=\"th\" scope=\"row\">\r\n              {i++}\r\n            </StyledTableCell>\r\n            <StyledTableCell align=\"left\">{element}</StyledTableCell>\r\n          </StyledTableRow>) : null}\r\n        </TableBody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => { //get user in the store\r\n  return {\r\n    user: state.user,\r\n  };\r\n};\r\nconst mapDispatchToProps = {};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Courses);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from \"react-redux\";\r\nimport Chat from './components/Chat/Chat';\r\nimport { BrowserRouter, Route, Switch, Redirect } from \"react-router-dom\";\r\nimport firebase from 'firebase';\r\n// views\r\nimport Login from './views/LoginPage';\r\nimport Signup from './views/SignupPage';\r\nimport Home from './views/HomePage';\r\nimport Games from  './views/Games';\r\nimport Questions from  './views/Questions';\r\n\r\nimport Profile from './views/Profile';\r\nimport UpdateUser from './views/UpdateUser';\r\nimport Mapgame from './views/Mapgame';\r\nimport Navbar from './components/Navbar';\r\nimport BestScores from  './views/BestScores';\r\nimport MyRecords from './views/MyRecords';\r\nimport Courses from './views/Courses'\r\n\r\n\r\n// redux store\r\nimport store from  './redux/store';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyCUVk6-gHqGlZyiFoPIc_32QuIymP8O82c\",\r\n  authDomain: \"geosmart-4830e.firebaseapp.com\",\r\n  databaseURL: \"https://geosmart-4830e.firebaseio.com\",\r\n  projectId: \"geosmart-4830e\",\r\n  storageBucket: \"geosmart-4830e.appspot.com\",\r\n  messagingSenderId: \"715331075251\",\r\n  appId: \"1:715331075251:web:1cc463262287da9c49c4c6\",\r\n  measurementId: \"G-T3PHV83EH2\"\r\n});\r\n\r\nconst isAutenticated = () => (localStorage.getItem('user') !== null) ? true : false;\r\n\r\nconst AuthRoute = (props) => (\r\n  /*\r\n  true\r\n  ? <Route {... props}/>\r\n  : <Route {... props}/>\r\n    */\r\n\r\n  isAutenticated()\r\n  ? <Route {... props}/>\r\n  : <Redirect to=\"/login\" />\r\n\r\n)\r\n\r\nconst Root = (\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n    <Navbar />\r\n      <Switch>\r\n        <Route path=\"/home\" component={Home} />\r\n        <Route path=\"/signup\" component={Signup} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <AuthRoute path=\"/chat/:chatID/\" component={Chat} />\r\n        <AuthRoute path=\"/games\" component={Games} />\r\n        <AuthRoute path=\"/play/map\" component={Mapgame} />\r\n        <AuthRoute path=\"/play/flags\" component={Questions} />\r\n        <AuthRoute path=\"/play/places\" component={Questions} />\r\n        <AuthRoute path=\"/bestscores\" component={BestScores} />\r\n        <AuthRoute path=\"/profile\" component={Profile} />\r\n        <AuthRoute path=\"/update-user\" component={UpdateUser} />\r\n        <AuthRoute path=\"/myrecords\" component={MyRecords} />\r\n        <AuthRoute path=\"/courses\" component={Courses} />\r\n        <Redirect from=\"/\" to=\"home\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  </Provider>\r\n);\r\n\r\nReactDOM.render(Root, document.getElementById('root'));\r\n"],"sourceRoot":""}